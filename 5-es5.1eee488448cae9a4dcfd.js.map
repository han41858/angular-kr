{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts","webpack:///./src/app/custom-elements/code/code-tabs.module.ts","webpack:///./node_modules/@angular/material/esm5/tabs.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./node_modules/@angular/material/esm5/card.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./src/app/custom-elements/code/code-tabs.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts.CodeTabsComponent.html","webpack:///./src/app/custom-elements/code/code-tabs.module.ngfactory.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","MutationObserverFactory","ContentObserver","CdkObserveContent","ObserversModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","prototype","create","callback","MutationObserver","ngInjectableDef","Object","factory","token","providedIn","_mutationObserverFactory","this","_observedElements","Map","ngOnDestroy","_this","forEach","_","element","_cleanupObserver","observe","elementOrRef","observer","subscription","_observeElement","subscribe","unsubscribe","_unobserveElement","has","get","count","stream_1","mutations","next","characterData","childList","subtree","set","stream","_a","disconnect","complete","delete","_contentObserver","_elementRef","_ngZone","event","_disabled","_currentSubscription","defineProperty","value","_unsubscribe","_subscribe","enumerable","configurable","_debounce","ngAfterContentInit","disabled","runOutsideAngular","debounce","pipe","CodeTabsComponent","ngOnInit","tabs","_i","codeExamples_1","Array","from","content","nativeElement","querySelectorAll","length","push","getTabInfo","ngAfterViewInit","codeComponents","toArray","codeComponent","i","code","tabContent","class","getAttribute","innerHTML","language","linenums","path","region","header","code_tabs_module_CodeTabsModule","customElementComponent","_MAT_INK_BAR_POSITIONER","core","left","offsetLeft","width","offsetWidth","MatInkBar","_inkBarPositioner","alignToElement","show","requestAnimationFrame","_setStyles","style","visibility","hide","positions","inkBar","tabs_es5_MatTabLabel","_super","MatTabLabel","apply","arguments","tslib_es6","portal_es5","MatTabBase","tabs_es5_MatTab","MatTab","_viewContainerRef","call","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","ngOnChanges","changes","hasOwnProperty","_explicitContent","_implicitContent","core_es5","tabs_es5_MatTabBodyPortal","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","tabs_es5_MatTabBody","MatTabBody","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","MatTabLabelWrapperBase","tabs_es5_MatTabLabelWrapper","MatTabLabelWrapper","elementRef","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","platform_es5","passive","MatTabHeaderBase","tabs_es5_MatTabHeader","MatTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_selectedIndex","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","coercion_es5","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keycodes_es5","keyCode","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","dirChange","of","resize","realign","a11y_es5","withHorizontalOrientation","withWrap","updateActiveItem","merge","newFocusIndex","_setTabFocus","_previousPaginator","_handlePaginatorPress","_nextPaginator","_onContentChanges","textContent","_currentTextContent","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","transform","Math","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedLabelWrapper","selectedIndex","_inkBar","timer","distance","maxScrollDistance","max","min","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupBase","tabs_es5_MatTabGroup","MatTabGroup","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","_tabs","_subscribeToTabLabels","realignInkBar","_tabHeader","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","idx","MatTabsModule","RenderType_MatTabGroup","encapsulation","styles","data","View_MatTabGroup_3","_l","View_MatTabGroup_2","portal","_ck","_v","parent","context","$implicit","templateLabel","View_MatTabGroup_4","View_MatTabGroup_1","en","$event","ad","component","fesm5_animations","common","ngIf","disableRipple","_co","ariaLabel","ariaLabelledby","unbounded","View_MatTabGroup_5","View_MatTabBody_0","RenderType_MatTabBody","bidi_es5","View_MatTabGroup_0","View_MatTabHeader_0","RenderType_MatTabHeader","scrolling_es5","ngForOf","animation","type","name","definitions","offset","options","undefined","minHeight","expr","timings","View_MatTabBody_1","_portalHost","params","currVal_0","observers_es5","RenderType_MatTab","View_MatTab_1","View_MatTab_0","MatCard","MatCardModule","RenderType_MatCard","View_MatCard_0","RenderType_CodeTabsComponent","View_CodeTabsComponent_2","View_CodeTabsComponent_1","code_component_ngfactory","code_component","snack_bar_es5","pretty_printer_service","copier_service","logger_service","View_CodeTabsComponent_0","dynamicHeight","View_CodeTabsComponent_Host_0","CodeTabsComponentNgFactory","CodeTabsModuleNgFactory","index_ngfactory","overlay_es5","platform_browser","button_es5","code_module"],"mappings":"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","file":"5-es5.1eee488448cae9a4dcfd.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        function (_, element) { return _this._cleanupObserver(element); }));\n    };\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        var _this = this;\n        /** @type {?} */\n        var element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            /** @type {?} */\n            var stream = _this._observeElement(element);\n            /** @type {?} */\n            var subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            });\n        }));\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            var stream_1 = new Subject();\n            /** @type {?} */\n            var observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            function (mutations) { return stream_1.next(mutations); }));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /** Clean up the underlying MutationObserver for the specified element. */\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = (/** @type {?} */ (this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory }\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         */\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._disabled ? this._unsubscribe() : this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        /** Debounce interval for emitting the changes. */\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        /** @type {?} */\n        var stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    CdkObserveContent.propDecorators = {\n        event: [{ type: Output, args: ['cdkObserveContent',] }],\n        disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n        debounce: [{ type: Input }]\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/* tslint:disable component-selector */\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string|null;\n  code: string;\n  language: string|null;\n  linenums: any;\n  path: string;\n  region: string;\n  header: string|null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n\n    for (const tabContent of codeExamples) {\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: Element): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      header: tabContent.getAttribute('header')\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    var method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype.alignToElement = /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                function () { return _this._setStyles(element); }));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.show = /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.hide = /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype._setStyles = /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    MatInkBar.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] }\n    ]; };\n    return MatInkBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    MatTabContent.decorators = [\n        { type: Directive, args: [{ selector: '[matTabContent]' },] },\n    ];\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return MatTabContent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatTabLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                },] },\n    ];\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nMatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\n/** @type {?} */\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        _this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        _this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatTab.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    MatTab.decorators = [\n        { type: Component, args: [{selector: 'mat-tab',\n                    template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                    inputs: ['disabled'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matTab',\n                },] },\n    ];\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nvar matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef) || this;\n        _this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        _this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnInit = /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.detach();\n        }));\n    };\n    /** Clean up centering subscription. */\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnDestroy = /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    MatTabBodyPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabBodyHost]'\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return MatTabBody; })),] }] }\n    ]; };\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MatTabBody = /** @class */ (function () {\n    function MatTabBody(_elementRef, _dir, changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // If the transition to the center is complete, emit an event.\n            if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                _this._onCentered.emit();\n            }\n            if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                _this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    Object.defineProperty(MatTabBody.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: /**\n         * The shifted index position of the tab body, where zero represents the active center tab.\n         * @param {?} position\n         * @return {?}\n         */\n        function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnInit = /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabStarted = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /** The text direction of the containing app. */\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MatTabBody.prototype._getLayoutDirection = /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MatTabBody.prototype._isCenterPosition = /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionAnimationState = /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionFromOrigin = /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    MatTabBody.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-body',\n                    template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTabsAnimations.translateTab],\n                    host: {\n                        'class': 'mat-tab-body',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n    return MatTabBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nMatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\n/** @type {?} */\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.focus = /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    MatTabLabelWrapper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nvar passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nvar HEADER_SCROLL_INTERVAL = 100;\n// Boilerplate for applying mixins to MatTabHeader.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabHeader.\n/**\n * \\@docs-private\n */\nMatTabHeaderBase = /** @class */ (function () {\n    function MatTabHeaderBase() {\n    }\n    return MatTabHeaderBase;\n}());\n/** @type {?} */\nvar _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        _this._platform = _platform;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        _this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        _this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        _this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        _this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        _this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        _this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        _this._stopScrolling = new Subject();\n        _this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        _this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        _this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(_this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this._stopInterval();\n            }));\n        }));\n        return _this;\n    }\n    Object.defineProperty(MatTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceNumberProperty(value);\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /** Handles keyboard events on the header. */\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabHeader.prototype._handleKeydown = /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     */\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentInit = /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        var resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        var realign = (/**\n         * @return {?}\n         */\n        function () {\n            _this.updatePagination();\n            _this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._handlePaginatorPress('after');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MatTabHeader.prototype._onContentChanges = /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent;\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n                _this._changeDetectorRef.markForCheck();\n            }));\n        }\n    };\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    MatTabHeader.prototype.updatePagination = /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        function () {\n            return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabHeader.prototype._isValidIndex = /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        /** @type {?} */\n        var tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._setTabFocus = /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            var containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getLayoutDirection = /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MatTabHeader.prototype._updateTabScrollPosition = /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        var platform = this._platform;\n        /** @type {?} */\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (platform.TRIDENT || platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @return {?}\n         */\n        function () { return this._scrollDistance; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._scrollTo(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollHeader = /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    function (direction) {\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    };\n    /** Handles click events on the pagination arrows. */\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    MatTabHeader.prototype._handlePaginatorClick = /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    function (direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollToLabel = /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    function (labelIndex) {\n        /** @type {?} */\n        var selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        /** @type {?} */\n        var labelBeforePos;\n        /** @type {?} */\n        var labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        /** @type {?} */\n        var beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkPaginationEnabled = /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkScrollingControls = /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MatTabHeader.prototype._alignInkBarToSelectedTab = /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement((/** @type {?} */ (selectedLabelWrapper)));\n    };\n    /** Stops the currently-running paginator interval.  */\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    MatTabHeader.prototype._stopInterval = /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    function () {\n        this._stopScrolling.next();\n    };\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    MatTabHeader.prototype._handlePaginatorPress = /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    function (direction) {\n        var _this = this;\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                _this._stopInterval();\n            }\n        }));\n    };\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    MatTabHeader.prototype._scrollTo = /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    function (position) {\n        /** @type {?} */\n        var maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n    };\n    MatTabHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-header',\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"],\n                    inputs: ['disableRipple'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _labelWrappers: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }],\n        selectedIndex: [{ type: Input }],\n        selectFocusedIndex: [{ type: Output }],\n        indexFocused: [{ type: Output }]\n    };\n    return MatTabHeader;\n}(_MatTabHeaderMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nvar nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar  /**\n * A simple change event emitted on focus or selection changes.\n */\nMatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nMatTabGroupBase = /** @class */ (function () {\n    function MatTabGroupBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupBase;\n}());\n/** @type {?} */\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, _changeDetectorRef, defaultConfig) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        _this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        _this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        _this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        _this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        _this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        _this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        return _this;\n    }\n    Object.defineProperty(MatTabGroup.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: /**\n         * Whether the tab group should grow to the size of the active tab.\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"animationDuration\", {\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get: /**\n         * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n         * @return {?}\n         */\n        function () { return this._animationDuration; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: /**\n         * Background color of the tab group.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentChecked = /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            function () {\n                _this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (tab, index) { return tab.isActive = index === indexToSelect; }));\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                /** @type {?} */\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._subscribeToTabLabels();\n            _this._changeDetectorRef.markForCheck();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    MatTabGroup.prototype.realignInkBar = /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._focusChanged = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._createChangeEvent = /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    MatTabGroup.prototype._subscribeToTabLabels = /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        function (tab) { return tab._stateChanges; }))).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._changeDetectorRef.markForCheck(); }));\n    };\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._clampTabIndex = /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabLabelId = /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabContentId = /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MatTabGroup.prototype._setTabBodyWrapperHeight = /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MatTabGroup.prototype._removeTabBodyWrapperHeight = /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._handleClick = /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    function (tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabIndex = /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    MatTabGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-group',\n                    exportAs: 'matTabGroup',\n                    template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['color', 'disableRipple'],\n                    host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }],\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n    return MatTabGroup;\n}(_MatTabGroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabNav.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabNav.\n/**\n * \\@docs-private\n */\nMatTabNavBase = /** @class */ (function () {\n    function MatTabNavBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabNavBase;\n}());\n/** @type {?} */\nvar _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        _this._onDestroy = new Subject();\n        return _this;\n    }\n    Object.defineProperty(MatTabNav.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: /**\n         * Background color of the tab nav.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    MatTabNav.prototype.updateActiveLink = /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 8.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var dirChange = _this._dir ? _this._dir.change : of(null);\n            return merge(dirChange, _this._viewportRuler.change(10))\n                .pipe(takeUntil(_this._onDestroy))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { return _this._alignInkBar(); }));\n        }));\n    };\n    /** Checks if the active link has been changed and, if so, will update the ink bar. */\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentChecked = /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkChanged) {\n            /** @type {?} */\n            var activeTab = this._tabLinks.find((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            function (tab) { return tab.active; }));\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    };\n    /** Aligns the ink bar to the active link. */\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MatTabNav.prototype._alignInkBar = /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    MatTabNav.decorators = [\n        { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                    exportAs: 'matTabNavBar, matTabNav',\n                    inputs: ['color', 'disableRipple'],\n                    template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n                    styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n                    host: { 'class': 'mat-tab-nav-bar' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler }\n    ]; };\n    MatTabNav.propDecorators = {\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabLinks: [{ type: ContentChildren, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    function () { return MatTabLink; })), { descendants: true },] }],\n        backgroundColor: [{ type: Input }]\n    };\n    return MatTabNav;\n}(_MatTabNavMixinBase));\n// Boilerplate for applying mixins to MatTabLink.\nvar \n// Boilerplate for applying mixins to MatTabLink.\nMatTabLinkBase = /** @class */ (function () {\n    function MatTabLinkBase() {\n    }\n    return MatTabLinkBase;\n}());\n/** @type {?} */\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(_tabNavBar, _elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this._elementRef = _elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        _this._isActive = false;\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, _elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        _this.rippleConfig = globalRippleOptions || {};\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        _focusMonitor.monitor(_elementRef);\n        return _this;\n    }\n    Object.defineProperty(MatTabLink.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        function () { return this._isActive; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get: /**\n         * Whether ripples are disabled on interaction.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabLinkRipple._removeTriggerEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    MatTabLink.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link',\n                        '[attr.aria-current]': 'active',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor }\n    ]; };\n    MatTabLink.propDecorators = {\n        active: [{ type: Input }]\n    };\n    return MatTabLink;\n}(_MatTabLinkMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    MatTabsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                },] },\n    ];\n    return MatTabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa23 };\n//# sourceMappingURL=tabs.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/bidi\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/cdk/portal\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/platform-browser/animations\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nvar MatTabsModuleNgFactory = i0.ɵcmf(i1.MatTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i7.PortalModule, i7.PortalModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i1.MatTabsModule, i1.MatTabsModule, [])]); });\nexport { MatTabsModuleNgFactory as MatTabsModuleNgFactory };\nvar styles_MatTabGroup = [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"];\nvar RenderType_MatTabGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabGroup, data: {} });\nexport { RenderType_MatTabGroup as RenderType_MatTabGroup };\nfunction View_MatTabGroup_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatTabGroup_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_3)), i0.ɵdid(1, 212992, null, 0, i7.CdkPortalOutlet, [i0.ComponentFactoryResolver, i0.ViewContainerRef], { portal: [0, \"portal\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.templateLabel; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_MatTabGroup_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.textLabel; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatTabGroup_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"cdkMonitorElementFocus\", \"\"], [\"class\", \"mat-tab-label mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTabLabelWrapper\", \"\"], [\"role\", \"tab\"]], [[8, \"id\", 0], [1, \"tabIndex\", 0], [1, \"aria-posinset\", 0], [1, \"aria-setsize\", 0], [1, \"aria-controls\", 0], [1, \"aria-selected\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-label-active\", null], [2, \"mat-ripple-unbounded\", null], [2, \"mat-tab-disabled\", null], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handleClick(_v.context.$implicit, i0.ɵnov(_v.parent, 3), _v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), i0.ɵdid(2, 147456, null, 0, i9.CdkMonitorFocus, [i0.ElementRef, i9.FocusMonitor], null, null), i0.ɵdid(3, 16384, [[3, 4]], 0, i1.MatTabLabelWrapper, [i0.ElementRef], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-label-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_2)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_4)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = (_v.context.$implicit.disabled || _co.disableRipple); _ck(_v, 1, 0, currVal_12); var currVal_13 = _v.context.$implicit.disabled; _ck(_v, 3, 0, currVal_13); var currVal_14 = _v.context.$implicit.templateLabel; _ck(_v, 6, 0, currVal_14); var currVal_15 = !_v.context.$implicit.templateLabel; _ck(_v, 8, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabLabelId(_v.context.index); var currVal_1 = _co._getTabIndex(_v.context.$implicit, _v.context.index); var currVal_2 = (_v.context.index + 1); var currVal_3 = _co._tabs.length; var currVal_4 = _co._getTabContentId(_v.context.index); var currVal_5 = (_co.selectedIndex == _v.context.index); var currVal_6 = (_v.context.$implicit.ariaLabel || null); var currVal_7 = ((!_v.context.$implicit.ariaLabel && _v.context.$implicit.ariaLabelledby) ? _v.context.$implicit.ariaLabelledby : null); var currVal_8 = (_co.selectedIndex == _v.context.index); var currVal_9 = i0.ɵnov(_v, 1).unbounded; var currVal_10 = i0.ɵnov(_v, 3).disabled; var currVal_11 = !!i0.ɵnov(_v, 3).disabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_MatTabGroup_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"], [\"role\", \"tabpanel\"]], [[8, \"id\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-body-active\", null]], [[null, \"_onCentered\"], [null, \"_onCentering\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"_onCentered\" === en)) {\n        var pd_0 = (_co._removeTabBodyWrapperHeight() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"_onCentering\" === en)) {\n        var pd_1 = (_co._setTabBodyWrapperHeight($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], { _content: [0, \"_content\"], origin: [1, \"origin\"], animationDuration: [2, \"animationDuration\"], position: [3, \"position\"] }, { _onCentering: \"_onCentering\", _onCentered: \"_onCentered\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.context.$implicit.content; var currVal_4 = _v.context.$implicit.origin; var currVal_5 = _co.animationDuration; var currVal_6 = _v.context.$implicit.position; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabContentId(_v.context.index); var currVal_1 = _co._getTabLabelId(_v.context.index); var currVal_2 = (_co.selectedIndex == _v.context.index); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatTabGroup_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _tabBodyWrapper: 0 }), i0.ɵqud(671088640, 2, { _tabHeader: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], [[null, \"indexFocused\"], [null, \"selectFocusedIndex\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"indexFocused\" === en)) {\n        var pd_0 = (_co._focusChanged($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectFocusedIndex\" === en)) {\n        var pd_1 = ((_co.selectedIndex = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(3, 7520256, [[2, 4], [\"tabHeader\", 4]], 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], { disableRipple: [0, \"disableRipple\"], selectedIndex: [1, \"selectedIndex\"] }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }), i0.ɵqud(603979776, 3, { _labelWrappers: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_MatTabGroup_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(7, 0, [[1, 0], [\"tabBodyWrapper\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_5)), i0.ɵdid(9, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.disableRipple; var currVal_3 = _co.selectedIndex; _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_4 = _co._tabs; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co._tabs; _ck(_v, 9, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 3)._getLayoutDirection() == \"rtl\"); _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MatTabGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-group\", [[\"class\", \"mat-tab-group\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, View_MatTabGroup_0, RenderType_MatTabGroup)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i1.MAT_TABS_CONFIG]], null, null), i0.ɵqud(603979776, 1, { _tabs: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 1).headerPosition === \"below\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabGroupNgFactory = i0.ɵccf(\"mat-tab-group\", i1.MatTabGroup, View_MatTabGroup_Host_0, { color: \"color\", disableRipple: \"disableRipple\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", backgroundColor: \"backgroundColor\" }, { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, []);\nexport { MatTabGroupNgFactory as MatTabGroupNgFactory };\nvar styles_MatTabBody = [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"];\nvar RenderType_MatTabBody = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabBody, data: { \"animation\": [{ type: 7, name: \"translateTab\", definitions: [{ type: 0, name: \"center, void, left-origin-center, right-origin-center\", styles: { type: 6, styles: { transform: \"none\" }, offset: null }, options: undefined }, { type: 0, name: \"left\", styles: { type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 0, name: \"right\", styles: { type: 6, styles: { transform: \"translate3d(100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => left, * => right, left => center, right => center\", animation: { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }, options: null }, { type: 1, expr: \"void => left-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }, { type: 1, expr: \"void => right-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatTabBody as RenderType_MatTabBody };\nfunction View_MatTabBody_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTabBody_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _portalHost: 0 }), (_l()(), i0.ɵeld(1, 0, [[\"content\", 1]], null, 4, \"div\", [[\"class\", \"mat-tab-body-content\"]], [[24, \"@translateTab\", 0]], [[null, \"@translateTab.start\"], [null, \"@translateTab.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@translateTab.start\" === en)) {\n        var pd_0 = (_co._onTranslateTabStarted($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@translateTab.done\" === en)) {\n        var pd_1 = (_co._translateTabComplete.next($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵpod(2, { animationDuration: 0 }), i0.ɵpod(3, { value: 0, params: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabBody_1)), i0.ɵdid(5, 212992, null, 0, i1.MatTabBodyPortal, [i0.ComponentFactoryResolver, i0.ViewContainerRef, i1.MatTabBody], null, null)], function (_ck, _v) { _ck(_v, 5, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co._position, _ck(_v, 2, 0, _co.animationDuration)); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MatTabBody_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"]], null, null, null, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabBodyNgFactory = i0.ɵccf(\"mat-tab-body\", i1.MatTabBody, View_MatTabBody_Host_0, { _content: \"content\", origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, []);\nexport { MatTabBodyNgFactory as MatTabBodyNgFactory };\nvar styles_MatTabHeader = [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"];\nvar RenderType_MatTabHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabHeader, data: {} });\nexport { RenderType_MatTabHeader as RenderType_MatTabHeader };\nexport function View_MatTabHeader_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), i0.ɵqud(402653184, 2, { _tabListContainer: 0 }), i0.ɵqud(402653184, 3, { _tabList: 0 }), i0.ɵqud(671088640, 4, { _nextPaginator: 0 }), i0.ɵqud(671088640, 5, { _previousPaginator: 0 }), (_l()(), i0.ɵeld(5, 0, [[5, 0], [\"previousPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"], [null, \"mousedown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handlePaginatorClick(\"before\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mousedown\" === en)) {\n        var pd_1 = (_co._handlePaginatorPress(\"before\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(6, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, [[2, 0], [\"tabListContainer\", 1]], null, 6, \"div\", [[\"class\", \"mat-tab-label-container\"]], null, [[null, \"keydown\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (_co._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(9, 0, [[3, 0], [\"tabList\", 1]], null, 5, \"div\", [[\"class\", \"mat-tab-list\"], [\"role\", \"tablist\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onContentChanges() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(10, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"div\", [[\"class\", \"mat-tab-labels\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(14, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null), (_l()(), i0.ɵeld(15, 0, [[4, 0], [\"nextPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"mousedown\"], [null, \"click\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mousedown\" === en)) {\n        var pd_0 = (_co._handlePaginatorPress(\"after\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co._handlePaginatorClick(\"after\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(16, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(17, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_co._disableScrollBefore || _co.disableRipple); _ck(_v, 6, 0, currVal_2); var currVal_5 = (_co._disableScrollAfter || _co.disableRipple); _ck(_v, 16, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._disableScrollBefore; var currVal_1 = i0.ɵnov(_v, 6).unbounded; _ck(_v, 5, 0, currVal_0, currVal_1); var currVal_3 = _co._disableScrollAfter; var currVal_4 = i0.ɵnov(_v, 16).unbounded; _ck(_v, 15, 0, currVal_3, currVal_4); }); }\nexport function View_MatTabHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], null, null, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(1, 7520256, null, 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], null, null), i0.ɵqud(603979776, 1, { _labelWrappers: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 1)._getLayoutDirection() == \"rtl\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabHeaderNgFactory = i0.ɵccf(\"mat-tab-header\", i1.MatTabHeader, View_MatTabHeader_Host_0, { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, [\"*\"]);\nexport { MatTabHeaderNgFactory as MatTabHeaderNgFactory };\nvar styles_MatTab = [];\nvar RenderType_MatTab = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTab, data: {} });\nexport { RenderType_MatTab as RenderType_MatTab };\nfunction View_MatTab_1(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTab_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _implicitContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2]], null, 0, null, View_MatTab_1))], null, null); }\nexport function View_MatTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 3, \"mat-tab\", [], null, null, null, View_MatTab_0, RenderType_MatTab)), i0.ɵdid(1, 770048, null, 2, i1.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 1, { templateLabel: 0 }), i0.ɵqud(335544320, 2, { _explicitContent: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabNgFactory = i0.ɵccf(\"mat-tab\", i1.MatTab, View_MatTab_Host_0, { disabled: \"disabled\", textLabel: \"label\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\" }, {}, [\"*\"]);\nexport { MatTabNgFactory as MatTabNgFactory };\nvar styles_MatTabNav = [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"];\nvar RenderType_MatTabNav = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabNav, data: {} });\nexport { RenderType_MatTabNav as RenderType_MatTabNav };\nexport function View_MatTabNav_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-links\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._alignInkBar() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(5, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null)], null, null); }\nexport function View_MatTabNav_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"mat-tab-nav-bar\"], [\"mat-tab-nav-bar\", \"\"]], null, null, null, View_MatTabNav_0, RenderType_MatTabNav)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabNav, [i0.ElementRef, [2, i4.Directionality], i0.NgZone, i0.ChangeDetectorRef, i11.ViewportRuler], null, null), i0.ɵqud(603979776, 1, { _tabLinks: 1 })], null, null); }\nvar MatTabNavNgFactory = i0.ɵccf(\"[mat-tab-nav-bar]\", i1.MatTabNav, View_MatTabNav_Host_0, { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, {}, [\"*\"]);\nexport { MatTabNavNgFactory as MatTabNavNgFactory };\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\n    MatCardContent.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-card-content' }\n                },] },\n    ];\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\n    MatCardTitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                    host: {\n                        'class': 'mat-card-title'\n                    }\n                },] },\n    ];\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\n    MatCardSubtitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                    host: {\n                        'class': 'mat-card-subtitle'\n                    }\n                },] },\n    ];\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n    MatCardActions.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    }\n                },] },\n    ];\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\n    MatCardFooter.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' }\n                },] },\n    ];\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\n    MatCardImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' }\n                },] },\n    ];\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\n    MatCardSmImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' }\n                },] },\n    ];\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\n    MatCardMdImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' }\n                },] },\n    ];\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\n    MatCardLgImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' }\n                },] },\n    ];\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\n    MatCardXlImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' }\n                },] },\n    ];\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\n    MatCardAvatar.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' }\n                },] },\n    ];\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    function MatCard() {\n    }\n    MatCard.decorators = [\n        { type: Component, args: [{selector: 'mat-card',\n                    exportAs: 'matCard',\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card' }\n                },] },\n    ];\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\n    MatCardHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-card-header',\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-header' }\n                },] },\n    ];\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\n    MatCardTitleGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-card-title-group',\n                    template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-title-group' }\n                },] },\n    ];\n    return MatCardTitleGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\n    MatCardModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                        MatCardXlImage, MatCardAvatar,\n                    ],\n                },] },\n    ];\n    return MatCardModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n//# sourceMappingURL=card.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/platform-browser\";\nvar MatCardModuleNgFactory = i0.ɵcmf(i1.MatCardModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(1073742336, i3.MatCommonModule, i3.MatCommonModule, [[2, i3.MATERIAL_SANITY_CHECKS], [2, i4.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatCardModule, i1.MatCardModule, [])]); });\nexport { MatCardModuleNgFactory as MatCardModuleNgFactory };\nvar styles_MatCard = [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"];\nvar RenderType_MatCard = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCard, data: {} });\nexport { RenderType_MatCard as RenderType_MatCard };\nexport function View_MatCard_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), i0.ɵncd(null, 1)], null, null); }\nexport function View_MatCard_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, View_MatCard_0, RenderType_MatCard)), i0.ɵdid(1, 49152, null, 0, i1.MatCard, [], null, null)], null, null); }\nvar MatCardNgFactory = i0.ɵccf(\"mat-card\", i1.MatCard, View_MatCard_Host_0, {}, {}, [\"*\", \"mat-card-footer\"]);\nexport { MatCardNgFactory as MatCardNgFactory };\nvar styles_MatCardHeader = [];\nvar RenderType_MatCardHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardHeader, data: {} });\nexport { RenderType_MatCardHeader as RenderType_MatCardHeader };\nexport function View_MatCardHeader_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"mat-card-header-text\"]], null, null, null, null, null)), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-header\", [[\"class\", \"mat-card-header\"]], null, null, null, View_MatCardHeader_0, RenderType_MatCardHeader)), i0.ɵdid(1, 49152, null, 0, i1.MatCardHeader, [], null, null)], null, null); }\nvar MatCardHeaderNgFactory = i0.ɵccf(\"mat-card-header\", i1.MatCardHeader, View_MatCardHeader_Host_0, {}, {}, [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"]);\nexport { MatCardHeaderNgFactory as MatCardHeaderNgFactory };\nvar styles_MatCardTitleGroup = [];\nvar RenderType_MatCardTitleGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardTitleGroup, data: {} });\nexport { RenderType_MatCardTitleGroup as RenderType_MatCardTitleGroup };\nexport function View_MatCardTitleGroup_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardTitleGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-title-group\", [[\"class\", \"mat-card-title-group\"]], null, null, null, View_MatCardTitleGroup_0, RenderType_MatCardTitleGroup)), i0.ɵdid(1, 49152, null, 0, i1.MatCardTitleGroup, [], null, null)], null, null); }\nvar MatCardTitleGroupNgFactory = i0.ɵccf(\"mat-card-title-group\", i1.MatCardTitleGroup, View_MatCardTitleGroup_Host_0, {}, {}, [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"]);\nexport { MatCardTitleGroupNgFactory as MatCardTitleGroupNgFactory };\n","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../node_modules/@angular/material/tabs/typings/index.ngfactory\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code.component\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"./pretty-printer.service\";\nimport * as i7 from \"../../shared/copier.service\";\nimport * as i8 from \"../../shared/logger.service\";\nimport * as i9 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"./code-tabs.component\";\nvar styles_CodeTabsComponent = [];\nvar RenderType_CodeTabsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CodeTabsComponent, data: {} });\nexport { RenderType_CodeTabsComponent as RenderType_CodeTabsComponent };\nfunction View_CodeTabsComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.parent.context.$implicit.class, \"\"); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.header; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_CodeTabsComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 7, \"mat-tab\", [[\"style\", \"overflow-y: hidden;\"]], null, null, null, i1.View_MatTab_0, i1.RenderType_MatTab)), i0.ɵdid(1, 770048, [[3, 4]], 2, i2.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 4, { templateLabel: 0 }), i0.ɵqud(335544320, 5, { _explicitContent: 0 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CodeTabsComponent_2)), i0.ɵdid(5, 16384, [[4, 4]], 0, i2.MatTabLabel, [i0.TemplateRef, i0.ViewContainerRef], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 1, \"aio-code\", [], [[8, \"className\", 0]], null, null, i3.View_CodeComponent_0, i3.RenderType_CodeComponent)), i0.ɵdid(7, 573440, [[2, 4]], 0, i4.CodeComponent, [i5.MatSnackBar, i6.PrettyPrinter, i7.CopierService, i8.Logger], { language: [0, \"language\"], linenums: [1, \"linenums\"], path: [2, \"path\"], region: [3, \"region\"], header: [4, \"header\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { _ck(_v, 1, 0); var currVal_1 = _v.context.$implicit.language; var currVal_2 = _v.context.$implicit.linenums; var currVal_3 = _v.context.$implicit.path; var currVal_4 = _v.context.$implicit.region; var currVal_5 = _v.context.$implicit.header; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.class, \"\"); _ck(_v, 6, 0, currVal_0); }); }\nexport function View_CodeTabsComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { content: 0 }), i0.ɵqud(671088640, 2, { codeComponents: 1 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"content\", 1]], null, 1, \"div\", [[\"style\", \"display: none\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, i9.View_MatCard_0, i9.RenderType_MatCard)), i0.ɵdid(5, 49152, null, 0, i10.MatCard, [], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 4, \"mat-tab-group\", [[\"class\", \"code-tab-group mat-tab-group\"], [\"disableRipple\", \"\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, i1.View_MatTabGroup_0, i1.RenderType_MatTabGroup)), i0.ɵdid(7, 3325952, null, 1, i2.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i2.MAT_TABS_CONFIG]], { disableRipple: [0, \"disableRipple\"] }, null), i0.ɵqud(603979776, 3, { _tabs: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CodeTabsComponent_1)), i0.ɵdid(10, 278528, null, 0, i11.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"\"; _ck(_v, 7, 0, currVal_2); var currVal_3 = _co.tabs; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 7).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 7).headerPosition === \"below\"); _ck(_v, 6, 0, currVal_0, currVal_1); }); }\nexport function View_CodeTabsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"code-tabs\", [], null, null, null, View_CodeTabsComponent_0, RenderType_CodeTabsComponent)), i0.ɵdid(1, 4308992, null, 0, i12.CodeTabsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CodeTabsComponentNgFactory = i0.ɵccf(\"code-tabs\", i12.CodeTabsComponent, View_CodeTabsComponent_Host_0, { linenums: \"linenums\" }, {}, [\"*\"]);\nexport { CodeTabsComponentNgFactory as CodeTabsComponentNgFactory };\n","\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./code-tabs.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/snack-bar/typings/index.ngfactory\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code-tabs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"./pretty-printer.service\";\nimport * as i10 from \"../../shared/logger.service\";\nimport * as i11 from \"../../shared/copier.service\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/platform-browser\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/cdk/portal\";\nimport * as i16 from \"@angular/cdk/platform\";\nimport * as i17 from \"@angular/cdk/a11y\";\nimport * as i18 from \"@angular/material/tabs\";\nimport * as i19 from \"@angular/cdk/scrolling\";\nimport * as i20 from \"@angular/material/button\";\nimport * as i21 from \"@angular/material/snack-bar\";\nimport * as i22 from \"./code.module\";\nvar CodeTabsModuleNgFactory = i0.ɵcmf(i1.CodeTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatSnackBarContainerNgFactory, i2.SimpleSnackBarNgFactory, i3.CodeComponentNgFactory, i4.CodeTabsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality, [2, i5.Location]]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(4608, i9.PrettyPrinter, i9.PrettyPrinter, [i10.Logger]), i0.ɵmpd(4608, i11.CopierService, i11.CopierService, []), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i13.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i14.MatCardModule, i14.MatCardModule, []), i0.ɵmpd(1073742336, i15.PortalModule, i15.PortalModule, []), i0.ɵmpd(1073742336, i16.PlatformModule, i16.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i17.A11yModule, i17.A11yModule, []), i0.ɵmpd(1073742336, i18.MatTabsModule, i18.MatTabsModule, []), i0.ɵmpd(1073742336, i19.ScrollingModule, i19.ScrollingModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i20.MatButtonModule, i20.MatButtonModule, []), i0.ɵmpd(1073742336, i21.MatSnackBarModule, i21.MatSnackBarModule, []), i0.ɵmpd(1073742336, i22.CodeModule, i22.CodeModule, []), i0.ɵmpd(1073742336, i1.CodeTabsModule, i1.CodeTabsModule, [])]); });\nexport { CodeTabsModuleNgFactory as CodeTabsModuleNgFactory };\n"],"sourceRoot":""}