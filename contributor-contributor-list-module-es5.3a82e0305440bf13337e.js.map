{"version":3,"sources":["webpack:///src/app/custom-elements/contributor/contributor.service.ts","webpack:///src/app/custom-elements/contributor/contributor.component.ts","webpack:///src/app/custom-elements/contributor/contributor-list.component.ts","webpack:///src/app/custom-elements/contributor/contributor-list.module.ts"],"names":["ContributorService","contributorsPath","knownGroups","http","this","contributors","getContributors","get","pipe","map","contribs","contribMap","Object","keys","forEach","key","contributor","groups","group","push","cmap","order","indexOf","name","length","sort","compareContributors","compareGroups","publishLast","connect","l","r","toUpperCase","$event","stopPropagation","ContributorComponent","noPicture","pictureBase","person","isFlipped","flipCard","ContributorListModule","ContributorListComponent","contributorService","locationService","groupName","search","subscribe","grps","groupNames","g","selectGroup","toLowerCase","selectedGroup","find","setSearch","customElementComponent"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Contributor, ContributorGroup } from './contributors.model';\n\n// TODO(andrewjs): Look into changing this so that we don't import the service just to get the const\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst contributorsPath = CONTENT_URL_PREFIX + 'contributors.json';\nconst knownGroups = ['Angular', 'Collaborators', 'GDE'];\n\n@Injectable()\nexport class ContributorService {\n  contributors: Observable<ContributorGroup[]>;\n\n  constructor(private http: HttpClient) {\n    this.contributors = this.getContributors();\n  }\n\n  private getContributors() {\n    const contributors = this.http.get<{[key: string]: Contributor}>(contributorsPath).pipe(\n      // Create group map\n      map(contribs => {\n        const contribMap: { [name: string]: Contributor[]} = {};\n        Object.keys(contribs).forEach(key => {\n          const contributor = contribs[key];\n          contributor.groups.forEach(group => {\n            const contribGroup = contribMap[group] || (contribMap[group] = []);\n            contribGroup.push(contributor);\n          });\n        });\n\n        return contribMap;\n      }),\n\n      // Flatten group map into sorted group array of sorted contributors\n      map(cmap => {\n        return Object.keys(cmap).map(key => {\n          const order = knownGroups.indexOf(key);\n          return {\n            name: key,\n            order: order === -1 ? knownGroups.length : order,\n            contributors: cmap[key].sort(compareContributors)\n          } as ContributorGroup;\n        })\n        .sort(compareGroups);\n      }),\n\n      publishLast(),\n    );\n\n    (contributors as ConnectableObservable<ContributorGroup[]>).connect();\n    return contributors;\n  }\n}\n\nfunction compareContributors(l: Contributor, r: Contributor) {\n return l.name.toUpperCase() > r.name.toUpperCase() ? 1 : -1;\n}\n\nfunction compareGroups(l: ContributorGroup, r: ContributorGroup) {\n  return l.order === r.order ?\n    (l.name > r.name ? 1 : -1) :\n     l.order > r.order ? 1 : -1;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Contributor } from './contributors.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\n@Component({\n  selector: 'aio-contributor',\n  template: `\n    <div [ngClass]=\"{ 'flipped': person.isFlipped }\" class=\"contributor-card\">\n\n        <div class=\"card-front\" (click)=\"flipCard(person)\" (keyup.enter)=\"flipCard(person)\">\n            <h3>{{person.name}}</h3>\n\n            <div class=\"contributor-image\" [style.background-image]=\"'url('+pictureBase+(person.picture || noPicture)+')'\">\n                <div class=\"contributor-info\">\n                    <a *ngIf=\"person.bio\" mat-button class=\"info-item\">\n                        View Bio\n                    </a>\n                    <a *ngIf=\"person.twitter\" mat-icon-button class=\"info-item icon\"\n                        href=\"https://twitter.com/{{person.twitter}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\n                        <mat-icon svgIcon=\"logos:twitter\"></mat-icon>\n                    </a>\n                    <a *ngIf=\"person.website\" mat-icon-button class=\"info-item icon\"\n                        href=\"{{person.website}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\n                        <mat-icon class=\"link-icon\">link</mat-icon>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card-back\" *ngIf=\"person.isFlipped\" (click)=\"flipCard(person)\" (keyup.enter)=\"flipCard(person)\">\n            <h3>{{person.name}}</h3>\n            <p class=\"contributor-bio\">{{person.bio}}</p>\n        </div>\n    </div>\n  `\n})\nexport class ContributorComponent {\n  @Input() person: Contributor;\n  noPicture = '_no-one.png';\n  pictureBase = CONTENT_URL_PREFIX + 'images/bios/';\n\n  flipCard(person: Contributor) {\n    person.isFlipped = !person.isFlipped;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContributorGroup } from './contributors.model';\nimport { ContributorService } from './contributor.service';\nimport { LocationService } from 'app/shared/location.service';\n\n@Component({\n  selector: `aio-contributor-list`,\n  template: `\n  <div class=\"flex-center group-buttons\">\n<a *ngFor=\"let name of groupNames\"\n    [class.selected]=\"name == selectedGroup.name\"\n    class=\"button mat-button filter-button\"\n    (click)=\"selectGroup(name)\"\n    (keyup.enter)=\"selectGroup(name)\">{{name}}</a>\n  </div>\n  <section *ngIf=\"selectedGroup\" class=\"grid-fluid\">\n    <div class=\"contributor-group\">\n      <aio-contributor *ngFor=\"let person of selectedGroup.contributors\" [person]=\"person\"></aio-contributor>\n    </div>\n  </section>`\n})\nexport class ContributorListComponent implements OnInit {\n  private groups: ContributorGroup[];\n  groupNames: string[];\n  selectedGroup: ContributorGroup;\n\n  constructor(\n    private contributorService: ContributorService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    const groupName =  this.locationService.search()['group'] || '';\n    // no need to unsubscribe because `contributors` completes\n    this.contributorService.contributors\n      .subscribe(grps => {\n        this.groups = grps;\n        this.groupNames = grps.map(g => g.name);\n        this.selectGroup(groupName);\n      });\n  }\n\n  selectGroup(name: string) {\n    name = name.toLowerCase();\n    this.selectedGroup = this.groups.find(g => g.name.toLowerCase() === name) || this.groups[0];\n    this.locationService.setSearch('', {group: this.selectedGroup.name});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ContributorListComponent } from './contributor-list.component';\nimport { ContributorService } from './contributor.service';\nimport { ContributorComponent } from './contributor.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatIconModule ],\n  declarations: [ ContributorListComponent, ContributorComponent ],\n  entryComponents: [ ContributorListComponent ],\n  providers: [ ContributorService ]\n})\nexport class ContributorListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ContributorListComponent;\n}\n"]}