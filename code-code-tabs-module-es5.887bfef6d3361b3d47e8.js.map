{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","webpack:///src/app/custom-elements/code/code-tabs.component.ts","webpack:///src/app/custom-elements/code/code-tabs.module.ts"],"names":["MatCardModule","MatCard","_c0","_c1","_animationMode","this","ɵfac","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","exportAs","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","ɵmod","ɵinj","factory","imports","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","value","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","index","ctx_r11","_r0","_handleClick","ctx_r1","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","$event","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","origin","MatTabContent","MatInkBar","MatTab","MatTabBody","_MatTabBodyBase","MatTabBodyPortal","MatTabGroup","_MatTabGroupBase","MatTabLabelWrapper","MatTabsModule","MatTabHeader","_MatTabHeaderBase","MatPaginatedTabHeader","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","element","left","offsetLeft","width","offsetWidth","_elementRef","_ngZone","_inkBarPositioner","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","ɵdir","MatTabLabel","ɵMatTabLabel_BaseFactory","features","_MatTabMixinBase","MAT_TAB_GROUP","_viewContainerRef","_closestTabGroup","super","_contentPortal","_stateChanges","Subject","isActive","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","_templateLabel","contentQueries","dirIndex","_t","first","viewQuery","inputs","matTabsAnimations","translateTab","transform","minHeight","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","outputs","elementRef","_portalHost","consts","_onTranslateTabStarted","directives","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","merge","map","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","dynamicHeight","animationMode","color","provide","useExisting","_focusChanged","_MatTabLabelWrapperMixinBase","focus","passiveEventListenerOptions","passive","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","_keyManager","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","direction","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","timer","maxScrollDistance","distance","activeItemIndex","_isValidIndex","setActiveItem","viewportRuler","ngZone","_disableRipple","_handlePaginatorClick","_handleKeydown","_onContentChanges","CodeTabsComponent","CodeTabsModule","Array","from","querySelectorAll","tabContent","push","getTabInfo","codeComponents","codeComponent","code","class","getAttribute","innerHTML","path","region","header","language","linenums","customElementComponent"],"mappings":"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","file":"x","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nlet MatCardContent = /** @class */ (() => {\n    class MatCardContent {\n    }\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n    return MatCardContent;\n})();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nlet MatCardTitle = /** @class */ (() => {\n    class MatCardTitle {\n    }\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n    return MatCardTitle;\n})();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nlet MatCardSubtitle = /** @class */ (() => {\n    class MatCardSubtitle {\n    }\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n    return MatCardSubtitle;\n})();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nlet MatCardActions = /** @class */ (() => {\n    class MatCardActions {\n        constructor() {\n            /** Position of the actions inside the card. */\n            this.align = 'start';\n        }\n    }\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n    return MatCardActions;\n})();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nlet MatCardFooter = /** @class */ (() => {\n    class MatCardFooter {\n    }\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n    return MatCardFooter;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardImage = /** @class */ (() => {\n    class MatCardImage {\n    }\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n    return MatCardImage;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardSmImage = /** @class */ (() => {\n    class MatCardSmImage {\n    }\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n    return MatCardSmImage;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardMdImage = /** @class */ (() => {\n    class MatCardMdImage {\n    }\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n    return MatCardMdImage;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardLgImage = /** @class */ (() => {\n    class MatCardLgImage {\n    }\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n    return MatCardLgImage;\n})();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardXlImage = /** @class */ (() => {\n    class MatCardXlImage {\n    }\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n    return MatCardXlImage;\n})();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nlet MatCardAvatar = /** @class */ (() => {\n    class MatCardAvatar {\n    }\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n    return MatCardAvatar;\n})();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nlet MatCard = /** @class */ (() => {\n    class MatCard {\n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        constructor(_animationMode) {\n            this._animationMode = _animationMode;\n        }\n    }\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatCard.ctorParameters = () => [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatCard;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nlet MatCardHeader = /** @class */ (() => {\n    class MatCardHeader {\n    }\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n    return MatCardHeader;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nlet MatCardTitleGroup = /** @class */ (() => {\n    class MatCardTitleGroup {\n    }\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n    return MatCardTitleGroup;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatCardModule = /** @class */ (() => {\n    class MatCardModule {\n    }\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n    return MatCardModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nlet MatInkBar = /** @class */ (() => {\n    class MatInkBar {\n        constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._inkBarPositioner = _inkBarPositioner;\n            this._animationMode = _animationMode;\n        }\n        /**\n         * Calculates the styles from the provided element in order to align the ink-bar to that element.\n         * Shows the ink bar if previously set as hidden.\n         * @param element\n         */\n        alignToElement(element) {\n            this.show();\n            if (typeof requestAnimationFrame !== 'undefined') {\n                this._ngZone.runOutsideAngular(() => {\n                    requestAnimationFrame(() => this._setStyles(element));\n                });\n            }\n            else {\n                this._setStyles(element);\n            }\n        }\n        /** Shows the ink bar. */\n        show() {\n            this._elementRef.nativeElement.style.visibility = 'visible';\n        }\n        /** Hides the ink bar. */\n        hide() {\n            this._elementRef.nativeElement.style.visibility = 'hidden';\n        }\n        /**\n         * Sets the proper styles to the ink bar element.\n         * @param element\n         */\n        _setStyles(element) {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        }\n    }\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n    MatInkBar.ctorParameters = () => [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatInkBar;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Decorates the `ng-template` tags and reads out the template from it. */\nlet MatTabContent = /** @class */ (() => {\n    class MatTabContent {\n        constructor(template) {\n            this.template = template;\n        }\n    }\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n    MatTabContent.ctorParameters = () => [\n        { type: TemplateRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return MatTabContent;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to flag tab labels for use with the portal directive */\nlet MatTabLabel = /** @class */ (() => {\n    class MatTabLabel extends CdkPortal {\n    }\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n    return MatTabLabel;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /** @class */ (() => {\n    class MatTab extends _MatTabMixinBase {\n        constructor(_viewContainerRef, \n        /**\n         * @deprecated `_closestTabGroup` parameter to become required.\n         * @breaking-change 10.0.0\n         */\n        _closestTabGroup) {\n            super();\n            this._viewContainerRef = _viewContainerRef;\n            this._closestTabGroup = _closestTabGroup;\n            /** Plain text label for the tab, used when there is no template label. */\n            this.textLabel = '';\n            /** Portal that will be the hosted content of the tab */\n            this._contentPortal = null;\n            /** Emits whenever the internal state of the tab changes. */\n            this._stateChanges = new Subject();\n            /**\n             * The relatively indexed position where 0 represents the center, negative is left, and positive\n             * represents the right.\n             */\n            this.position = null;\n            /**\n             * The initial relatively index origin of the tab if it was created and selected after there\n             * was already a selected tab. Provides context of what position the tab should originate from.\n             */\n            this.origin = null;\n            /**\n             * Whether the tab is currently active.\n             */\n            this.isActive = false;\n        }\n        /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n        get templateLabel() { return this._templateLabel; }\n        set templateLabel(value) {\n            // Only update the templateLabel via query if there is actually\n            // a MatTabLabel found. This works around an issue where a user may have\n            // manually set `templateLabel` during creation mode, which would then get clobbered\n            // by `undefined` when this query resolves.\n            if (value) {\n                this._templateLabel = value;\n            }\n        }\n        /** @docs-private */\n        get content() {\n            return this._contentPortal;\n        }\n        ngOnChanges(changes) {\n            if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n                this._stateChanges.next();\n            }\n        }\n        ngOnDestroy() {\n            this._stateChanges.complete();\n        }\n        ngOnInit() {\n            this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n        }\n    }\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n    MatTab.ctorParameters = () => [\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n    ];\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n    return MatTab;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nlet MatTabBodyPortal = /** @class */ (() => {\n    class MatTabBodyPortal extends CdkPortalOutlet {\n        constructor(componentFactoryResolver, viewContainerRef, _host, \n        /**\n         * @deprecated `_document` parameter to be made required.\n         * @breaking-change 9.0.0\n         */\n        _document) {\n            super(componentFactoryResolver, viewContainerRef, _document);\n            this._host = _host;\n            /** Subscription to events for when the tab body begins centering. */\n            this._centeringSub = Subscription.EMPTY;\n            /** Subscription to events for when the tab body finishes leaving from center position. */\n            this._leavingSub = Subscription.EMPTY;\n        }\n        /** Set initial visibility or set up subscription for changing visibility. */\n        ngOnInit() {\n            super.ngOnInit();\n            this._centeringSub = this._host._beforeCentering\n                .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n                .subscribe((isCentering) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this._host._content);\n                }\n            });\n            this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n                this.detach();\n            });\n        }\n        /** Clean up centering subscription. */\n        ngOnDestroy() {\n            super.ngOnDestroy();\n            this._centeringSub.unsubscribe();\n            this._leavingSub.unsubscribe();\n        }\n    }\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    MatTabBodyPortal.ctorParameters = () => [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return MatTabBodyPortal;\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nlet _MatTabBodyBase = /** @class */ (() => {\n    class _MatTabBodyBase {\n        constructor(_elementRef, _dir, changeDetectorRef) {\n            this._elementRef = _elementRef;\n            this._dir = _dir;\n            /** Subscription to the directionality change observable. */\n            this._dirChangeSubscription = Subscription.EMPTY;\n            /** Emits when an animation on the tab is complete. */\n            this._translateTabComplete = new Subject();\n            /** Event emitted when the tab begins to animate towards the center as the active tab. */\n            this._onCentering = new EventEmitter();\n            /** Event emitted before the centering of the tab begins. */\n            this._beforeCentering = new EventEmitter();\n            /** Event emitted before the centering of the tab begins. */\n            this._afterLeavingCenter = new EventEmitter();\n            /** Event emitted when the tab completes its animation towards the center. */\n            this._onCentered = new EventEmitter(true);\n            // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n            // anyway to prevent the animations module from throwing an error if the body is used on its own.\n            /** Duration for the tab's animation. */\n            this.animationDuration = '500ms';\n            if (_dir) {\n                this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                    this._computePositionAnimationState(dir);\n                    changeDetectorRef.markForCheck();\n                });\n            }\n            // Ensure that we get unique animation events, because the `.done` callback can get\n            // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n            this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n                return x.fromState === y.fromState && x.toState === y.toState;\n            })).subscribe(event => {\n                // If the transition to the center is complete, emit an event.\n                if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                    this._onCentered.emit();\n                }\n                if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                    this._afterLeavingCenter.emit();\n                }\n            });\n        }\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set position(position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        }\n        /**\n         * After initialized, check if the content is centered and has an origin. If so, set the\n         * special position states that transition the tab from the left or right before centering.\n         */\n        ngOnInit() {\n            if (this._position == 'center' && this.origin != null) {\n                this._position = this._computePositionFromOrigin(this.origin);\n            }\n        }\n        ngOnDestroy() {\n            this._dirChangeSubscription.unsubscribe();\n            this._translateTabComplete.complete();\n        }\n        _onTranslateTabStarted(event) {\n            const isCentering = this._isCenterPosition(event.toState);\n            this._beforeCentering.emit(isCentering);\n            if (isCentering) {\n                this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n            }\n        }\n        /** The text direction of the containing app. */\n        _getLayoutDirection() {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        }\n        /** Whether the provided position state is considered center, regardless of origin. */\n        _isCenterPosition(position) {\n            return position == 'center' ||\n                position == 'left-origin-center' ||\n                position == 'right-origin-center';\n        }\n        /** Computes the position state that will be used for the tab-body animation trigger. */\n        _computePositionAnimationState(dir = this._getLayoutDirection()) {\n            if (this._positionIndex < 0) {\n                this._position = dir == 'ltr' ? 'left' : 'right';\n            }\n            else if (this._positionIndex > 0) {\n                this._position = dir == 'ltr' ? 'right' : 'left';\n            }\n            else {\n                this._position = 'center';\n            }\n        }\n        /**\n         * Computes the position state based on the specified origin position. This is used if the\n         * tab is becoming visible immediately after creation.\n         */\n        _computePositionFromOrigin(origin) {\n            const dir = this._getLayoutDirection();\n            if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n                return 'left-origin-center';\n            }\n            return 'right-origin-center';\n        }\n    }\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n    _MatTabBodyBase.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ];\n    _MatTabBodyBase.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n    return _MatTabBodyBase;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nlet MatTabBody = /** @class */ (() => {\n    class MatTabBody extends _MatTabBodyBase {\n        constructor(elementRef, dir, changeDetectorRef) {\n            super(elementRef, dir, changeDetectorRef);\n        }\n    }\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n    MatTabBody.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ];\n    MatTabBody.propDecorators = {\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n    return MatTabBody;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nlet _MatTabGroupBase = /** @class */ (() => {\n    class _MatTabGroupBase extends _MatTabGroupMixinBase {\n        constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n            super(elementRef);\n            this._changeDetectorRef = _changeDetectorRef;\n            this._animationMode = _animationMode;\n            /** All of the tabs that belong to the group. */\n            this._tabs = new QueryList();\n            /** The tab index that should be selected after the content has been checked. */\n            this._indexToSelect = 0;\n            /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n            this._tabBodyWrapperHeight = 0;\n            /** Subscription to tabs being added/removed. */\n            this._tabsSubscription = Subscription.EMPTY;\n            /** Subscription to changes in the tab labels. */\n            this._tabLabelSubscription = Subscription.EMPTY;\n            this._dynamicHeight = false;\n            this._selectedIndex = null;\n            /** Position of the tab header. */\n            this.headerPosition = 'above';\n            /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n            this.selectedIndexChange = new EventEmitter();\n            /** Event emitted when focus has changed within a tab group. */\n            this.focusChange = new EventEmitter();\n            /** Event emitted when the body animation has completed */\n            this.animationDone = new EventEmitter();\n            /** Event emitted when the tab selection has changed. */\n            this.selectedTabChange = new EventEmitter(true);\n            this._groupId = nextId++;\n            this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n                defaultConfig.animationDuration : '500ms';\n            this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n                defaultConfig.disablePagination : false;\n        }\n        /** Whether the tab group should grow to the size of the active tab. */\n        get dynamicHeight() { return this._dynamicHeight; }\n        set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n        /** The index of the active tab. */\n        get selectedIndex() { return this._selectedIndex; }\n        set selectedIndex(value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        }\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get animationDuration() { return this._animationDuration; }\n        set animationDuration(value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        }\n        /** Background color of the tab group. */\n        get backgroundColor() { return this._backgroundColor; }\n        set backgroundColor(value) {\n            const nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n            if (value) {\n                nativeElement.classList.add(`mat-background-${value}`);\n            }\n            this._backgroundColor = value;\n        }\n        /**\n         * After the content is checked, this component knows what tabs have been defined\n         * and what the selected index should be. This is where we can know exactly what position\n         * each tab should be in according to the new selected index, and additionally we know how\n         * a new selected tab should transition in (from the left or right).\n         */\n        ngAfterContentChecked() {\n            // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n            // the amount of tabs changes before the actual change detection runs.\n            const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // If there is a change in selected index, emit a change event. Should not trigger if\n            // the selected index has not yet been initialized.\n            if (this._selectedIndex != indexToSelect) {\n                const isFirstRun = this._selectedIndex == null;\n                if (!isFirstRun) {\n                    this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                }\n                // Changing these values after change detection has run\n                // since the checked content may contain references to them.\n                Promise.resolve().then(() => {\n                    this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                    if (!isFirstRun) {\n                        this.selectedIndexChange.emit(indexToSelect);\n                    }\n                });\n            }\n            // Setup the position for each tab and optionally setup an origin on the next selected tab.\n            this._tabs.forEach((tab, index) => {\n                tab.position = index - indexToSelect;\n                // If there is already a selected tab, then set up an origin for the next selected tab\n                // if it doesn't have one already.\n                if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                    tab.origin = indexToSelect - this._selectedIndex;\n                }\n            });\n            if (this._selectedIndex !== indexToSelect) {\n                this._selectedIndex = indexToSelect;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        ngAfterContentInit() {\n            this._subscribeToAllTabChanges();\n            this._subscribeToTabLabels();\n            // Subscribe to changes in the amount of tabs, in order to be\n            // able to re-render the content as new tabs are added or removed.\n            this._tabsSubscription = this._tabs.changes.subscribe(() => {\n                const indexToSelect = this._clampTabIndex(this._indexToSelect);\n                // Maintain the previously-selected tab if a new tab is added or removed and there is no\n                // explicit change that selects a different tab.\n                if (indexToSelect === this._selectedIndex) {\n                    const tabs = this._tabs.toArray();\n                    for (let i = 0; i < tabs.length; i++) {\n                        if (tabs[i].isActive) {\n                            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                            // adding a tab within the `selectedIndexChange` event.\n                            this._indexToSelect = this._selectedIndex = i;\n                            break;\n                        }\n                    }\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n        /** Listens to changes in all of the tabs. */\n        _subscribeToAllTabChanges() {\n            // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n            // some that are inside of nested tab groups. We filter them out manually by checking that\n            // the closest group to the tab is the current one.\n            this._allTabs.changes\n                .pipe(startWith(this._allTabs))\n                .subscribe((tabs) => {\n                this._tabs.reset(tabs.filter(tab => {\n                    // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                    // once it becomes a required parameter in MatTab.\n                    return !tab._closestTabGroup || tab._closestTabGroup === this;\n                }));\n                this._tabs.notifyOnChanges();\n            });\n        }\n        ngOnDestroy() {\n            this._tabs.destroy();\n            this._tabsSubscription.unsubscribe();\n            this._tabLabelSubscription.unsubscribe();\n        }\n        /** Re-aligns the ink bar to the selected tab element. */\n        realignInkBar() {\n            if (this._tabHeader) {\n                this._tabHeader._alignInkBarToSelectedTab();\n            }\n        }\n        _focusChanged(index) {\n            this.focusChange.emit(this._createChangeEvent(index));\n        }\n        _createChangeEvent(index) {\n            const event = new MatTabChangeEvent;\n            event.index = index;\n            if (this._tabs && this._tabs.length) {\n                event.tab = this._tabs.toArray()[index];\n            }\n            return event;\n        }\n        /**\n         * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n         * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n         * binding to be updated, we need to subscribe to changes in it and trigger change detection\n         * manually.\n         */\n        _subscribeToTabLabels() {\n            if (this._tabLabelSubscription) {\n                this._tabLabelSubscription.unsubscribe();\n            }\n            this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        /** Clamps the given index to the bounds of 0 and the tabs length. */\n        _clampTabIndex(index) {\n            // Note the `|| 0`, which ensures that values like NaN can't get through\n            // and which would otherwise throw the component into an infinite loop\n            // (since Math.max(NaN, 0) === NaN).\n            return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n        }\n        /** Returns a unique id for each tab label element */\n        _getTabLabelId(i) {\n            return `mat-tab-label-${this._groupId}-${i}`;\n        }\n        /** Returns a unique id for each tab content element */\n        _getTabContentId(i) {\n            return `mat-tab-content-${this._groupId}-${i}`;\n        }\n        /**\n         * Sets the height of the body wrapper to the height of the activating tab if dynamic\n         * height property is true.\n         */\n        _setTabBodyWrapperHeight(tabHeight) {\n            if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n                return;\n            }\n            const wrapper = this._tabBodyWrapper.nativeElement;\n            wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n            // This conditional forces the browser to paint the height so that\n            // the animation to the new height can have an origin.\n            if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n                wrapper.style.height = tabHeight + 'px';\n            }\n        }\n        /** Removes the height of the tab body wrapper. */\n        _removeTabBodyWrapperHeight() {\n            const wrapper = this._tabBodyWrapper.nativeElement;\n            this._tabBodyWrapperHeight = wrapper.clientHeight;\n            wrapper.style.height = '';\n            this.animationDone.emit();\n        }\n        /** Handle click events, setting new selected index if appropriate. */\n        _handleClick(tab, tabHeader, index) {\n            if (!tab.disabled) {\n                this.selectedIndex = tabHeader.focusIndex = index;\n            }\n        }\n        /** Retrieves the tabindex for the tab. */\n        _getTabIndex(tab, idx) {\n            if (tab.disabled) {\n                return null;\n            }\n            return this.selectedIndex === idx ? 0 : -1;\n        }\n    }\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    _MatTabGroupBase.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    _MatTabGroupBase.propDecorators = {\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        disablePagination: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n    return _MatTabGroupBase;\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nlet MatTabGroup = /** @class */ (() => {\n    class MatTabGroup extends _MatTabGroupBase {\n        constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n            super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n        }\n    }\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n    MatTabGroup.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatTabGroup.propDecorators = {\n        _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n    return MatTabGroup;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nlet MatTabLabelWrapper = /** @class */ (() => {\n    class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n        constructor(elementRef) {\n            super();\n            this.elementRef = elementRef;\n        }\n        /** Sets focus on the wrapper element */\n        focus() {\n            this.elementRef.nativeElement.focus();\n        }\n        getOffsetLeft() {\n            return this.elementRef.nativeElement.offsetLeft;\n        }\n        getOffsetWidth() {\n            return this.elementRef.nativeElement.offsetWidth;\n        }\n    }\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    MatTabLabelWrapper.ctorParameters = () => [\n        { type: ElementRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return MatTabLabelWrapper;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nlet MatPaginatedTabHeader = /** @class */ (() => {\n    class MatPaginatedTabHeader {\n        constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n        /**\n         * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n         * parameters to become required.\n         */\n        _platform, _animationMode) {\n            this._elementRef = _elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._viewportRuler = _viewportRuler;\n            this._dir = _dir;\n            this._ngZone = _ngZone;\n            this._platform = _platform;\n            this._animationMode = _animationMode;\n            /** The distance in pixels that the tab labels should be translated to the left. */\n            this._scrollDistance = 0;\n            /** Whether the header should scroll to the selected index after the view has been checked. */\n            this._selectedIndexChanged = false;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new Subject();\n            /** Whether the controls for pagination should be displayed */\n            this._showPaginationControls = false;\n            /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n            this._disableScrollAfter = true;\n            /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n            this._disableScrollBefore = true;\n            /** Stream that will stop the automated scrolling. */\n            this._stopScrolling = new Subject();\n            /**\n             * Whether pagination should be disabled. This can be used to avoid unnecessary\n             * layout recalculations if it's known that pagination won't be required.\n             */\n            this.disablePagination = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the option is selected. */\n            this.selectFocusedIndex = new EventEmitter();\n            /** Event emitted when a label is focused. */\n            this.indexFocused = new EventEmitter();\n            // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n            _ngZone.runOutsideAngular(() => {\n                fromEvent(_elementRef.nativeElement, 'mouseleave')\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => {\n                    this._stopInterval();\n                });\n            });\n        }\n        /** The index of the active tab. */\n        get selectedIndex() { return this._selectedIndex; }\n        set selectedIndex(value) {\n            value = coerceNumberProperty(value);\n            if (this._selectedIndex != value) {\n                this._selectedIndexChanged = true;\n                this._selectedIndex = value;\n                if (this._keyManager) {\n                    this._keyManager.updateActiveItem(value);\n                }\n            }\n        }\n        ngAfterViewInit() {\n            // We need to handle these events manually, because we want to bind passive event listeners.\n            fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._handlePaginatorPress('before');\n            });\n            fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._handlePaginatorPress('after');\n            });\n        }\n        ngAfterContentInit() {\n            const dirChange = this._dir ? this._dir.change : of(null);\n            const resize = this._viewportRuler.change(150);\n            const realign = () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n            };\n            this._keyManager = new FocusKeyManager(this._items)\n                .withHorizontalOrientation(this._getLayoutDirection())\n                .withWrap();\n            this._keyManager.updateActiveItem(0);\n            // Defer the first call in order to allow for slower browsers to lay out the elements.\n            // This helps in cases where the user lands directly on a page with paginated tabs.\n            typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n            // On dir change or window resize, realign the ink bar and update the orientation of\n            // the key manager if the direction has changed.\n            merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n                // We need to defer this to give the browser some time to recalculate the element dimensions.\n                Promise.resolve().then(realign);\n                this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n            });\n            // If there is a change in the focus key manager we need to emit the `indexFocused`\n            // event in order to provide a public event that notifies about focus changes. Also we realign\n            // the tabs container by scrolling the new focused tab into the visible section.\n            this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n                this.indexFocused.emit(newFocusIndex);\n                this._setTabFocus(newFocusIndex);\n            });\n        }\n        ngAfterContentChecked() {\n            // If the number of tab labels have changed, check if scrolling should be enabled\n            if (this._tabLabelCount != this._items.length) {\n                this.updatePagination();\n                this._tabLabelCount = this._items.length;\n                this._changeDetectorRef.markForCheck();\n            }\n            // If the selected index has changed, scroll to the label and check if the scrolling controls\n            // should be disabled.\n            if (this._selectedIndexChanged) {\n                this._scrollToLabel(this._selectedIndex);\n                this._checkScrollingControls();\n                this._alignInkBarToSelectedTab();\n                this._selectedIndexChanged = false;\n                this._changeDetectorRef.markForCheck();\n            }\n            // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n            // then translate the header to reflect this.\n            if (this._scrollDistanceChanged) {\n                this._updateTabScrollPosition();\n                this._scrollDistanceChanged = false;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._stopScrolling.complete();\n        }\n        /** Handles keyboard events on the header. */\n        _handleKeydown(event) {\n            // We don't handle any key bindings with a modifier key.\n            if (hasModifierKey(event)) {\n                return;\n            }\n            switch (event.keyCode) {\n                case HOME:\n                    this._keyManager.setFirstItemActive();\n                    event.preventDefault();\n                    break;\n                case END:\n                    this._keyManager.setLastItemActive();\n                    event.preventDefault();\n                    break;\n                case ENTER:\n                case SPACE:\n                    if (this.focusIndex !== this.selectedIndex) {\n                        this.selectFocusedIndex.emit(this.focusIndex);\n                        this._itemSelected(event);\n                    }\n                    break;\n                default:\n                    this._keyManager.onKeydown(event);\n            }\n        }\n        /**\n         * Callback for when the MutationObserver detects that the content has changed.\n         */\n        _onContentChanges() {\n            const textContent = this._elementRef.nativeElement.textContent;\n            // We need to diff the text content of the header, because the MutationObserver callback\n            // will fire even if the text content didn't change which is inefficient and is prone\n            // to infinite loops if a poorly constructed expression is passed in (see #14249).\n            if (textContent !== this._currentTextContent) {\n                this._currentTextContent = textContent || '';\n                // The content observer runs outside the `NgZone` by default, which\n                // means that we need to bring the callback back in ourselves.\n                this._ngZone.run(() => {\n                    this.updatePagination();\n                    this._alignInkBarToSelectedTab();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        }\n        /**\n         * Updates the view whether pagination should be enabled or not.\n         *\n         * WARNING: Calling this method can be very costly in terms of performance. It should be called\n         * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n         * page.\n         */\n        updatePagination() {\n            this._checkPaginationEnabled();\n            this._checkScrollingControls();\n            this._updateTabScrollPosition();\n        }\n        /** Tracks which element has focus; used for keyboard navigation */\n        get focusIndex() {\n            return this._keyManager ? this._keyManager.activeItemIndex : 0;\n        }\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set focusIndex(value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        }\n        /**\n         * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n         * providing a valid index and return true.\n         */\n        _isValidIndex(index) {\n            if (!this._items) {\n                return true;\n            }\n            const tab = this._items ? this._items.toArray()[index] : null;\n            return !!tab && !tab.disabled;\n        }\n        /**\n         * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n         * scrolling is enabled.\n         */\n        _setTabFocus(tabIndex) {\n            if (this._showPaginationControls) {\n                this._scrollToLabel(tabIndex);\n            }\n            if (this._items && this._items.length) {\n                this._items.toArray()[tabIndex].focus();\n                // Do not let the browser manage scrolling to focus the element, this will be handled\n                // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n                // should be the full width minus the offset width.\n                const containerEl = this._tabListContainer.nativeElement;\n                const dir = this._getLayoutDirection();\n                if (dir == 'ltr') {\n                    containerEl.scrollLeft = 0;\n                }\n                else {\n                    containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n                }\n            }\n        }\n        /** The layout direction of the containing app. */\n        _getLayoutDirection() {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        }\n        /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n        _updateTabScrollPosition() {\n            if (this.disablePagination) {\n                return;\n            }\n            const scrollDistance = this.scrollDistance;\n            const platform = this._platform;\n            const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n            // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n            // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n            // and ripples will exceed the boundaries of the visible tab bar.\n            // See: https://github.com/angular/components/issues/10276\n            // We round the `transform` here, because transforms with sub-pixel precision cause some\n            // browsers to blur the content of the element.\n            this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n            // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n            // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n            // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n            // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n            // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n            if (platform && (platform.TRIDENT || platform.EDGE)) {\n                this._tabListContainer.nativeElement.scrollLeft = 0;\n            }\n        }\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get scrollDistance() { return this._scrollDistance; }\n        set scrollDistance(value) {\n            this._scrollTo(value);\n        }\n        /**\n         * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n         * the end of the list, respectively). The distance to scroll is computed to be a third of the\n         * length of the tab list view window.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        _scrollHeader(direction) {\n            const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            // Move the scroll distance one-third the length of the tab list's viewport.\n            const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n            return this._scrollTo(this._scrollDistance + scrollAmount);\n        }\n        /** Handles click events on the pagination arrows. */\n        _handlePaginatorClick(direction) {\n            this._stopInterval();\n            this._scrollHeader(direction);\n        }\n        /**\n         * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        _scrollToLabel(labelIndex) {\n            if (this.disablePagination) {\n                return;\n            }\n            const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n            if (!selectedLabel) {\n                return;\n            }\n            // The view length is the visible width of the tab labels.\n            const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n            let labelBeforePos, labelAfterPos;\n            if (this._getLayoutDirection() == 'ltr') {\n                labelBeforePos = offsetLeft;\n                labelAfterPos = labelBeforePos + offsetWidth;\n            }\n            else {\n                labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n                labelBeforePos = labelAfterPos - offsetWidth;\n            }\n            const beforeVisiblePos = this.scrollDistance;\n            const afterVisiblePos = this.scrollDistance + viewLength;\n            if (labelBeforePos < beforeVisiblePos) {\n                // Scroll header to move label to the before direction\n                this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n            }\n            else if (labelAfterPos > afterVisiblePos) {\n                // Scroll header to move label to the after direction\n                this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n            }\n        }\n        /**\n         * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n         * tab list is wider than the size of the header container, then the pagination controls should\n         * be shown.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        _checkPaginationEnabled() {\n            if (this.disablePagination) {\n                this._showPaginationControls = false;\n            }\n            else {\n                const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n                if (!isEnabled) {\n                    this.scrollDistance = 0;\n                }\n                if (isEnabled !== this._showPaginationControls) {\n                    this._changeDetectorRef.markForCheck();\n                }\n                this._showPaginationControls = isEnabled;\n            }\n        }\n        /**\n         * Evaluate whether the before and after controls should be enabled or disabled.\n         * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n         * before button. If the header is at the end of the list (scroll distance is equal to the\n         * maximum distance we can scroll), then disable the after button.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        _checkScrollingControls() {\n            if (this.disablePagination) {\n                this._disableScrollAfter = this._disableScrollBefore = true;\n            }\n            else {\n                // Check if the pagination arrows should be activated.\n                this._disableScrollBefore = this.scrollDistance == 0;\n                this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n         * is equal to the difference in width between the tab list container and tab header container.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        _getMaxScrollDistance() {\n            const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n            const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            return (lengthOfTabList - viewLength) || 0;\n        }\n        /** Tells the ink-bar to align itself to the current label wrapper */\n        _alignInkBarToSelectedTab() {\n            const selectedItem = this._items && this._items.length ?\n                this._items.toArray()[this.selectedIndex] : null;\n            const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n            if (selectedLabelWrapper) {\n                this._inkBar.alignToElement(selectedLabelWrapper);\n            }\n            else {\n                this._inkBar.hide();\n            }\n        }\n        /** Stops the currently-running paginator interval.  */\n        _stopInterval() {\n            this._stopScrolling.next();\n        }\n        /**\n         * Handles the user pressing down on one of the paginators.\n         * Starts scrolling the header after a certain amount of time.\n         * @param direction In which direction the paginator should be scrolled.\n         */\n        _handlePaginatorPress(direction, mouseEvent) {\n            // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n            // null check the `button`, but we do it so we don't break tests that use fake events.\n            if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n                return;\n            }\n            // Avoid overlapping timers.\n            this._stopInterval();\n            // Start a timer after the delay and keep firing based on the interval.\n            timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n                // Keep the timer going until something tells it to stop or the component is destroyed.\n                .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n                .subscribe(() => {\n                const { maxScrollDistance, distance } = this._scrollHeader(direction);\n                // Stop the timer if we've reached the start or the end.\n                if (distance === 0 || distance >= maxScrollDistance) {\n                    this._stopInterval();\n                }\n            });\n        }\n        /**\n         * Scrolls the header to a given position.\n         * @param position Position to which to scroll.\n         * @returns Information on the current scroll distance and the maximum.\n         */\n        _scrollTo(position) {\n            if (this.disablePagination) {\n                return { maxScrollDistance: 0, distance: 0 };\n            }\n            const maxScrollDistance = this._getMaxScrollDistance();\n            this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n            return { maxScrollDistance, distance: this._scrollDistance };\n        }\n    }\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n    MatPaginatedTabHeader.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatPaginatedTabHeader.propDecorators = {\n        disablePagination: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n    return MatPaginatedTabHeader;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nlet _MatTabHeaderBase = /** @class */ (() => {\n    class _MatTabHeaderBase extends MatPaginatedTabHeader {\n        constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        animationMode) {\n            super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n        _itemSelected(event) {\n            event.preventDefault();\n        }\n    }\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    _MatTabHeaderBase.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    _MatTabHeaderBase.propDecorators = {\n        disableRipple: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n    return _MatTabHeaderBase;\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nlet MatTabHeader = /** @class */ (() => {\n    class MatTabHeader extends _MatTabHeaderBase {\n        constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        animationMode) {\n            super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        }\n    }\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n    MatTabHeader.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatTabHeader.propDecorators = {\n        _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabHeader;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nlet _MatTabNavBase = /** @class */ (() => {\n    class _MatTabNavBase extends MatPaginatedTabHeader {\n        constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n        /**\n         * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n         */\n        platform, animationMode) {\n            super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n            this._disableRipple = false;\n            /** Theme color of the nav bar. */\n            this.color = 'primary';\n        }\n        /** Background color of the tab nav. */\n        get backgroundColor() { return this._backgroundColor; }\n        set backgroundColor(value) {\n            const classList = this._elementRef.nativeElement.classList;\n            classList.remove(`mat-background-${this.backgroundColor}`);\n            if (value) {\n                classList.add(`mat-background-${value}`);\n            }\n            this._backgroundColor = value;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n        _itemSelected() {\n            // noop\n        }\n        ngAfterContentInit() {\n            // We need this to run before the `changes` subscription in parent to ensure that the\n            // selectedIndex is up-to-date by the time the super class starts looking for it.\n            this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n                this.updateActiveLink();\n            });\n            super.ngAfterContentInit();\n        }\n        /**\n         * Notifies the component that the active link has been changed.\n         * @breaking-change 8.0.0 `element` parameter to be removed.\n         */\n        updateActiveLink(_element) {\n            if (!this._items) {\n                return;\n            }\n            const items = this._items.toArray();\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].active) {\n                    this.selectedIndex = i;\n                    this._changeDetectorRef.markForCheck();\n                    return;\n                }\n            }\n            // The ink bar should hide itself if no items are active.\n            this.selectedIndex = -1;\n            this._inkBar.hide();\n        }\n    }\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    _MatTabNavBase.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    _MatTabNavBase.propDecorators = {\n        backgroundColor: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        color: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n    return _MatTabNavBase;\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nlet MatTabNav = /** @class */ (() => {\n    class MatTabNav extends _MatTabNavBase {\n        constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n        /**\n         * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n         */\n        platform, animationMode) {\n            super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n        }\n    }\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n    MatTabNav.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatTabNav.propDecorators = {\n        _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabNav;\n})();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nlet _MatTabLinkBase = /** @class */ (() => {\n    class _MatTabLinkBase extends _MatTabLinkMixinBase {\n        constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n            super();\n            this._tabNavBar = _tabNavBar;\n            this.elementRef = elementRef;\n            this._focusMonitor = _focusMonitor;\n            /** Whether the tab link is active or not. */\n            this._isActive = false;\n            this.rippleConfig = globalRippleOptions || {};\n            this.tabIndex = parseInt(tabIndex) || 0;\n            if (animationMode === 'NoopAnimations') {\n                this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n            }\n        }\n        /** Whether the link is active. */\n        get active() { return this._isActive; }\n        set active(value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this.elementRef);\n            }\n        }\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get rippleDisabled() {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        }\n        focus() {\n            this.elementRef.nativeElement.focus();\n        }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this.elementRef);\n        }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this.elementRef);\n        }\n    }\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    _MatTabLinkBase.ctorParameters = () => [\n        { type: _MatTabNavBase },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    _MatTabLinkBase.propDecorators = {\n        active: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n    return _MatTabLinkBase;\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nlet MatTabLink = /** @class */ (() => {\n    class MatTabLink extends _MatTabLinkBase {\n        constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n            super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n            this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n            this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n        }\n        ngOnDestroy() {\n            super.ngOnDestroy();\n            this._tabLinkRipple._removeTriggerEvents();\n        }\n    }\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    MatTabLink.ctorParameters = () => [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatTabLink;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatTabsModule = /** @class */ (() => {\n    class MatTabsModule {\n    }\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n    return MatTabsModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","/* tslint:disable component-selector */\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string;\n  code: string;\n  path: string;\n  region: string;\n\n  header?: string;\n  language?: string;\n  linenums?: string;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" [disableRipple]=\"true\">\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string | undefined;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n\n    for (const tabContent of codeExamples) {\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: Element): TabInfo {\n    return {\n      class: tabContent.getAttribute('class') || '',\n      code: tabContent.innerHTML,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n\n      header: tabContent.getAttribute('header') || undefined,\n      language: tabContent.getAttribute('language') || undefined,\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n"]}