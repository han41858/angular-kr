{
  "id": "guide/frequent-ngmodules",
  "title": "자주 사용하는 NgModule",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/frequent-ngmodules.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<!--\n# Frequently-used modules\n-->\n<h1 id=\"자주-사용하는-ngmodule\">자주 사용하는 NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#자주-사용하는-ngmodule\"><i class=\"material-icons\">link</i></a></h1>\n<!--\nAn Angular app needs at least one module that serves as the root module.\nAs you add features to your app, you can add them in modules.\nThe following are frequently used Angular modules with examples\nof some of the things they contain:\n-->\n<p>Angular 애플리케이션에는 최상위 모듈이 반드시 존재하기 때문에, 모든 Angular 애플리케이션은 모듈을 하나 이상 갖고 있다고 할 수 있습니다.\n그리고 개발을 진행하면서 Angular 프레임워크가 제공하는 기능은 Angular 모듈을 불러와서 사용할 수 있으며, 이 때 다음과 같은 모듈을 자주 사용하게 될 것입니다.</p>\n<table>\n <tbody><tr>\n   <th style=\"vertical-align: top\">\n     NgModule\n   </th>\n   <th style=\"vertical-align: top\">\n     <!--\n     Import it from\n     -->\n     모듈 위치\n   </th>\n   <th style=\"vertical-align: top\">\n     <!--\n     Why you use it\n     -->\n     용도\n   </th>\n </tr>\n <tr>\n   <td><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code></td>\n   <td><code>@angular/platform-browser</code></td>\n   <!--\n   <td>When you want to run your app in a browser</td>\n   -->\n   <td>브라우저에서 애플리케이션을 실행할 때</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code></td>\n   <td><code>@angular/common</code></td>\n   <!--\n   <td>When you want to use <code>NgIf</code>, <code>NgFor</code></td>\n   -->\n   <td><code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>, <code>NgFor</code>를 사용할 때</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></td>\n   <td><code>@angular/forms</code></td>\n   <!--\n   <td>When you want to build template driven forms (includes <code>NgModel</code>)</td>\n   -->\n   <td>템플릿 기반 폼을 사용할 때 (<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 포함)</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code></td>\n   <td><code>@angular/forms</code></td>\n   <!--\n   <td>When you want to build reactive forms</td>\n   -->\n   <td>반응형 폼을 사용할 때</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code></td>\n   <td><code>@angular/router</code></td>\n   <!--\n   <td>When you want to use <code>RouterLink</code>, <code>.forRoot()</code>, and <code>.forChild()</code></td>\n   -->\n   <td><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>, <code>.forRoot()</code>, <code>.forChild()</code>를 사용할 때</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code></td>\n   <td><code>@angular/common/<a href=\"api/common/http\" class=\"code-anchor\">http</a></code></td>\n   <!--\n   <td>When you want to talk to a server</td>\n   -->\n   <td>서버와 HTTP 통신을 해야 할 때</td>\n </tr>\n</tbody></table>\n<!--\n## Importing modules\n-->\n<h2 id=\"모듈-로드하기\">모듈 로드하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#모듈-로드하기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nWhen you use these Angular modules, import them in `AppModule`,\nor your feature module as appropriate, and list them in the `@NgModule`\n`imports` array. For example, in the basic app generated by the [Angular CLI](cli),\n`BrowserModule` is the first import at the top of the `AppModule`,\n`app.module.ts`.\n-->\n<p>Angular에서 제공하는 모듈을 사용하려면, 이 모듈을 <code>AppModule</code>이나 기능 모듈의 <code>@<a href=\"api/core/NgModule#imports\" class=\"code-anchor\">NgModule.imports</a></code> 배열에 등록해야 합니다. Angular CLI로 만든 프로젝트라면 <code>AppModule</code>을 정의하는 <code>app.module.ts</code> 파일에 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>이 기본적으로 등록되어 있습니다.</p>\n<!--\n```typescript\n/* import modules so that AppModule can access them */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ /* add modules here so Angular knows to use them */\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n-->\n<code-example language=\"typescript\">\n/* 모듈을 로드하면 AppModule에서 이 심볼에 접근할 수 있습니다. */\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ /* 이 <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>에서 사용하는 외부 모듈은 여기에 등록합니다. */\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code-example>\n<!--\nThe imports at the top of the array are JavaScript import statements\nwhile the `imports` array within `@NgModule` is Angular specific.\nFor more information on the difference, see [JavaScript Modules vs. NgModules](guide/ngmodule-vs-jsmodule).\n-->\n<p>가장 위쪽에 사용한 <code>import</code> 구문은 JavaScript 모듈을 불러오기 위한 JavaScript 문법이며,\n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>에 있는 <code>imports</code> 배열은 Angular 모듈을 등록하기 위한 Angular 문법입니다.\n좀 더 자세한 내용은 <a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 모듈 vs. NgModules</a> 문서를 참고하세요.</p>\n<!--\n## `BrowserModule` and `CommonModule`\n-->\n<h2 id=\"browsermodule과-commonmodule\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>과 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#browsermodule과-commonmodule\"><i class=\"material-icons\">link</i></a></h2>\n<!--\n`BrowserModule` imports `CommonModule`, which contributes many common\ndirectives such as `ngIf` and `ngFor`. Additionally, `BrowserModule`\nre-exports `CommonModule` making all of its directives available\nto any module that imports `BrowserModule`.\n-->\n<p><code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>에는 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>나 <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a></code>와 같은 기본 디렉티브가 제공되며, <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>은 이 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>에 있는 디렉티브들이 브라우저에서 동작할 수 있도록 다시 한 번 랩핑한 모듈입니다.</p>\n<!--\nFor apps that run in the browser, import `BrowserModule` in the\nroot `AppModule` because it provides services that are essential\nto launch and run a browser app. `BrowserModule`’s providers\nare for the whole app so it should only be in the root module,\nnot in feature modules. Feature modules only need the common\ndirectives in `CommonModule`; they don’t need to re-install app-wide providers.\n-->\n<p>브라우저에서 앱을 실행하려면 최상위 모듈인 <code>AppModule</code>에서 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>을 로드하면 되는데, 브라우저에서 앱을 실행하거나 Angular 동작에 필요한 기본 기능은 이 모듈에서 모두 제공하고 있습니다. 이 때 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>에서 제공하는 기능은 앱 전체를 위한 것이기 때문에 이 모듈은 최상위 모듈에서만 로드해야 하며, 기능 모듈에 이 모듈이 포함되면 안됩니다. 기능 모듈에서 Angular 디렉티브를 사용하려면 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>을 로드해야 합니다.</p>\n<!--\nIf you do import `BrowserModule` into a lazy loaded feature module,\nAngular returns an error telling you to use `CommonModule` instead.\n-->\n<p>기능 모듈에서 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>을 지연 로딩하면, 이 때도 에러가 발생합니다. 지연 로딩을 할 때에도 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>을 로드해야 합니다.</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/frequent-ngmodules/browser-module-error.gif\" width=\"750\" alt=\"BrowserModule error\">\n</div>\n<hr>\n<!--\n## More on NgModules\n-->\n<h2 id=\"ngmodule-더-알아보기\">NgModule 더 알아보기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#ngmodule-더-알아보기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nYou may also be interested in the following:\n* [Bootstrapping](guide/bootstrapping).\n* [NgModules](guide/ngmodules).\n* [JavaScript Modules vs. NgModules](guide/ngmodule-vs-jsmodule).\n-->\n<p>다음 내용을 더 확인해 보세요:</p>\n<ul>\n<li><a href=\"guide/bootstrapping\">부트스트랩</a></li>\n<li><a href=\"guide/ngmodules\">NgModules</a></li>\n<li><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 모듈 vs. NgModules</a></li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n - guide/bootstrapping\n - guide/feature-modules\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/http\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/core/NgModule#imports\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterLink\n - api/router/RouterModule\n - guide/bootstrapping\n - guide/frequent-ngmodules#browsermodule과-commonmodule\n - guide/frequent-ngmodules#ngmodule-더-알아보기\n - guide/frequent-ngmodules#모듈-로드하기\n - guide/frequent-ngmodules#자주-사용하는-ngmodule\n - guide/ngmodule-vs-jsmodule\n - guide/ngmodules\n - https://github.com/angular/angular/edit/master/aio/content/guide/frequent-ngmodules.md?message=docs%3A%20describe%20your%20change...\n-->"
}