{
  "id": "guide/language-service",
  "title": "Angular 언어지원 서비스",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/language-service.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<!--\n# Angular Language Service\n-->\n<h1 id=\"angular-언어지원-서비스\">Angular 언어지원 서비스<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#angular-언어지원-서비스\"><i class=\"material-icons\">link</i></a></h1>\n<!--\nThe Angular Language Service provides code editors with a way to get completions, errors,\nhints, and navigation inside Angular templates.\nIt works with external templates in separate HTML files, and also with in-line templates.\n-->\n<p>Angular 언어지원 서비스를 활용하면 코드 에디터에서 코드 자동완성이나 문법 에러, 코드 힌트 등에 대한 정보를 제공받을 수 있으며, Angular 템플릿 안에서 특정 코드와 관련된 곳으로 자유롭게 이동할 수 있습니다.\n심볼을 찾아 이동하는 기능은 별도 HTML 파일에서는 물론이고 인라인 템플릿에서도 가능합니다.</p>\n<!--\n## Features\n-->\n<h2 id=\"기능\">기능<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#기능\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nYour editor autodetects that you are opening an Angular file.\nIt then uses the Angular Language Service to read your `tsconfig.json` file, find all the\ntemplates you have in your application, and then provide language services for any templates that you open.\n\nLanguage services include:\n\n* Completions lists\n* AOT Diagnostic messages\n* Quick info\n* Go to definition\n-->\n<p>최신 코드 에디터는 Angular 파일이 열리는 것을 감지하다가 파일이 열리면 Angular 언어지원 서비스를 사용해서 <code>tsconfig.json</code> 파일을 불러옵니다.\n그리고 애플리케이션에 있는 모든 템플릿 파일을 찾아서 분석하고 추가 기능을 제공합니다.</p>\n<p>언어지원 서비스는 이런 기능을 제공합니다:</p>\n<ul>\n<li>코드 자동완성 목록</li>\n<li>AOT 분석 메시지</li>\n<li>빠른 정보</li>\n<li>심볼로 이동</li>\n</ul>\n<!--\n### Autocompletion\n-->\n<h3 id=\"코드-자동완성\">코드 자동완성<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#코드-자동완성\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nAutocompletion can speed up your development time by providing you with\ncontextual possibilities and hints as you type.\nThis example shows autocomplete in an interpolation. As you type it out,\nyou can hit tab to complete.\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/language-service/language-completion.gif\" alt=\"autocompletion\">\n</div>\n\nThere are also completions within elements. Any elements you have as a component selector will\nshow up in the completion list.\n-->\n<p>코드 자동완성 기능을 활용하면 해당 컨텍스트에 사용할 수 있는 힌트를 제공받을 수 있기 때문에 개발 속도를 크게 향상시킬수 있습니다.\n이 기능은 문자열 바인딩에서도 제공됩니다.\n코드 자동완성 기능이 제공하는 항목 중에서 원하는 것을 선택하고 탭키를 누르기만 하면 됩니다.</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/language-service/language-completion.gif\" alt=\"autocompletion\" width=\"480\" height=\"72\">\n</div>\n<p>자동완성 기능은 엘리먼트 안에서도 제공됩니다.\n컴포넌트 셀렉터로 사용된 엘리먼트 태그는 템플릿에 사용할 수 있는 엘리먼트 목록으로 제공됩니다.</p>\n<!--\n### Error checking\n-->\n<h3 id=\"문법-오류-검사\">문법 오류 검사<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#문법-오류-검사\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nThe Angular Language Service can forewarn you of mistakes in your code.\nIn this example, Angular doesn't know what `orders` is or where it comes from.\n-->\n<p>Angular 언어지원 서비스를 사용하면 코드를 작성할 때 발생하는 오류를 방지할 수 있습니다.\n그래서 템플릿에 <code>orders</code>라는 항목을 추가했는데 이 항목이 Angular 구성요소 중 어느것에도 해당되지 않는다면 다음과 같이 표시됩니다.</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/language-service/language-error.gif\" alt=\"error checking\" width=\"480\" height=\"126\">\n</div>\n<!--\n### Quick info and navigation\n-->\n<h3 id=\"빠른-정보와-네비게이션\">빠른 정보와 네비게이션<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#빠른-정보와-네비게이션\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nThe quick-info feature allows you to hover to see where components, directives, modules, and so on come from.\nYou can then click \"Go to definition\" or press F12 to go directly to the definition.\n-->\n<p>빠른 정보(quick-info) 기능을 활용하면 템플릿에서 컴포넌트, 디렉티브, 모듈 심볼에 커서나 마우스를 옮겼을 때 해당 객체의 정보를 확인할 수 있습니다.\n이 때 \"Go to definition\"이나 F12 키를 누르면 해당 코드가 정의된 코드로 바로 이동할 수 있습니다.</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/language-service/language-navigation.gif\" alt=\"navigation\" width=\"392\" height=\"186\">\n</div>\n<!--\n## Angular Language Service in your editor\n-->\n<h2 id=\"에디터에서-angular-언어지원-서비스-활용하기\">에디터에서 Angular 언어지원 서비스 활용하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#에디터에서-angular-언어지원-서비스-활용하기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nAngular Language Service is currently available as an extension for [Visual Studio Code](https://code.visualstudio.com/),\n[WebStorm](https://www.jetbrains.com/webstorm), and [Sublime Text](https://www.sublimetext.com/).\n-->\n<p>Angular 언어지원 서비스는 현재 <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>와 <a href=\"https://www.jetbrains.com/webstorm\">WebStorm</a>, <a href=\"https://www.sublimetext.com/\">Sublime Text</a>를 대상으로 제공됩니다.</p>\n<h3 id=\"visual-studio-code\">Visual Studio Code<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#visual-studio-code\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nIn [Visual Studio Code](https://code.visualstudio.com/), install the extension from the [Extensions: Marketplace](https://marketplace.visualstudio.com/items?itemName=Angular.ng-template). You can open the marketplace from the editor using the Extensions icon on the left menu pane, or use VS Quick Open (⌘+P on Mac, CTRL+P on Windows) and type \"? ext\".\n\nIn the marketplace, search for Angular Language Service extension, and click the **Install** button.\n-->\n<p><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>에서는 <a href=\"https://marketplace.visualstudio.com/items?itemName=Angular.ng-template\">Extensions: Marketplace</a>에서 확장기능을 설치하면 됩니다.\n왼쪽 메뉴 패널에서 Extensions 아이콘을 클릭하거나 VS Quick Open(맥에서는 ⌘+P, 윈도우에서는 CTRL+P)을 눌러서 마켓을 열고 \"? ext\"를 입력하면 됩니다.</p>\n<p>마켓에서 Angular Language Service 확장 기능을 찾아서 <strong>Install</strong> 버튼을 누르면 설치됩니다.</p>\n<h3 id=\"webstorm\">WebStorm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#webstorm\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nIn [WebStorm](https://www.jetbrains.com/webstorm/), you must install the language service package as a project dependency.\n\n1. Add the following to your `devDependencies` in your project's `package.json`\n\n<code-example language=\"json\" header=\"package.json\">\ndevDependencies {\n  \"@angular/language-service\": \"^6.0.0\"\n}\n</code-example>\n\n2. In the terminal window at the root of your project, install the `devDependencies` with `npm` or `yarn`:\n-->\n<p><a href=\"https://www.jetbrains.com/webstorm/\">WebStorm</a>에서는 프로젝트 의존성 패키지로 언어지원 서비스 패키지를 설치해야 합니다.</p>\n<ol>\n<li>프로젝트 <code>package.json</code> 파일에 <code>devDependencies</code>를 다음과 같이 추가합니다.</li>\n</ol>\n<code-example language=\"json\" header=\"package.json\">\ndevDependencies {\n  \"@angular/language-service\": \"^6.0.0\"\n}\n</code-example>\n<ol start=\"2\">\n<li>프로젝트 루트 폴더에서 터미널을 열고 <code>npm</code>이나 <code>yarn</code>으로 <code>devDependencies</code>를 설치합니다:</li>\n</ol>\n<code-example language=\"sh\">\nnpm install\n</code-example>\n<!--\n*OR*\n-->\n<p><em>또는</em></p>\n<code-example language=\"sh\">\nyarn\n</code-example>\n<!--\n*OR*\n-->\n<p><em>또는</em></p>\n<code-example language=\"sh\">\nyarn install\n</code-example>\n<!--\nWhen Angular sees this dev dependency, it provides the language service in the WebStorm environment.\nWebStorm then gives you colorization inside the template and autocomplete in addition to the Angular Language Service.\n-->\n<p>언어지원 서비스 패키지를 설치하고 나면 WebStorm 환경에도 자동으로 적용됩니다.\n템플릿에 사용된 코드를 분석해서 적절한 색상으로 구분할 수 있으며, 코드 자동완성 기능도 제공합니다.</p>\n<h3 id=\"sublime-text\">Sublime Text<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#sublime-text\"><i class=\"material-icons\">link</i></a></h3>\n<!--\nIn [Sublime Text](https://www.sublimetext.com/), the Language Service supports only in-line templates when installed as a plug-in.\nYou need a custom Sublime plug-in (or modifications to the current plug-in) for completions in HTML files.\n\nTo use the Language Service for in-line templates, you must first add an extension to allow TypeScript, then install the Angular Language Service plug-in. Starting with TypeScript 2.3, TypeScript has a plug-in model that the language service can use.\n\n1. Install the latest version of TypeScript in a local `node_modules` directory:\n\n```sh\nnpm install --save-dev typescript\n```\n\n2. Install the Angular Language Service package in the same location:\n\n```sh\nnpm install --save-dev @angular/language-service\n```\n\n3. Once the package is installed,  add the following to the `\"compilerOptions\"` section of your project's `tsconfig.json`.\n\n<code-example language=\"json\" header=\"tsconfig.json\">\n  \"plugins\": [\n      {\"name\": \"@angular/language-service\"}\n  ]\n</code-example>\n\n4. In your editor's user preferences (`Cmd+,` or `Ctrl+,`), add the following:\n\n<code-example language=\"json\" header=\"Sublime Text user preferences\">\n\"typescript-tsdk\": \"<path to your folder>/node_modules/typescript/lib\"\n</code-example>\n\nThis allows the Angular Language Service to provide diagnostics and completions in `.ts` files.\n-->\n<p><a href=\"https://www.sublimetext.com/\">Sublime Text</a>에서는 플러그인을 설치해도 인라인 템플릿에서만 언어지원 서비스가 제공됩니다.\n별도 HTML 파일에서도 언어지원 서비스를 활용하려면 커스텀 Sublime 플러그인을 구현해야 합니다.</p>\n<p>인라인 템플릿에서 언어지원 서비스를 사용하려면 먼저 TypeScript를 활성화하는 확장 기능부터 설치하고 Angular 언어지원 서비스를 추가로 설치해야 합니다.\nAngular 언어지원 서비스는 TypeScript 플러그인을 활용하는데, TypeScript 플러그인 2.3 버전부터 지원합니다.</p>\n<ol>\n<li>로컬 <code>node_modules</code> 폴더에 최신 버전 TypeScript 패키지를 설치합니다:</li>\n</ol>\n<code-example language=\"sh\">\nnpm install --save-dev typescript\n</code-example>\n<ol start=\"2\">\n<li>같은 폴더에 Angular 언어지원 서비스 패키지를 설치합니다:</li>\n</ol>\n<code-example language=\"sh\">\nnpm install --save-dev @angular/language-service\n</code-example>\n<ol start=\"3\">\n<li>패키지를 설치하고 나면 프로젝트 <code>tsconfig.json</code> 파일에 있는 <code>\"compilerOptions\"</code> 섹션에 다음 내용을 추가합니다.</li>\n</ol>\n<code-example language=\"json\" header=\"tsconfig.json\">\n  \"plugins\": [\n      {\"name\": \"@angular/language-service\"}\n  ]\n</code-example>\n<ol start=\"4\">\n<li>에디터에서 사용자 환경설정(<code>Cmd+,</code> or <code>Ctrl+,</code>)을 열고 다음 내용을 추가합니다:</li>\n</ol>\n<code-example language=\"json\" header=\"Sublime Text user preferences\">\n\"typescript-tsdk\": \"<path to=\"\" your=\"\" folder=\"\">/node_modules/typescript/lib\"\n</path></code-example>\n<p>이제 Angular 언어지원 서비스가 동작하면서 <code>.ts</code> 파일을 대상으로 코드 진단 기능과 자동완성 기능이 동작합니다.</p>\n<!--\n## How the Language Service works\n-->\n<h2 id=\"언어지원-서비스가-동작하는-방식\">언어지원 서비스가 동작하는 방식<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#언어지원-서비스가-동작하는-방식\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nWhen you use an editor with a language service, the editor starts a separate language-service process\nand communicates with it through an [RPC](https://en.wikipedia.org/wiki/Remote_procedure_call), using the [Language Server Protocol](https://microsoft.github.io/language-server-protocol/).\nWhen you type into the editor, the editor sends information to the language-service process to\ntrack the state of your project.\n\nWhen you trigger a completion list within a template, the editor first parses the template into an\nHTML [abstract syntax tree (AST)](https://en.wikipedia.org/wiki/Abstract_syntax_tree).\nThe Angular compiler interprets that tree to determine the context: which module the template is part of, the current scope, the component selector, and where your cursor is in the template AST. It can then determine the symbols that could potentially be at that position..\n\nIt's a little more involved if you are in an interpolation.\nIf you have an interpolation of `{{data.---}}` inside a `div` and need the completion list after `data.---`, the compiler can't use the HTML AST to find the answer.\nThe HTML AST can only tell the compiler that there is some text with the characters \"`{{data.---}}`\".\nThat's when the template parser produces an expression AST, which resides within the template AST.\nThe Angular Language Services then looks at `data.---` within its context, asks the TypeScript Language Service what the members of `data` are, and returns the list of possibilities.\n-->\n<p>에디터에 언어지원 서비스를 적용하면 별도 프로세스로 언어지원 서비스가 활성화되면서 <a href=\"https://microsoft.github.io/language-server-protocol/\">Language Server Protocol</a>과 <a href=\"https://en.wikipedia.org/wiki/Remote_procedure_call\">RPC</a> 통신을 시작합니다.\n이제 에디터에서 코드를 타이핑하면 에디터가 해당 정보를 언어지원 프로세스로 보내면서 프로젝트의 상태를 추적합니다.</p>\n<p>템플릿에서 코드 자동완성 목록을 요청하면 에디터가 해당 템플릿을 파싱해서 HTML <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\">추상 문법 트리(abstract syntax tree, AST)</a>로 변환합니다.\n그러면 Angular 컴파일러가 이 트리를 분석해서 템플릿이 어떤 모듈에서 사용되었는지, 현재 스코프는 어떤 위치인지, 컴포넌트 셀렉터가 무엇이며 템플릿 AST 중에서 커서의 위치가 어디인지 분석합니다.\n그리고나서 해당 위치에 어떤 심볼을 사용할 수 있는지 판단합니다.</p>\n<p>문자열 바인딩(interpolation)의 경우에는 조금 더 복잡합니다.\n<code>&#x3C;div></code> 엘리먼트 안에서 <code>{{data.---}}</code>와 같이 문자열 바인딩 문법을 사용하면서 <code>data.---</code> 부분에 자동완성 기능을 요청했다고 합시다.\n하지만 Angular 컴파일러는 HTML AST만 분석해서는 원하는 답을 찾을 수 없습니다.\n이 경우에는 \"<code>{{data.---}}</code>\" 부분에 어떤 텍스트가 들어간다는 것만 알 수 있습니다.\n그래서 이 때 템플릿 파서가 표현식 AST를 구성하면서 템플릿 AST의 정보를 조금 더 확장합니다.\n두 AST가 결합된 컨텍스트에서 Angular 언어지원 서비스가 <code>data.---</code>에 적합한 목록을  TypeScript 언어지원 서비스에 요청하면 <code>data</code>의 멤버에 해당하는 프로퍼티나 메소드 목록을 제공합니다.</p>\n<hr>\n<!--\n## More information\n-->\n<h2 id=\"참고\">참고<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#참고\"><i class=\"material-icons\">link</i></a></h2>\n<!--\n* For more in-depth information on the implementation, see the\n[Angular Language Service API](https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts).\n\n* For more on the design considerations and intentions, see [design documentation here](https://github.com/angular/vscode-ng-language-service/wiki/Design).\n\n* See also [Chuck Jazdzewski's presentation](https://www.youtube.com/watch?v=ez3R0Gi4z5A&t=368s) on the Angular Language Service from [ng-conf](https://www.ng-conf.org/) 2017.\n-->\n<ul>\n<li>\n<p><a href=\"https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\">언어지원 서비스 API</a>를 직접 구현하는 방법에 대해 알아 보세요.</p>\n</li>\n<li>\n<p>언어지원 서비스가 어떤 철학으로 설계되었는지 확인하려면 <a href=\"https://github.com/angular/vscode-ng-language-service/wiki/Design\">설계 문서</a>를 참고하세요.</p>\n</li>\n<li>\n<p><a href=\"https://www.ng-conf.org/\">ng-conf</a> 2017에서 <a href=\"https://www.youtube.com/watch?v=ez3R0Gi4z5A&#x26;t=368s\">Chuck Jazdzewski가 발표한 영상</a>을 찾아보는 것도 도움이 될 것입니다.</p>\n</li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n - guide/npm-packages\n-->\n<!-- links from this doc:\n - guide/language-service#angular-언어지원-서비스\n - guide/language-service#sublime-text\n - guide/language-service#visual-studio-code\n - guide/language-service#webstorm\n - guide/language-service#기능\n - guide/language-service#문법-오류-검사\n - guide/language-service#빠른-정보와-네비게이션\n - guide/language-service#언어지원-서비스가-동작하는-방식\n - guide/language-service#에디터에서-angular-언어지원-서비스-활용하기\n - guide/language-service#참고\n - guide/language-service#코드-자동완성\n - https://code.visualstudio.com/\n - https://en.wikipedia.org/wiki/Abstract_syntax_tree\n - https://en.wikipedia.org/wiki/Remote_procedure_call\n - https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\n - https://github.com/angular/angular/edit/master/aio/content/guide/language-service.md?message=docs%3A%20describe%20your%20change...\n - https://github.com/angular/vscode-ng-language-service/wiki/Design\n - https://marketplace.visualstudio.com/items?itemName=Angular.ng-template\n - https://microsoft.github.io/language-server-protocol/\n - https://www.jetbrains.com/webstorm\n - https://www.jetbrains.com/webstorm/\n - https://www.ng-conf.org/\n - https://www.sublimetext.com/\n - https://www.youtube.com/watch?v=ez3R0Gi4z5A&t=368s\n-->"
}