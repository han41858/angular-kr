{
  "id": "guide/language-service",
  "title": "Angular Language Service",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/language-service.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"angular-language-service\">Angular Language Service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#angular-language-service\"><i class=\"material-icons\">link</i></a></h1>\n<p>The Angular Language Service is a way to get completions, errors,\nhints, and navigation inside your Angular templates whether they\nare external in an HTML file or embedded in annotations/decorators\nin a string. The Angular Language Service autodetects that you are\nopening an Angular file, reads your <code>tsconfig.json</code> file, finds all the\ntemplates you have in your application, and then provides language\nservices for any templates that you open.</p>\n<h2 id=\"autocompletion\">Autocompletion<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#autocompletion\"><i class=\"material-icons\">link</i></a></h2>\n<p>Autocompletion can speed up your development time by providing you with\ncontextual possibilities and hints as you type. This example shows\nautocomplete in an interpolation. As you type it out,\nyou can hit tab to complete.</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-completion.gif\" alt=\"autocompletion\" width=\"480\" height=\"72\">\n</figure>\n<p>There are also completions within\nelements. Any elements you have as a component selector will\nshow up in the completion list.</p>\n<h2 id=\"error-checking\">Error checking<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#error-checking\"><i class=\"material-icons\">link</i></a></h2>\n<p>The Angular Language Service can also forewarn you of mistakes in your code.\nIn this example, Angular doesn't know what <code>orders</code> is or where it comes from.</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-error.gif\" alt=\"error checking\" width=\"480\" height=\"126\">\n</figure>\n<h2 id=\"navigation\">Navigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#navigation\"><i class=\"material-icons\">link</i></a></h2>\n<p>Navigation allows you to hover to\nsee where a component, directive, module, etc. is from and then\nclick and press F12 to go directly to its definition.</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-navigation.gif\" alt=\"navigation\" width=\"392\" height=\"186\">\n</figure>\n<h2 id=\"angular-language-service-in-your-editor\">Angular Language Service in your editor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#angular-language-service-in-your-editor\"><i class=\"material-icons\">link</i></a></h2>\n<p>Angular Language Service is currently available for <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> and\n<a href=\"https://www.jetbrains.com/webstorm\">WebStorm</a>.</p>\n<h3 id=\"visual-studio-code\">Visual Studio Code<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#visual-studio-code\"><i class=\"material-icons\">link</i></a></h3>\n<p>In Visual Studio Code, install Angular Language Service from the store,\nwhich is accessible from the bottom icon on the left menu pane.\nYou can also use the VS Quick Open (âŒ˜+P) to search for the extension. When you've opened it,\nenter the following command:</p>\n<code-example language=\"sh\">\next install Angular.ng-template\n</code-example>\n<p>Then click the install button to install the Angular Language Service.</p>\n<h3 id=\"webstorm\">WebStorm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#webstorm\"><i class=\"material-icons\">link</i></a></h3>\n<p>In webstorm, you have to install the language service as a dev dependency.\nWhen Angular sees this dev dependency, it provides the\nlanguage service inside of WebStorm. Webstorm then gives you\ncolorization inside the template and autocomplete in addition to the Angular Language Service.</p>\n<p>Here's the dev dependency\nyou need to have in <code>package.json</code>:</p>\n<code-example language=\"json\">\ndevDependencies {\n  \"@angular/language-service\": \"^6.0.0\"\n}\n</code-example>\n<p>Then in the terminal window at the root of your project,\ninstall the <code>devDependencies</code> with <code>npm</code> or <code>yarn</code>:</p>\n<code-example language=\"sh\">\nnpm install\n</code-example>\n<p><em>OR</em></p>\n<code-example language=\"sh\">\nyarn\n</code-example>\n<p><em>OR</em></p>\n<code-example language=\"sh\">\nyarn install\n</code-example>\n<h3 id=\"sublime-text\">Sublime Text<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#sublime-text\"><i class=\"material-icons\">link</i></a></h3>\n<p>In <a href=\"https://www.sublimetext.com/\">Sublime Text</a>, you first need an extension to allow Typescript.\nInstall the latest version of typescript in a local <code>node_modules</code> directory:</p>\n<code-example language=\"sh\">\nnpm install --save-dev typescript\n</code-example>\n<p>Then install the Angular Language Service in the same location:</p>\n<code-example language=\"sh\">\nnpm install --save-dev @angular/language-service\n</code-example>\n<p>Starting with TypeScript 2.3, TypeScript has a language service plugin model that the language service can use.</p>\n<p>Next, in your user preferences (<code>Cmd+,</code> or <code>Ctrl+,</code>), add:</p>\n<code-example language=\"json\">\n\"typescript-tsdk\": \"&#x3C;path to your folder>/node_modules/typescript/lib\"\n</code-example>\n<h2 id=\"installing-in-your-project\">Installing in your project<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#installing-in-your-project\"><i class=\"material-icons\">link</i></a></h2>\n<p>You can also install Angular Language Service in your project with the\nfollowing <code>npm</code> command:</p>\n<code-example language=\"sh\">\nnpm install --save-dev @angular/language-service\n</code-example>\n<p>Additionally, add the following to the <code>\"compilerOptions\"</code> section of\nyour project's <code>tsconfig.json</code>.</p>\n<code-example language=\"json\">\n  \"plugins\": [\n      {\"name\": \"@angular/language-service\"}\n  ]\n</code-example>\n<p>Note that this only provides diagnostics and completions in <code>.ts</code>\nfiles. You need a custom sublime plugin (or modifications to the current plugin)\nfor completions in HTML files.</p>\n<h2 id=\"how-the-language-service-works\">How the Language Service works<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#how-the-language-service-works\"><i class=\"material-icons\">link</i></a></h2>\n<p>When you use an editor with a language service, there's an\neditor process which starts a separate language process/service\nto which it speaks through an <a href=\"https://en.wikipedia.org/wiki/Remote_procedure_call\">RPC</a>.\nAny time you type inside of the editor, it sends information to the other process to\ntrack the state of your project. When you trigger a completion list within a template, the editor process first parses the template into an HTML AST, or <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\">abstract syntax tree</a>. Then the Angular compiler interprets\nwhat module the template is part of, the scope you're in, and the component selector. Then it figures out where in the template AST your cursor is. When it determines the\ncontext, it can then determine what the children can be.</p>\n<p>It's a little more involved if you are in an interpolation. If you have an interpolation of <code>{{data.---}}</code> inside a <code>div</code> and need the completion list after <code>data.---</code>, the compiler can't use the HTML AST to find the answer. The HTML AST can only tell the compiler that there is some text with the characters \"<code>{{data.---}}</code>\". That's when the template parser produces an expression AST, which resides within the template AST. The Angular Language Services then looks at <code>data.---</code> within its context and asks the TypeScript Language Service what the members of data are. TypeScript then returns the list of possibilities.</p>\n<p>For more in-depth information, see the\n<a href=\"https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\">Angular Language Service API</a></p>\n<hr>\n<h2 id=\"more-on-information\">More on Information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/language-service#more-on-information\"><i class=\"material-icons\">link</i></a></h2>\n<p>For more information, see <a href=\"https://www.youtube.com/watch?v=ez3R0Gi4z5A&#x26;t=368s\">Chuck Jazdzewski's presentation</a> on the Angular Language\nService from <a href=\"https://www.ng-conf.org/\">ng-conf</a> 2017.</p>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/language-service#angular-language-service\n - guide/language-service#angular-language-service-in-your-editor\n - guide/language-service#autocompletion\n - guide/language-service#error-checking\n - guide/language-service#how-the-language-service-works\n - guide/language-service#installing-in-your-project\n - guide/language-service#more-on-information\n - guide/language-service#navigation\n - guide/language-service#sublime-text\n - guide/language-service#visual-studio-code\n - guide/language-service#webstorm\n - https://code.visualstudio.com/\n - https://en.wikipedia.org/wiki/Abstract_syntax_tree\n - https://en.wikipedia.org/wiki/Remote_procedure_call\n - https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\n - https://github.com/angular/angular/edit/master/aio/content/guide/language-service.md?message=docs%3A%20describe%20your%20change...\n - https://www.jetbrains.com/webstorm\n - https://www.ng-conf.org/\n - https://www.sublimetext.com/\n - https://www.youtube.com/watch?v=ez3R0Gi4z5A&t=368s\n-->"
}