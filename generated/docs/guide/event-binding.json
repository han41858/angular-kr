{
  "id": "guide/event-binding",
  "title": "이벤트 바인딩",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/event-binding.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<!--\n# Event binding\n-->\n<h1 id=\"이벤트-바인딩\">이벤트 바인딩<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#이벤트-바인딩\"><i class=\"material-icons\">link</i></a></h1>\n<!--\nEvent binding allows you to listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches.\n\n<div class=\"alert is-helpful\">\n\nSee the <live-example></live-example> for a working example containing the code snippets in this guide.\n\n</div>\n-->\n<p>이벤트 바인딩 문법을 활용하면 키입력이나 마우스 이동, 클릭, 터치 이벤트에 반응할 수 있습니다.</p>\n<div class=\"alert is-helpful\">\n<p>이 문서에서 다루는 예제는 <live-example></live-example>에서 직접 확인하거나 다운받아 확인할 수 있습니다.</p>\n</div>\n<h2 id=\"binding-to-events\">Binding to events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-events\"><i class=\"material-icons\">link</i></a></h2>\n<p>To bind to an event you use the Angular event binding syntax.\nThis syntax consists of a target event name within parentheses to the left of an equal sign, and a quoted template statement to the right.\nIn the following example, the target event name is <code>click</code> and the template statement is <code>onSave()</code>.</p>\n<code-example language=\"html\" header=\"Event binding syntax\">\n&#x3C;button (click)=\"onSave()\">Save&#x3C;/button>\n</code-example>\n<p>The event binding listens for the button's click events and calls the component's <code>onSave()</code> method whenever a click occurs.</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/template-syntax/syntax-diagram.svg\" alt=\"Syntax diagram\" width=\"600\" height=\"125\">\n</div>\n-->\n이벤트 바인딩 문법을 활용하면 키입력이나 마우스 이동, 클릭, 터치 이벤트에 반응할 수 있습니다.\n<div class=\"alert is-helpful\">\n<p>이 문서에서 다루는 예제는 <live-example></live-example>에서 직접 확인하거나 다운받아 확인할 수 있습니다.</p>\n</div>\n<p>Angular 이벤트 바인딩 문법은 소괄호(<code>(</code>, <code>)</code>) 안에 <strong>대상이 되는 이벤트</strong>의 이름을 지정하고 등호(<code>=</code>)를 붙인 후 템플릿 실행문을 작성하면 됩니다.\n그래서 버튼에서 발생하는 클릭 이벤트를 감지하다가 이벤트가 발생했을 때 컴포넌트에 정의된 <code>onSave()</code> 메소드를 실행하려면 이렇게 작성하면 됩니다:</p>\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/template-syntax/syntax-diagram.svg\" alt=\"Syntax diagram\" width=\"600\" height=\"125\">\n</div>\n<a id=\"custom-events-with-eventemitter\"></a>\n<!--\n## Custom events with `EventEmitter`\n-->\n<h2 id=\"eventemitter로-커스텀-이벤트-생성하기\"><code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code>로 커스텀 이벤트 생성하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#eventemitter로-커스텀-이벤트-생성하기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\n[Directives](guide/built-in-directives) typically raise custom events with an Angular [EventEmitter](api/core/EventEmitter) as follows.\n\n1. The directive creates an `EventEmitter` and exposes it as a property.\n1. The directive then calls `EventEmitter.emit(data)` to emit an event, passing in message data, which can be anything.\n1. Parent directives listen for the event by binding to this property and accessing the data through the `$event` object.\n\nConsider an `ItemDetailComponent` that presents item information and responds to user actions.\nAlthough the `ItemDetailComponent` has a delete button, it doesn't contain the functionality to delete the hero.\nIt can only raise an event reporting the user's delete request.\n\n\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.html\" header=\"src/app/item-detail/item-detail.component.html (template)\" region=\"line-through\">\n&lt;img src=&quot;{{itemImageUrl}}&quot; [style.display]=&quot;displayNone&quot;&gt;\n&lt;span [style.text-decoration]=&quot;lineThrough&quot;&gt;{{ item.name }}\n&lt;/span&gt;\n&lt;button (click)=&quot;delete()&quot;&gt;Delete&lt;/button&gt;\n\n</code-example>\n\nThe component defines a `deleteRequest` property that returns an `EventEmitter`.\nWhen the user clicks **Delete**, the component invokes the `delete()` method, telling the `EventEmitter` to emit an `Item` object.\n\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.ts\" header=\"src/app/item-detail/item-detail.component.ts (deleteRequest)\" region=\"deleteRequest\">\n// 이 컴포넌트는 직접 히어로를 삭제하지 않고 히어로 삭제 요청을 보내기만 합니다.\n@Output() deleteRequest = new EventEmitter&lt;Item&gt;();\n\ndelete() {\n  this.deleteRequest.emit(this.item);\n  this.displayNone = this.displayNone ? &#39;&#39; : &#39;none&#39;;\n  this.lineThrough = this.lineThrough ? &#39;&#39; : &#39;line-through&#39;;\n}\n\n</code-example>\n\nThe hosting parent component binds to the `deleteRequest` event of the `ItemDetailComponent` as follows.\n\n<code-example path=\"event-binding/src/app/app.component.html\" header=\"src/app/app.component.html (event-binding-to-component)\" region=\"event-binding-to-component\">\n&lt;app-item-detail (deleteRequest)=&quot;deleteItem($event)&quot; [item]=&quot;currentItem&quot;&gt;&lt;/app-item-detail&gt;\n\n</code-example>\n\nWhen the `deleteRequest` event fires, Angular calls the parent component's `deleteItem()` method with the item.\n-->\n<p><a href=\"guide/built-in-directives\">디렉티브</a>에서 Angular <a href=\"api/core/EventEmitter\">EventEmitter</a> 클래스를 활용하면 커스텀 이벤트를 발생시킬 수 있습니다.</p>\n<ol>\n<li>디렉티브에 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 타입으로 프로퍼티를 선언하고 외부로 공개합니다.</li>\n<li>디렉티브에서 <code>EventEmitter.emit(data)</code> 를 실행하면 이벤트를 발생시키면서 데이터를 함께 전달할 수 있습니다.</li>\n<li>부모 디렉티브에서 이 이벤트가 발생하는 것을 감지하고 있다가 <code>$event</code> 객체로 자식 디렉티브에서 보낸 데이터를 활용하면 됩니다.</li>\n</ol>\n<p><code>ItemDetailComponent</code>는 히어로의 세부정보를 화면에 표시하고 사용자의 입력에 처리하는 컴포넌트입니다.\n그리고 <code>ItemDetailComponent</code>에는 삭제 버튼이 하나 있는데, <code>ItemDetailComponent</code>에서는 히어로를 삭제하는 방법을 알지 못합니다.\n이 컴포넌트는 사용자가 삭제 요청을 보냈다는 이벤트를 발생시키는 역할만 합니다.</p>\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.html\" header=\"src/app/item-detail/item-detail.component.html (템플릿)\" region=\"line-through\">\n&#x3C;img src=\"{{itemImageUrl}}\" [style.display]=\"displayNone\">\n&#x3C;span [style.text-decoration]=\"lineThrough\">{{ item.name }}\n&#x3C;/span>\n&#x3C;button (click)=\"delete()\">Delete&#x3C;/button>\n\n</code-example>\n<p>컴포넌트에 정의된 <code>deleteRequest</code> 프로퍼티는 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 타입으로 선언되어 있습니다.\n그리고 사용자가 <em>delete</em> 버튼을 클릭하면 <code>delete()</code> 메소드를 실행하며 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 클래스를 통해 <code>Item</code> 객체를 컴포넌트 외부로 보냅니다.</p>\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.ts\" header=\"src/app/item-detail/item-detail.component.ts (deleteRequest())\" region=\"deleteRequest\">\n// 이 컴포넌트는 직접 히어로를 삭제하지 않고 히어로 삭제 요청을 보내기만 합니다.\n@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() deleteRequest = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;Item>();\n\ndelete() {\n  this.deleteRequest.emit(this.item);\n  this.displayNone = this.displayNone ? '' : 'none';\n  this.lineThrough = this.lineThrough ? '' : 'line-through';\n}\n\n</code-example>\n<p>부모 컴포넌트에서는 <code>deleteRequest</code> 이벤트를 <code>deleteItem()</code> 메서드와 바인딩하고 있습니다.</p>\n<code-example path=\"event-binding/src/app/app.component.html\" header=\"src/app/app.component.html (event-binding-to-component)\" region=\"event-binding-to-component\">\n&#x3C;app-item-detail (deleteRequest)=\"deleteItem($event)\" [item]=\"currentItem\">&#x3C;/app-item-detail>\n\n</code-example>\n<p>이제 <code>deleteRequest</code> 이벤트가 발생하면 부모 컴포넌트의 <code>deleteItem()</code> 메서드가 실행됩니다.</p>\n<h3 id=\"determining-an-event-target\">Determining an event target<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#determining-an-event-target\"><i class=\"material-icons\">link</i></a></h3>\n<p>To determine an event target, Angular checks if the name of the target event matches an event property of a known directive.\nIn the following example, Angular checks to see if <code>myClick</code> is an event on the custom <code>ClickDirective</code>.</p>\n<code-example path=\"event-binding/src/app/app.component.html\" region=\"custom-directive\" header=\"src/app/app.component.html\">\n&#x3C;h4>myClick is an event on the custom ClickDirective:&#x3C;/h4>\n&#x3C;button (myClick)=\"clickMessage=$event\" clickable>click with myClick&#x3C;/button>\n{{clickMessage}}\n\n</code-example>\n<p>If the target event name, <code>myClick</code> fails to match an element event or an output property of <code>ClickDirective</code>, Angular reports an \"unknown directive\" error.</p>\n<hr>\n<h2 id=\"whats-next\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p>For more information on how event binding works, see <a href=\"guide/event-binding-concepts\">How event binding works</a>.</p>\n\n</div>\n\n<!-- links to this doc:\n - guide/ajs-quick-reference\n - guide/example-apps-list\n - guide/glossary\n - guide/inputs-outputs\n - guide/observables-in-angular\n - guide/property-binding\n - guide/template-syntax\n - guide/two-way-binding\n - guide/user-input\n - tutorial/toh-pt2\n - tutorial/toh-pt4\n-->\n<!-- links from this doc:\n - api/core/EventEmitter\n - api/core/Output\n - guide/built-in-directives\n - guide/event-binding#binding-to-events\n - guide/event-binding#determining-an-event-target\n - guide/event-binding#eventemitter로-커스텀-이벤트-생성하기\n - guide/event-binding#whats-next\n - guide/event-binding#이벤트-바인딩\n - guide/event-binding-concepts\n - https://github.com/angular/angular/edit/master/aio/content/guide/event-binding.md?message=docs%3A%20describe%20your%20change...\n-->"
}