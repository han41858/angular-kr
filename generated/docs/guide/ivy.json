{
  "id": "guide/ivy",
  "title": "Angular Ivy 도입하기",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/ivy.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<!--\n# Opting into Angular Ivy\n-->\n<h1 id=\"angular-ivy-도입하기\">Angular Ivy 도입하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#angular-ivy-도입하기\"><i class=\"material-icons\">link</i></a></h1>\n<!--\nIvy is the code name for Angular's [next-generation compilation and rendering pipeline](https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7). Starting with Angular version 8, you can choose to opt in to start using a preview version of Ivy and help in its continuing development and tuning.\n-->\n<p>Ivy는 <a href=\"https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7\">Angular의 차세대 컴파일 파이프라인이자 렌더링 파이프라인</a>을 의미하는 코드명입니다. Angular 8 버전부터는 이 Ivy의 시험판을 Angular 프로젝트에 적용해볼 수 있습니다.</p>\n<div class=\"alert is-helpful\">\n   <!--\n   To preview Ivy, use `@angular/core@next` version of Angular (8.1.x), rather than `@angular/core@latest` (8.0.x), as it contains all the latest bug fixes and improvements.\n   -->\n<p>   Ivy를 사용하려면 <code>@angular/core@latest</code> (8.0.x) 버전이 아니라 <code>@angular/core@next</code> (8.1.x) 버전을 사용해야 합니다. <code>@next</code> 버전은 <code>@latest</code> 버전에서 발견된 버그를 모두 수정한 버전입니다.</p>\n</div>\n<!--\n## Using Ivy in a new project\n-->\n<h2 id=\"ivy를-사용하는-프로젝트-생성하기\">Ivy를 사용하는 프로젝트 생성하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#ivy를-사용하는-프로젝트-생성하기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nTo start a new project with Ivy enabled, use the `--enable-ivy` flag with the [`ng new`](cli/new) command:\n-->\n<p>Ivy를 활성화한 채로 새 프로젝트를 생성하려면 <a href=\"cli/new\"><code>ng new</code></a> 명령을 실행할 때 <code>--enable-ivy</code> 플래그를 함께 사용하면 됩니다:</p>\n<code-example language=\"sh\">\nng new shiny-ivy-app --enable-ivy\n</code-example>\n<!--\nThe new project is automatically configured for Ivy. Specifically, the enableIvy option is set to `true` in the project's `tsconfig.app.json` file.\n-->\n<p>이 명령을 실행하면 Ivy를 사용할 수 있는 설정이 완료된 채로 프로젝트가 생성됩니다. 좀 더 정확하게 이야기하면, 프로젝트에 있는 <code>tsconfig.app.json</code> 파일의 <code>enableIvy</code> 옵션 값이 <code>true</code>로 설정됩니다.</p>\n<!--\n## Using Ivy in an existing project\n-->\n<h2 id=\"프로젝트에-ivy-도입하기\">프로젝트에 Ivy 도입하기<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#프로젝트에-ivy-도입하기\"><i class=\"material-icons\">link</i></a></h2>\n<!--\nTo update an existing project to use Ivy, set the `enableIvy` option in the `angularCompilerOptions` in your project's `tsconfig.app.json`.\n-->\n<p>이미 생성된 프로젝트에 Ivy를 도입하려면 프로젝트의 <code>tsconfig.app.json</code> 파일에 있는 <code>angularCompileOptions</code>에 <code>enableIvy</code> 옵션을 지정하면 됩니다.</p>\n<code-example language=\"json\">\n{\n  \"compilerOptions\": { ... },\n  \"angularCompilerOptions\": {\n    \"enableIvy\": true\n  }\n}\n</code-example>\n<!--\nAOT compilation with Ivy is faster and should be used by default. In the `angular.json` workspace configuration file, set the default build options for your project to always use AOT compilation.\n-->\n<p>Ivy를 사용하면 AOT 컴파일 속도도 빨라지기 때문에 앱을 빌드할 때 AOT 컴파일러를 기본 컴파일러로 사용하는 것이 좋습니다. 워크스페이스 환경 설정 파일 <code>angular.json</code> 파일을 열고 항상 AOT 컴파일러를 사용하도록 다음과 같이 설정합니다.</p>\n<code-example language=\"json\">\n{\n  \"projects\": {\n    \"my-existing-project\": {\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            ...\n            \"aot\": true,\n          }\n        }\n      }\n    }\n  }\n}\n</code-example>\n<!--\nTo stop using the Ivy compiler, set `enableIvy` to `false` in `tsconfig.app.json`, or remove it completely. Also remove `\"aot\": true` from your default build options if you didn't have it there before.\n-->\n<p>이후에 Ivy 컴파일러를 사용하지 않으려면 <code>tsconfig.app.json</code> 파일에 설정한 <code>enableIvy</code> 옵션을 <code>false</code>로 설정하거나 이 옵션 자체를 제거하면 됩니다. 그리고 이전에는 AOT 컴파일러를 사용하지 않았지만 Ivy를 도입하면서 <code>\"aot\": true</code> 옵션을 추가했다면 이 옵션도 제거하는 것이 좋습니다.</p>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - cli/new\n - guide/ivy#angular-ivy-도입하기\n - guide/ivy#ivy를-사용하는-프로젝트-생성하기\n - guide/ivy#프로젝트에-ivy-도입하기\n - https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7\n - https://github.com/angular/angular/edit/master/aio/content/guide/ivy.md?message=docs%3A%20describe%20your%20change...\n-->"
}