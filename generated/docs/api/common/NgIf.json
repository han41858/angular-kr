{
  "id": "api/common/NgIf",
  "title": "NgIf",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20describe%20your%20change...#L10-L173\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/common/src/directives/ng_if.ts#L10-L173\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/NgIf\", \"name\": \"NgIf\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"ngif\">NgIf<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngif\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p>Conditionally includes a template based on the value of an <code>expression</code>.</p>\n\n    <p><a href=\"api/common/NgIf#description\">See more...</a></p>\n  </section>\n  \n  \n  \n  \n\n  <h2 id=\"ngmodule\">NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngmodule\"><i class=\"material-icons\">link</i></a></h2>\n<ul class=\"ngmodule-list\">\n\n  <li>\n    <a href=\"api/common/CommonModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box\">CommonModule</code-example>\n    </a>\n  </li>\n  \n</ul>\n\n\n  \n<section class=\"selector-list\">\n  <h2 id=\"selectors\">Selectors<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <ul>\n    <li><code>[<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]</code></li>\n    \n  </ul>\n  \n</section>\n\n\n\n  \n\n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIf\"></a>\n          <code><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\"><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></span>: any</code>\n        </td>\n        <td><span class=\"write-only-property\">Write-only.</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIfThen\"></a>\n          <code><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\"><a href=\"api/common/NgIf#ngIfThen\" class=\"code-anchor\">ngIfThen</a></span>: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>> | null</code>\n        </td>\n        <td><span class=\"write-only-property\">Write-only.</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIfElse\"></a>\n          <code><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\"><a href=\"api/common/NgIf#ngIfElse\" class=\"code-anchor\">ngIfElse</a></span>: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>> | null</code>\n        </td>\n        <td><span class=\"write-only-property\">Write-only.</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n  \n\n\n  \n  <section class=\"description\">\n    <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p><code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> evaluates the <code>expression</code> and then renders the <code>then</code> or <code>else</code> template in its place\nwhen expression is truthy or falsy respectively. Typically the:</p>\n<ul>\n<li><code>then</code> template is the inline template of <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> unless bound to a different value.</li>\n<li><code>else</code> template is blank unless it is bound.</li>\n</ul>\n\n    <h3 id=\"most-common-usage\">Most common usage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#most-common-usage\"><i class=\"material-icons\">link</i></a></h3>\n<p>The most common usage of the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> directive is to conditionally show the inline template as\nseen in this example:\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfSimple\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-simple',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show\"><a href=\"api/http/ResponseContentType#Text\" class=\"code-anchor\">Text</a> to show&#x3C;/div>\n`\n})\nclass NgIfSimple {\n  show: boolean = true;\n}\n\n</code-example></p>\n<h3 id=\"showing-an-alternative-template-using-else\">Showing an alternative template using <code>else</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#showing-an-alternative-template-using-else\"><i class=\"material-icons\">link</i></a></h3>\n<p>If it is necessary to display a template when the <code>expression</code> is falsy use the <code>else</code> template\nbinding as shown. Note that the <code>else</code> binding points to a <code>&#x3C;ng-template></code> labeled <code>#elseBlock</code>.\nThe template can be defined anywhere in the component view but is typically placed right after\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> for readability.</p>\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfElse\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-else',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; else elseBlock\"><a href=\"api/http/ResponseContentType#Text\" class=\"code-anchor\">Text</a> to show&#x3C;/div>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nclass NgIfElse {\n  show: boolean = true;\n}\n\n</code-example>\n<h3 id=\"using-non-inlined-then-template\">Using non-inlined <code>then</code> template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#using-non-inlined-then-template\"><i class=\"material-icons\">link</i></a></h3>\n<p>Usually the <code>then</code> template is the inlined template of the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>, but it can be changed using\na binding (just like <code>else</code>). Because <code>then</code> and <code>else</code> are bindings, the template references can\nchange at runtime as shown in this example.</p>\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfThenElse\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-then-else',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    &#x3C;button (click)=\"switchPrimary()\">Switch Primary&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; then thenBlock; else elseBlock\">this is ignored&#x3C;/div>\n    &#x3C;ng-template #primaryBlock>Primary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #secondaryBlock>Secondary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nclass NgIfThenElse implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  thenBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  show: boolean = true;\n\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('primaryBlock')\n  primaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('secondaryBlock')\n  secondaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n\n  switchPrimary() {\n    this.thenBlock = this.thenBlock === this.primaryBlock ? this.secondaryBlock : this.primaryBlock;\n  }\n\n  ngOnInit() { this.thenBlock = this.primaryBlock; }\n}\n\n</code-example>\n<h3 id=\"storing-conditional-result-in-a-variable\">Storing conditional result in a variable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#storing-conditional-result-in-a-variable\"><i class=\"material-icons\">link</i></a></h3>\n<p>A common pattern is that we need to show a set of properties from the same object. If the\nobject is undefined, then we have to use the safe-traversal-operator <code>?.</code> to guard against\ndereferencing a <code>null</code> value. This is especially the case when waiting on async data such as\nwhen using the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe as shown in following example:</p>\n<code-example>\nHello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n</code-example>\n<p>There are several inefficiencies in the above example:</p>\n<ul>\n<li>We create multiple subscriptions on <code>userStream</code>. One for each <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe, or two in the\nexample above.</li>\n<li>We cannot display an alternative screen while waiting for the data to arrive asynchronously.</li>\n<li>We have to use the safe-traversal-operator <code>?.</code> to access properties, which is cumbersome.</li>\n<li>We have to place the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe in parenthesis.</li>\n</ul>\n<p>A better way to do this is to use <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> and store the result of the condition in a local\nvariable as shown in the the example below:</p>\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfAs\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-let',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;button (click)=\"nextUser()\">Next <a href=\"api/common/http/HttpEventType#User\" class=\"code-anchor\">User</a>&#x3C;/button>\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"userObservable | async as user; else loading\">\n      Hello {{user.last}}, {{user.first}}!\n    &#x3C;/div>\n    &#x3C;ng-template #loading let-user>Waiting... (user is {{user|<a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a>}})&#x3C;/ng-template>\n`\n})\nclass NgIfAs {\n  userObservable = new Subject&#x3C;{first: string, last: string}>();\n  first = ['John', 'Mike', 'Mary', 'Bob'];\n  firstIndex = 0;\n  last = ['Smith', 'Novotny', 'Angular'];\n  lastIndex = 0;\n\n  nextUser() {\n    let first = this.first[this.firstIndex++];\n    if (this.firstIndex >= this.first.length) this.firstIndex = 0;\n    let last = this.last[this.lastIndex++];\n    if (this.lastIndex >= this.last.length) this.lastIndex = 0;\n    this.userObservable.next({first, last});\n  }\n}\n\n</code-example>\n<p>Notice that:</p>\n<ul>\n<li>We use only one <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe and hence only one subscription gets created.</li>\n<li><code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> stores the result of the <code>userStream|async</code> in the local variable <code>user</code>.</li>\n<li>The local <code>user</code> can then be bound repeatedly in a more efficient way.</li>\n<li>No need to use the safe-traversal-operator <code>?.</code> to access properties as <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> will only\ndisplay the data if <code>userStream</code> returns a value.</li>\n<li>We can display an alternative template while waiting for the data.</li>\n</ul>\n<h3 id=\"syntax\">Syntax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#syntax\"><i class=\"material-icons\">link</i></a></h3>\n<p>Simple form:</p>\n<ul>\n<li><code>&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition\">...&#x3C;/div></code></li>\n<li><code>&#x3C;ng-template [<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]=\"condition\">&#x3C;div>...&#x3C;/div>&#x3C;/ng-template></code></li>\n</ul>\n<p>Form with an else block:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; else elseBlock\">...&#x3C;/div>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n<p>Form with a <code>then</code> and <code>else</code> block:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; then thenBlock else elseBlock\">&#x3C;/div>\n&#x3C;ng-template #thenBlock>...&#x3C;/ng-template>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n<p>Form with storing the value locally:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition as value; else elseBlock\">{{value}}&#x3C;/div>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n\n  </section>\n  \n\n  \n\n  \n\n<section class=\"static-methods\">\n  <h2 id=\"static-methods\">Static methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#static-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"ngTemplateGuard_ngIf\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ngtemplateguard_ngif\">\n        ngTemplateGuard_ngIf()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngtemplateguard_ngif\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20describe%20your%20change...#L163-L172\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/common/src/directives/ng_if.ts#L163-L172\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Assert the correct type of the expression bound to the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> input within the template.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">ngTemplateGuard_ngIf</span>&#x3C;E>(dir: NgIf, expr: E): expr is NonNullable&#x3C;E></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>dir</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>expr</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code>E</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/animations/AnimationTransitionMetadata#expr\" class=\"code-anchor\">expr</a> is NonNullable&#x3C;E></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>The presence of this method is a signal to the Ivy template type check compiler that when the\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> structural directive renders its template, the type of the expression bound to <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>\nshould be narrowed in some way. For <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>, it is narrowed to be non-null, which allows the\nstrictNullChecks feature of TypeScript to work with <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>.</p>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n  \n\n  \n  \n  \n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/animations/state\n - api/common\n - api/common/CommonModule\n - api/common/NgForOf\n - api/common/NgIfContext\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/NgZone\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgModelGroup\n - guide/ajs-quick-reference\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-components\n - guide/dependency-injection-in-action\n - guide/displaying-data\n - guide/docs-style-guide\n - guide/dynamic-form\n - guide/feature-modules\n - guide/form-validation\n - guide/frequent-ngmodules\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/router\n - guide/sharing-ngmodules\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/transition-and-triggers\n - guide/upgrade\n - presskit\n - tutorial/toh-pt2\n - tutorial/toh-pt3\n - tutorial/toh-pt4\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/animations/AnimationTransitionMetadata#expr\n - api/common\n - api/common/CommonModule\n - api/common/JsonPipe\n - api/common/NgIf#description\n - api/common/NgIf#most-common-usage\n - api/common/NgIf#ngIfElse\n - api/common/NgIf#ngIfThen\n - api/common/NgIf#ngif\n - api/common/NgIf#ngmodule\n - api/common/NgIf#ngtemplateguard_ngif\n - api/common/NgIf#properties\n - api/common/NgIf#selectors\n - api/common/NgIf#showing-an-alternative-template-using-else\n - api/common/NgIf#static-methods\n - api/common/NgIf#storing-conditional-result-in-a-variable\n - api/common/NgIf#syntax\n - api/common/NgIf#using-non-inlined-then-template\n - api/common/NgIfContext\n - api/common/http/HttpEventType#User\n - api/core/Component\n - api/core/Component#template\n - api/core/Input\n - api/core/OnInit\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/testing/async\n - api/http/ResponseContentType#Text\n - api/upgrade/static\n - https://github.com/angular/angular/edit/master/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20describe%20your%20change...#L10-L173\n - https://github.com/angular/angular/edit/master/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20describe%20your%20change...#L163-L172\n - https://github.com/angular/angular/tree/7.0.0/packages/common/src/directives/ng_if.ts#L10-L173\n - https://github.com/angular/angular/tree/7.0.0/packages/common/src/directives/ng_if.ts#L163-L172\n-->"
}