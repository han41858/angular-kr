{
  "id": "api/http/testing/MockBackend",
  "title": "MockBackend",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L108-L264\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L108-L264\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/http\", \"name\": \"@angular/http\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/http/testing\", \"name\": \"@angular/http/testing\" } },\n          { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/http/testing/MockBackend\", \"name\": \"MockBackend\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> > <a href=\"api/http\">@angular/http</a> > <a href=\"api/http/testing\">@angular/http/testing</a>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"mockbackend\">MockBackend<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#mockbackend\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label deprecated\">deprecated</label>\n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p>A mock backend for testing the <a href=\"api/http/Http\"><code>Http</code></a> service.</p>\n\n    <p><a href=\"api/http/testing/MockBackend#description\">See more...</a></p>\n  </section>\n  \n  \n<section class=\"deprecated\">\n  <p><strong>Deprecated:</strong> see <a href=\"https://angular.io/guide/http\">https://angular.io/guide/http</a></p>\n\n</section>\n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\">\nclass <a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a> implements <a class=\"code-anchor\" href=\"api/http/ConnectionBackend\">ConnectionBackend</a> {\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#connections\"><span class=\"member-name\">connections</span>: any</a>\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#connectionsArray\"><span class=\"member-name\">connectionsArray</span>: MockConnection[]</a>\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#pendingConnections\"><span class=\"member-name\">pendingConnections</span>: any</a>\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#verifyNoPendingRequests\"><span class=\"member-name\">verifyNoPendingRequests</span>()</a>\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#resolveAllConnections\"><span class=\"member-name\">resolveAllConnections</span>()</a>\n  <a class=\"code-anchor\" href=\"api/http/testing/MockBackend#createConnection\"><span class=\"member-name\">createConnection</span>(req: Request): MockConnection</a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>This class can be injected in tests, and should be used to override providers\nto other backends, such as <a href=\"api/http/XHRBackend\"><code>XHRBackend</code></a>.</p>\n\n</section>\n\n  \n\n\n\n\n\n\n\n\n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"connections\"></a>\n          <code><span class=\"member-name\"><a href=\"api/http/testing/MockBackend#connections\" class=\"code-anchor\">connections</a></span>: any</code>\n        </td>\n        <td>\n          <a href=\"api/core/EventEmitter\"><code>EventEmitter</code></a>\n<p>of <a href=\"api/http/testing/MockConnection\"><code>MockConnection</code></a> instances that have been created by this backend. Can be subscribed\nto in order to respond to connections.</p>\n\n          <p>This property only exists in the mock implementation, not in real Backends.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"connectionsArray\"></a>\n          <code><span class=\"member-name\"><a href=\"api/http/testing/MockBackend#connectionsArray\" class=\"code-anchor\">connectionsArray</a></span>: <a href=\"api/http/testing/MockConnection\" class=\"code-anchor\">MockConnection</a>[]</code>\n        </td>\n        <td>\n          <p>An array representation of <code><a href=\"api/http/testing/MockBackend#connections\" class=\"code-anchor\">connections</a></code>. This array will be updated with each connection that\nis created by this backend.</p>\n\n          <p>This property only exists in the mock implementation, not in real Backends.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"pendingConnections\"></a>\n          <code><span class=\"member-name\"><a href=\"api/http/testing/MockBackend#pendingConnections\" class=\"code-anchor\">pendingConnections</a></span>: any</code>\n        </td>\n        <td>\n          <a href=\"api/core/EventEmitter\"><code>EventEmitter</code></a>\n<p> of <a href=\"api/http/testing/MockConnection\"><code>MockConnection</code></a> instances that haven't yet been resolved (i.e.\nwith a <code>readyState</code>\nless than 4). Used internally to verify that no connections are pending via the\n<code>verifyNoPendingRequests</code> method.</p>\n\n          <p>This property only exists in the mock implementation, not in real Backends.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"verifyNoPendingRequests\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"verifynopendingrequests\">\n        verifyNoPendingRequests()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#verifynopendingrequests\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L230-L240\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L230-L240\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Checks all connections, and raises an exception if any connection has not received a response.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><span class=\"member-name\">verifyNoPendingRequests</span>()</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>This method only exists in the mock implementation, not in real Backends.</p>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"resolveAllConnections\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveallconnections\">\n        resolveAllConnections()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#resolveallconnections\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L241-L248\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L241-L248\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Can be used in conjunction with <code>verifyNoPendingRequests</code> to resolve any not-yet-resolve\nconnections, if it's expected that there are connections that have not yet received a response.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><span class=\"member-name\">resolveAllConnections</span>()</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>This method only exists in the mock implementation, not in real Backends.</p>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"createConnection\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"createconnection\">\n        createConnection()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#createconnection\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L249-L263\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L249-L263\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a new <a href=\"api/http/testing/MockConnection\"><code>MockConnection</code></a>. This is equivalent to calling <code>new <a href=\"api/http/testing/MockConnection\" class=\"code-anchor\">MockConnection</a>()</code>, except that it also will emit the new <code><a href=\"api/http/Connection\" class=\"code-anchor\">Connection</a></code> to the <code><a href=\"api/http/testing/MockBackend#connections\" class=\"code-anchor\">connections</a></code>\nemitter of this <code><a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a></code> instance. This method will usually only be used by tests\nagainst the framework itself, not by end-users.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><span class=\"member-name\">createConnection</span>(req: <a href=\"api/http/Request\" class=\"code-anchor\">Request</a>): <a href=\"api/http/testing/MockConnection\" class=\"code-anchor\">MockConnection</a></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>req</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/http/Request\" class=\"code-anchor\">Request</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/http/testing/MockConnection\" class=\"code-anchor\">MockConnection</a></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/testing/MockBackend#example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nimport {<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>, <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>} from '@angular/core';\nimport {<a href=\"api/core/testing/async\" class=\"code-anchor\">async</a>, <a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>, <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>} from '@angular/core/testing';\nimport {<a href=\"api/http/BaseRequestOptions\" class=\"code-anchor\">BaseRequestOptions</a>, <a href=\"api/http/ConnectionBackend\" class=\"code-anchor\">ConnectionBackend</a>, <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>, <a href=\"api/http/RequestOptions\" class=\"code-anchor\">RequestOptions</a>} from '@angular/<a href=\"api/common/http\" class=\"code-anchor\">http</a>';\nimport {<a href=\"api/common/http/HttpEventType#Response\" class=\"code-anchor\">Response</a>, <a href=\"api/http/ResponseOptions\" class=\"code-anchor\">ResponseOptions</a>} from '@angular/<a href=\"api/common/http\" class=\"code-anchor\">http</a>';\nimport {<a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>, <a href=\"api/http/testing/MockConnection\" class=\"code-anchor\">MockConnection</a>} from '@angular/<a href=\"api/common/http\" class=\"code-anchor\">http</a>/testing';\n\nconst HERO_ONE = 'HeroNrOne';\nconst HERO_TWO = 'WillBeAlwaysTheSecond';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass HeroService {\n  constructor(private <a href=\"api/common/http\" class=\"code-anchor\">http</a>: <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>) {}\n\n  getHeroes(): Promise&#x3C;String[]> {\n    return this.http.get('myservices.de/api/heroes')\n        .toPromise()\n        .then(response => response.json().data)\n        .catch(e => this.handleError(e));\n  }\n\n  private handleError(error: any): Promise&#x3C;any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n}\n\ndescribe('<a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a> HeroService Example', () => {\n  beforeEach(() => {\n    this.injector = Injector.create([\n      {provide: <a href=\"api/http/ConnectionBackend\" class=\"code-anchor\">ConnectionBackend</a>, useClass: <a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>},\n      {provide: <a href=\"api/http/RequestOptions\" class=\"code-anchor\">RequestOptions</a>, useClass: <a href=\"api/http/BaseRequestOptions\" class=\"code-anchor\">BaseRequestOptions</a>},\n      <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>,\n      HeroService,\n    ]);\n    this.heroService = this.injector.get(HeroService);\n    this.backend = this.injector.get(<a href=\"api/http/ConnectionBackend\" class=\"code-anchor\">ConnectionBackend</a>) as <a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>;\n    this.backend.connections.subscribe((connection: any) => this.lastConnection = connection);\n  });\n\n  it('getHeroes() should <a href=\"api/animations/query\" class=\"code-anchor\">query</a> current service url', () => {\n    this.heroService.getHeroes();\n    expect(this.lastConnection).toBeDefined('no <a href=\"api/common/http\" class=\"code-anchor\">http</a> service connection at all?');\n    expect(this.lastConnection.request.url).toMatch(/api\\/heroes$/, 'url invalid');\n  });\n\n  it('getHeroes() should return some heroes', <a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>(() => {\n       let result: String[];\n       this.heroService.getHeroes().then((heroes: String[]) => result = heroes);\n       this.lastConnection.mockRespond(new <a href=\"api/common/http/HttpEventType#Response\" class=\"code-anchor\">Response</a>(new <a href=\"api/http/ResponseOptions\" class=\"code-anchor\">ResponseOptions</a>({\n         body: JSON.stringify({data: [HERO_ONE, HERO_TWO]}),\n       })));\n       <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>();\n       expect(result.length).toEqual(2, 'should contain given amount of heroes');\n       expect(result[0]).toEqual(HERO_ONE, ' HERO_ONE should be the first hero');\n       expect(result[1]).toEqual(HERO_TWO, ' HERO_TWO should be the second hero');\n     }));\n\n  it('getHeroes() while server is down', <a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>(() => {\n       let result: String[];\n       let catchedError: any;\n       this.heroService.getHeroes()\n           .then((heroes: String[]) => result = heroes)\n           .catch((error: any) => catchedError = error);\n       this.lastConnection.mockError(new <a href=\"api/common/http/HttpEventType#Response\" class=\"code-anchor\">Response</a>(new <a href=\"api/http/ResponseOptions\" class=\"code-anchor\">ResponseOptions</a>({\n         status: 404,\n         statusText: '<a href=\"api/core/SecurityContext#URL\" class=\"code-anchor\">URL</a> not Found',\n       })));\n       <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>();\n       expect(result).toBeUndefined();\n       expect(catchedError).toBeDefined();\n     }));\n});\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/http/ConnectionBackend\n - api/http/Http\n - api/http/ResponseOptions\n - api/http/testing\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/animations/query\n - api/common/http\n - api/common/http/HttpEventType#Response\n - api/core/EventEmitter\n - api/core/Injectable\n - api/core/Injector\n - api/core/SecurityContext#URL\n - api/core/testing/async\n - api/core/testing/fakeAsync\n - api/core/testing/tick\n - api/http\n - api/http/BaseRequestOptions\n - api/http/Connection\n - api/http/ConnectionBackend\n - api/http/Http\n - api/http/Request\n - api/http/RequestOptions\n - api/http/ResponseOptions\n - api/http/XHRBackend\n - api/http/testing\n - api/http/testing/MockBackend#connections\n - api/http/testing/MockBackend#connectionsArray\n - api/http/testing/MockBackend#createConnection\n - api/http/testing/MockBackend#createconnection\n - api/http/testing/MockBackend#description\n - api/http/testing/MockBackend#example\n - api/http/testing/MockBackend#methods\n - api/http/testing/MockBackend#mockbackend\n - api/http/testing/MockBackend#pendingConnections\n - api/http/testing/MockBackend#properties\n - api/http/testing/MockBackend#resolveAllConnections\n - api/http/testing/MockBackend#resolveallconnections\n - api/http/testing/MockBackend#usage-notes\n - api/http/testing/MockBackend#verifyNoPendingRequests\n - api/http/testing/MockBackend#verifynopendingrequests\n - api/http/testing/MockConnection\n - https://angular.io/guide/http\n - https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L108-L264\n - https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L230-L240\n - https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L241-L248\n - https://github.com/angular/angular/edit/master/packages/http/testing/src/mock_backend.ts?message=docs(http)%3A%20describe%20your%20change...#L249-L263\n - https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L108-L264\n - https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L230-L240\n - https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L241-L248\n - https://github.com/angular/angular/tree/7.0.0/packages/http/testing/src/mock_backend.ts#L249-L263\n-->"
}