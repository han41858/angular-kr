{
  "id": "api/core/ReflectiveInjector",
  "title": "ReflectiveInjector",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L18-L268\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L18-L268\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ReflectiveInjector\", \"name\": \"ReflectiveInjector\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"reflectiveinjector\">ReflectiveInjector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#reflectiveinjector\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label deprecated\">deprecated</label>\n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p>A ReflectiveDependency injection container used for instantiating objects and resolving\ndependencies.</p>\n\n    <p><a href=\"api/core/ReflectiveInjector#description\">See more...</a></p>\n  </section>\n  \n  \n<section class=\"deprecated\">\n  <p><strong>Deprecated:</strong> from v5 - slow and brings in a lot of code, Use <code>Injector.create</code> instead.</p>\n\n</section>\n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\">\nabstract class <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a> implements <a class=\"code-anchor\" href=\"api/core/Injector\">Injector</a> {\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolve\">static <span class=\"member-name\">resolve</span>(providers: Provider[]): ResolvedReflectiveProvider[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndCreate\">static <span class=\"member-name\">resolveAndCreate</span>(providers: Provider[], parent?: Injector): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#fromResolvedProviders\">static <span class=\"member-name\">fromResolvedProviders</span>(providers: ResolvedReflectiveProvider[], parent?: Injector): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#parent\">abstract <span class=\"member-name\">parent</span>: Injector | null</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndCreateChild\">abstract <span class=\"member-name\">resolveAndCreateChild</span>(providers: Provider[]): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#createChildFromResolved\">abstract <span class=\"member-name\">createChildFromResolved</span>(providers: ResolvedReflectiveProvider[]): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndInstantiate\">abstract <span class=\"member-name\">resolveAndInstantiate</span>(provider: Provider): any</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#instantiateResolved\">abstract <span class=\"member-name\">instantiateResolved</span>(provider: ResolvedReflectiveProvider): any</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#get\">abstract <span class=\"member-name\">get</span>(token: any, notFoundValue?: any): any</a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>An <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> is a replacement for a <code>new</code> operator, which can automatically resolve the\nconstructor dependencies.</p>\n<p>In typical use, application code asks for the dependencies in the constructor and they are\nresolved by the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n\n</section>\n\n  \n\n\n\n\n<section class=\"static-methods\">\n  <h2 id=\"static-methods\">Static methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#static-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"resolve\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolve\">\n        resolve()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolve\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L57-L92\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L57-L92\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Turns an array of provider definitions into an array of resolved providers.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\"><a href=\"api/router/Route#resolve\" class=\"code-anchor\">resolve</a></span>(providers: Provider[]): ResolvedReflectiveProvider[]</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>providers</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>A resolution is a process of flattening multiple nested arrays and converting individual\nproviders into an array of <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a></code>s.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\nexpect(providers.length).toEqual(2);\n\nexpect(providers[0] instanceof <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>).toBe(true);\nexpect(providers[0].key.displayName).toBe(\"Car\");\nexpect(providers[0].dependencies.length).toEqual(1);\nexpect(providers[0].factory).toBeDefined();\n\nexpect(providers[1].key.displayName).toBe(\"Engine\");\n});\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"resolveAndCreate\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandcreate\">\n        resolveAndCreate()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandcreate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L93-L120\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L93-L120\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves an array of providers and creates an injector from those providers.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">resolveAndCreate</span>(providers: Provider[], parent?: Injector): ReflectiveInjector</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>providers</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>parent</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n      <p>Optional. Default is <code>undefined</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>The passed-in providers can be an array of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>, <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>,\nor a recursive array of more providers.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-1\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-1\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\nexpect(injector.get(Car) instanceof Car).toBe(true);\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"fromResolvedProviders\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"fromresolvedproviders\">\n        fromResolvedProviders()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#fromresolvedproviders\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L121-L148\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L121-L148\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates an injector from previously resolved providers.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">fromResolvedProviders</span>(providers: ResolvedReflectiveProvider[], parent?: Injector): ReflectiveInjector</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>providers</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>parent</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n      <p>Optional. Default is <code>undefined</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-2\">Returns</h4>\n<p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>This API is the recommended way to construct injectors in performance-sensitive parts.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-2\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-2\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar providers = ReflectiveInjector.resolve([Car, Engine]);\nvar injector = ReflectiveInjector.fromResolvedProviders(providers);\nexpect(injector.get(Car) instanceof Car).toBe(true);\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n</section>\n\n\n\n\n\n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"parent\"></a>\n          <code>abstract <span class=\"member-name\">parent</span>: Injector | null</code>\n        </td>\n        <td><span class=\"read-only-property\">Read-only.</span>\n          <p>Parent of this injector.</p>\n\n          <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"resolveAndCreateChild\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandcreatechild\">\n        resolveAndCreateChild()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandcreatechild\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L158-L183\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L158-L183\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves an array of providers and creates a child injector from those providers.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">abstract <span class=\"member-name\">resolveAndCreateChild</span>(providers: Provider[]): ReflectiveInjector</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>providers</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-3\">Returns</h4>\n<p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n<p>The passed-in providers can be an array of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>, <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>,\nor a recursive array of more providers.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-3\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-3\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\nclass ParentProvider {}\nclass ChildProvider {}\n\nvar parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\nvar child = parent.resolveAndCreateChild([ChildProvider]);\n\nexpect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\nexpect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\nexpect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"createChildFromResolved\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"createchildfromresolved\">\n        createChildFromResolved()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#createchildfromresolved\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L184-L211\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L184-L211\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a child injector from previously resolved providers.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">abstract <span class=\"member-name\">createChildFromResolved</span>(providers: ResolvedReflectiveProvider[]): ReflectiveInjector</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-4\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>providers</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-4\">Returns</h4>\n<p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n<p>This API is the recommended way to construct injectors in performance-sensitive parts.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-4\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-4\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\nclass ParentProvider {}\nclass ChildProvider {}\n\nvar parentProviders = ReflectiveInjector.resolve([ParentProvider]);\nvar childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\nvar parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\nvar child = parent.createChildFromResolved(childProviders);\n\nexpect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\nexpect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\nexpect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"resolveAndInstantiate\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandinstantiate\">\n        resolveAndInstantiate()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandinstantiate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L212-L238\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L212-L238\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves a provider and instantiates an object in the context of the injector.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">abstract <span class=\"member-name\">resolveAndInstantiate</span>(provider: Provider): any</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-5\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>provider</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-5\">Returns</h4>\n<p><code>any</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>The created object does not get cached by the injector.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-5\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-5\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\nvar car = injector.resolveAndInstantiate(Car);\nexpect(car.engine).toBe(injector.get(Engine));\nexpect(car).not.toBe(injector.resolveAndInstantiate(Car));\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"instantiateResolved\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"instantiateresolved\">\n        instantiateResolved()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#instantiateresolved\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L239-L265\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L239-L265\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Instantiates an object using a resolved provider in the context of the injector.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">abstract <span class=\"member-name\">instantiateResolved</span>(provider: ResolvedReflectiveProvider): any</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-6\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>provider</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-6\">Returns</h4>\n<p><code>any</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p>The created object does not get cached by the injector.</p>\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"example-6\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-6\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Engine]);\nvar carProvider = ReflectiveInjector.resolve([Car])[0];\nvar car = injector.instantiateResolved(carProvider);\nexpect(car.engine).toBe(injector.get(Engine));\nexpect(car).not.toBe(injector.instantiateResolved(carProvider));\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"get\">\n        get()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#get\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L266-L267\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L266-L267\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">abstract <span class=\"member-name\">get</span>(token: any, notFoundValue?: any): any</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-7\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>token</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code>any</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>notFoundValue</td>\n      \n      <td class=\"param-description\">\n            <p>Type: <code>any</code>.</p>\n      <p>Optional. Default is <code>undefined</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-7\">Returns</h4>\n<p><code>any</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"example-7\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-7\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example creates an <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> configured to create <code>Engine</code> and <code>Car</code>.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Engine {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\nvar car = injector.get(Car);\nexpect(car instanceof Car).toBe(true);\nexpect(car.engine instanceof Engine).toBe(true);\n</code-example>\n<p>Notice, we don't use the <code>new</code> operator because we explicitly want to have the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\nresolve all of the object's dependencies automatically.</p>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Injector\n - api/core/ReflectiveKey\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Injectable\n - api/core/Injector\n - api/core/Provider\n - api/core/ReflectiveInjector#createChildFromResolved\n - api/core/ReflectiveInjector#createchildfromresolved\n - api/core/ReflectiveInjector#description\n - api/core/ReflectiveInjector#example\n - api/core/ReflectiveInjector#example-1\n - api/core/ReflectiveInjector#example-2\n - api/core/ReflectiveInjector#example-3\n - api/core/ReflectiveInjector#example-4\n - api/core/ReflectiveInjector#example-5\n - api/core/ReflectiveInjector#example-6\n - api/core/ReflectiveInjector#example-7\n - api/core/ReflectiveInjector#fromResolvedProviders\n - api/core/ReflectiveInjector#fromresolvedproviders\n - api/core/ReflectiveInjector#get\n - api/core/ReflectiveInjector#instantiateResolved\n - api/core/ReflectiveInjector#instantiateresolved\n - api/core/ReflectiveInjector#methods\n - api/core/ReflectiveInjector#parent\n - api/core/ReflectiveInjector#properties\n - api/core/ReflectiveInjector#reflectiveinjector\n - api/core/ReflectiveInjector#resolve\n - api/core/ReflectiveInjector#resolveAndCreate\n - api/core/ReflectiveInjector#resolveAndCreateChild\n - api/core/ReflectiveInjector#resolveAndInstantiate\n - api/core/ReflectiveInjector#resolveandcreate\n - api/core/ReflectiveInjector#resolveandcreatechild\n - api/core/ReflectiveInjector#resolveandinstantiate\n - api/core/ReflectiveInjector#static-methods\n - api/core/ReflectiveInjector#usage-notes\n - api/core/ResolvedReflectiveProvider\n - api/core/Type\n - api/router/Route#resolve\n - api/upgrade/static\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L121-L148\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L158-L183\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L18-L268\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L184-L211\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L212-L238\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L239-L265\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L266-L267\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L57-L92\n - https://github.com/angular/angular/edit/master/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20describe%20your%20change...#L93-L120\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L121-L148\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L158-L183\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L18-L268\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L184-L211\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L212-L238\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L239-L265\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L266-L267\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L57-L92\n - https://github.com/angular/angular/tree/7.0.0/packages/core/src/di/reflective_injector.ts#L93-L120\n-->"
}