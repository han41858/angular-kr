{
  "id": "api/router/ROUTES",
  "title": "ROUTES",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/router_config_loader.ts?message=docs(router)%3A%20describe%20your%20change...#L21-L20\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/7.0.0/packages/router/src/router_config_loader.ts#L21-L20\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/ROUTES\", \"name\": \"ROUTES\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> > <a href=\"api/router\">@angular/router</a>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"routes\">ROUTES<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/ROUTES#routes\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label const\">const</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    \n    \n  </section>\n  \n  \n  \n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const <a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a>: <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;<a href=\"api/router/Route\" class=\"code-anchor\">Route</a>[][]>;\n  </code-example>\n\n  \n\n  \n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core/ANALYZE_FOR_ENTRY_COMPONENTS\n - api/router\n - api/router/PreloadAllModules\n - api/router/RouterModule\n - api/router/provideRoutes\n - api/router/testing/RouterTestingModule\n - guide/dependency-injection-providers\n-->\n<!-- links from this doc:\n - /api\n - api/core/InjectionToken\n - api/router\n - api/router/ROUTES#routes\n - api/router/Route\n - https://github.com/angular/angular/edit/master/packages/router/src/router_config_loader.ts?message=docs(router)%3A%20describe%20your%20change...#L21-L20\n - https://github.com/angular/angular/tree/7.0.0/packages/router/src/router_config_loader.ts#L21-L20\n-->"
}/Route#matcher\" class=\"code-anchor\">matcher</a></code> defines a custom strategy for path matching and supersedes <code>path</code> and <code><a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">pathMatch</a></code>.</li>\n<li><code>component</code> is a component type.</li>\n<li><code><a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a></code> is the url fragment which will replace the current matched segment.</li>\n<li><code>outlet</code> is the name of the outlet the component should be placed into.</li>\n<li><code><a href=\"api/router/Route#canActivate\" class=\"code-anchor\">canActivate</a></code> is an array of DI tokens used to look up CanActivate handlers. See\n<code><a href=\"api/router/CanActivate\" class=\"code-anchor\">CanActivate</a></code> for more info.</li>\n<li><code><a href=\"api/router/Route#canActivateChild\" class=\"code-anchor\">canActivateChild</a></code> is an array of DI tokens used to look up CanActivateChild handlers. See\n<code><a href=\"api/router/CanActivateChild\" class=\"code-anchor\">CanActivateChild</a></code> for more info.</li>\n<li><code><a href=\"api/router/Route#canDeactivate\" class=\"code-anchor\">canDeactivate</a></code> is an array of DI tokens used to look up CanDeactivate handlers. See\n<code><a href=\"api/router/CanDeactivate\" class=\"code-anchor\">CanDeactivate</a></code> for more info.</li>\n<li><code><a href=\"api/router/Route#canLoad\" class=\"code-anchor\">canLoad</a></code> is an array of DI tokens used to look up CanLoad handlers. See\n<code><a href=\"api/router/CanLoad\" class=\"code-anchor\">CanLoad</a></code> for more info.</li>\n<li><code>data</code> is additional data provided to the component via <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>.</li>\n<li><code><a href=\"api/router/Route#resolve\" class=\"code-anchor\">resolve</a></code> is a map of DI tokens used to look up data resolvers. See <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code> for more\ninfo.</li>\n<li><code><a href=\"api/router/Route#runGuardsAndResolvers\" class=\"code-anchor\">runGuardsAndResolvers</a></code> defines when guards and resolvers will be run. By default they run only\nwhen the matrix parameters of the route change. When set to <code>paramsOrQueryParamsChange</code> they\nwill also run when query params change. And when set to <code>always</code>, they will run every time.</li>\n<li><code>children</code> is an array of child route definitions.</li>\n<li><code><a href=\"api/router/Route#loadChildren\" class=\"code-anchor\">loadChildren</a></code> is a reference to lazy loaded child routes. See <code><a href=\"api/router/LoadChildren\" class=\"code-anchor\">LoadChildren</a></code> for more\ninfo.</li>\n</ul>\n\n</section>\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"simple-configuration\">Simple Configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#simple-configuration\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n[{\n  path: 'team/:id',\n component: Team,\n  children: [{\n    path: 'user/:name',\n    component: <a href=\"api/common/http/HttpEventType#User\" class=\"code-anchor\">User</a>\n  }]\n}]\n</code-example>\n<p>When navigating to <code>/team/11/user/bob</code>, the router will create the team component with the user\ncomponent in it.</p>\n<h3 id=\"multiple-outlets\">Multiple Outlets<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#multiple-outlets\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team\n}, {\n  path: 'chat/:user',\n  component: Chat\n  outlet: 'aux'\n}]\n</code-example>\n<p>When navigating to <code>/team/11(aux:chat/jim)</code>, the router will create the team component next to\nthe chat component. The chat component will be placed into the aux outlet.</p>\n<h3 id=\"wild-cards\">Wild Cards<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#wild-cards\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n[{\n  path: '**',\n  component: Sink\n}]\n</code-example>\n<p>Regardless of where you navigate to, the router will instantiate the sink component.</p>\n<h3 id=\"redirects\">Redirects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#redirects\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: 'legacy/user/:name',\n    <a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a>: 'user/:name'\n  }, {\n    path: 'user/:name',\n    component: <a href=\"api/common/http/HttpEventType#User\" class=\"code-anchor\">User</a>\n  }]\n}]\n</code-example>\n<p>When navigating to '/team/11/legacy/user/jim', the router will change the url to\n'/team/11/user/jim', and then will instantiate the team component with the user component\nin it.</p>\n<p>If the <code><a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a></code> value starts with a '/', then it is an absolute redirect. E.g., if in the\nexample above we change the <code><a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a></code> to <code>/user/:name</code>, the result url will be '/user/jim'.</p>\n<h3 id=\"empty-path\">Empty Path<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#empty-path\"><i class=\"material-icons\">link</i></a></h3>\n<p>Empty-path route configurations can be used to instantiate components that do not 'consume'\nany url segments. Let's look at the following configuration:</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: '',\n    component: AllUsers\n  }, {\n    path: 'user/:name',\n    component: <a href=\"api/common/http/HttpEventType#User\" class=\"code-anchor\">User</a>\n  }]\n}]\n</code-example>\n<p>When navigating to <code>/team/11</code>, the router will instantiate the AllUsers component.</p>\n<p>Empty-path routes can have children.</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: '',\n    component: WrapperCmp,\n    children: [{\n      path: 'user/:name',\n      component: <a href=\"api/common/http/HttpEventType#User\" class=\"code-anchor\">User</a>\n    }]\n  }]\n}]\n</code-example>\n<p>When navigating to <code>/team/11/user/jim</code>, the router will instantiate the wrapper component with\nthe user component in it.</p>\n<p>An empty path route inherits its parent's params and data. This is because it cannot have its\nown params, and, as a result, it often uses its parent's params and data as its own.</p>\n<h3 id=\"matching-strategy\">Matching Strategy<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#matching-strategy\"><i class=\"material-icons\">link</i></a></h3>\n<p>By default the router will look at what is left in the url, and check if it starts with\nthe specified path (e.g., <code>/team/11/user</code> starts with <code>team/:id</code>).</p>\n<p>We can change the matching strategy to make sure that the path covers the whole unconsumed url,\nwhich is akin to <code>unconsumedUrl === path</code> or <code>$</code> regular expressions.</p>\n<p>This is particularly important when redirecting empty-path routes.</p>\n<code-example>\n[{\n  path: '',\n  <a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">pathMatch</a>: 'prefix', //default\n  <a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a>: 'main'\n}, {\n  path: 'main',\n  component: Main\n}]\n</code-example>\n<p>Since an empty path is a prefix of any url, even when navigating to '/main', the router will\nstill apply the redirect.</p>\n<p>If <code><a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">pathMatch</a>: <a href=\"api/core/Version#full\" class=\"code-anchor\">full</a></code> is provided, the router will apply the redirect if and only if navigating to\n'/'.</p>\n<code-example>\n[{\n  path: '',\n  <a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">pathMatch</a>: '<a href=\"api/core/Version#full\" class=\"code-anchor\">full</a>',\n  <a href=\"api/router/Route#redirectTo\" class=\"code-anchor\">redirectTo</a>: 'main'\n}, {\n  path: 'main',\n  component: Main\n}]\n</code-example>\n<h3 id=\"componentless-routes\">Componentless Routes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#componentless-routes\"><i class=\"material-icons\">link</i></a></h3>\n<p>It is useful at times to have the ability to share parameters between sibling components.</p>\n<p>Say we have two components--ChildCmp and AuxCmp--that we want to put next to each other and both\nof them require some id parameter.</p>\n<p>One way to do that would be to have a bogus parent component, so both the siblings can get the id\nparameter from it. This is not ideal. Instead, you can use a componentless route.</p>\n<code-example>\n[{\n   path: 'parent/:id',\n   children: [\n     { path: '<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', component: MainChild },\n     { path: 'b', component: AuxChild, outlet: 'aux' }\n   ]\n}]\n</code-example>\n<p>So when navigating to <code>parent/10/(<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>//aux:b)</code>, the route will instantiate the main child and aux\nchild components next to each other. In this example, the application component\nhas to have the primary and aux outlets defined.</p>\n<p>The router will also merge the <code>params</code>, <code>data</code>, and <code><a href=\"api/router/Route#resolve\" class=\"code-anchor\">resolve</a></code> of the componentless parent into\nthe <code>params</code>, <code>data</code>, and <code><a href=\"api/router/Route#resolve\" class=\"code-anchor\">resolve</a></code> of the children. This is done because there is no component\nthat can inject the activated route of the componentless parent.</p>\n<p>This is especially useful when child components are defined as follows:</p>\n<code-example>\n[{\n   path: 'parent/:id',\n   children: [\n     { path: '', component: MainChild },\n     { path: '', component: AuxChild, outlet: 'aux' }\n   ]\n}]\n</code-example>\n<p>With this configuration in place, navigating to '/parent/10' will create the main child and aux\ncomponents.</p>\n<h3 id=\"lazy-loading\">Lazy Loading<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Routes#lazy-loading\"><i class=\"material-icons\">link</i></a></h3>\n<p>Lazy loading speeds up our application load time by splitting it into multiple bundles, and\nloading them on demand. The router is designed to make lazy loading simple and easy. Instead of\nproviding the children property, you can provide the <code><a href=\"api/router/Route#loadChildren\" class=\"code-anchor\">loadChildren</a></code> property, as follows:</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  <a href=\"api/router/Route#loadChildren\" class=\"code-anchor\">loadChildren</a>: 'team'\n}]\n</code-example>\n<p>The router will use registered NgModuleFactoryLoader to fetch an NgModule associated with 'team'.\nThen it will extract the set of routes defined in that NgModule, and will transparently add\nthose routes to the main configuration.</p>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/Data\n - api/router/LoadChildren\n - api/router/LoadChildrenCallback\n - api/router/ResolveData\n - api/router/Route\n - api/router/Router\n - api/router/RouterModule\n - api/router/RunGuardsAndResolvers\n - api/router/provideRoutes\n - api/router/testing/RouterTestingModule\n - guide/cheatsheet\n - guide/deployment\n - guide/entry-components\n - guide/lazy-loading-ngmodules\n - guide/ngmodule-faq\n - guide/router\n - guide/upgrade\n - guide/visual-studio-2015\n - tutorial/toh-pt5\n-->\n<!-- links from this doc:\n - /api\n - api/common/http/HttpEventType#User\n - api/core/Version#full\n - api/router\n - api/router/ActivatedRoute\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanDeactivate\n - api/router/CanLoad\n - api/router/LoadChildren\n - api/router/Resolve\n - api/router/Route\n - api/router/Route#canActivate\n - api/router/Route#canActivateChild\n - api/router/Route#canDeactivate\n - api/router/Route#canLoad\n - api/router/Route#loadChildren\n - api/router/Route#matcher\n - api/router/Route#pathMatch\n - api/router/Route#redirectTo\n - api/router/Route#resolve\n - api/router/Route#runGuardsAndResolvers\n - api/router/RouterLinkWithHref\n - api/router/Routes#componentless-routes\n - api/router/Routes#description\n - api/router/Routes#empty-path\n - api/router/Routes#lazy-loading\n - api/router/Routes#matching-strategy\n - api/router/Routes#multiple-outlets\n - api/router/Routes#redirects\n - api/router/Routes#routes\n - api/router/Routes#simple-configuration\n - api/router/Routes#usage-notes\n - api/router/Routes#wild-cards\n - https://github.com/angular/angular/edit/master/packages/router/src/config.ts?message=docs(router)%3A%20describe%20your%20change...#L14-L258\n - https://github.com/angular/angular/tree/7.0.0/packages/router/src/config.ts#L14-L258\n-->"
}