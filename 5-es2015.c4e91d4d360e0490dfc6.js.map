{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm2015/observers.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts","webpack:///./src/app/custom-elements/code/code-tabs.module.ts","webpack:///./node_modules/@angular/material/esm2015/tabs.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./node_modules/@angular/material/esm2015/card.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./src/app/custom-elements/code/code-tabs.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts.CodeTabsComponent.html","webpack:///./src/app/custom-elements/code/code-tabs.module.ngfactory.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","MutationObserverFactory","ContentObserver","CdkObserveContent","ObserversModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","[object Object]","callback","MutationObserver","ngInjectableDef","Object","factory","token","providedIn","_mutationObserverFactory","this","_observedElements","Map","forEach","_","element","_cleanupObserver","elementOrRef","observer","subscription","_observeElement","subscribe","unsubscribe","_unobserveElement","has","get","count","stream","create","mutations","next","observe","characterData","childList","subtree","set","disconnect","complete","delete","_contentObserver","_elementRef","_ngZone","event","_disabled","_currentSubscription","disabled","value","_unsubscribe","_subscribe","debounce","_debounce","runOutsideAngular","pipe","CodeTabsComponent","tabs","codeExamples","Array","from","content","nativeElement","querySelectorAll","tabContent","push","getTabInfo","codeComponents","toArray","codeComponent","i","code","class","getAttribute","innerHTML","language","linenums","path","region","header","code_tabs_module_CodeTabsModule","customElementComponent","_MAT_INK_BAR_POSITIONER","core","left","offsetLeft","width","offsetWidth","MatInkBar","_inkBarPositioner","show","requestAnimationFrame","_setStyles","style","visibility","positions","inkBar","tabs_MatTabLabel","portal","MatTabBase","_MatTabMixinBase","esm2015_core","tabs_MatTab","_viewContainerRef","super","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","changes","hasOwnProperty","_explicitContent","_implicitContent","tabs_MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","ngOnInit","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","tabs_MatTabBody","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","elementRef","focus","passiveEventListenerOptions","esm2015_platform","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatTabHeaderBase","_MatTabHeaderMixinBase","tabs_MatTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_selectedIndex","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","selectedIndex","coercion","_keyManager","updateActiveItemIndex","_tabLabelCount","_labelWrappers","length","updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","keycodes","keyCode","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","dirChange","of","resize","realign","a11y","withHorizontalOrientation","withWrap","updateActiveItem","merge","newFocusIndex","_setTabFocus","_previousPaginator","_handlePaginatorPress","_nextPaginator","textContent","_currentTextContent","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","transform","Math","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","getOffsetLeft","getOffsetWidth","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedLabelWrapper","_inkBar","alignToElement","timer","maxScrollDistance","distance","max","min","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupBase","_MatTabGroupMixinBase","tabs_MatTabGroup","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","_animationDuration","test","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","_tabs","_subscribeToTabLabels","_tabHeader","map","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","idx","MatTabsModule","RenderType_MatTabGroup","encapsulation","styles","data","View_MatTabGroup_3","_l","View_MatTabGroup_2","_ck","_v","parent","context","$implicit","templateLabel","View_MatTabGroup_4","View_MatTabGroup_1","en","$event","ad","component","_handleClick","fesm2015_animations","common","ngIf","disableRipple","_co","_getTabLabelId","_getTabIndex","_getTabContentId","ariaLabel","ariaLabelledby","unbounded","View_MatTabGroup_5","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","View_MatTabBody_0","RenderType_MatTabBody","bidi","View_MatTabGroup_0","_focusChanged","View_MatTabHeader_0","RenderType_MatTabHeader","scrolling","ngForOf","animation","type","name","definitions","offset","options","undefined","minHeight","expr","timings","View_MatTabBody_1","_portalHost","_onTranslateTabStarted","params","currVal_0","_handlePaginatorClick","_handleKeydown","_onContentChanges","observers","RenderType_MatTab","View_MatTab_1","View_MatTab_0","MatCard","MatCardModule","RenderType_MatCard","View_MatCard_0","RenderType_CodeTabsComponent","View_CodeTabsComponent_2","View_CodeTabsComponent_1","code_component_ngfactory","code_component","snack_bar","pretty_printer_service","copier_service","logger_service","View_CodeTabsComponent_0","View_CodeTabsComponent_Host_0","CodeTabsComponentNgFactory","CodeTabsModuleNgFactory","index_ngfactory","overlay","platform_browser","esm2015_button","code_module"],"mappings":"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","file":"5-es2015.c4e91d4d360e0490dfc6.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent',\n            },] },\n];\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\nclass ObserversModule {\n}\nObserversModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.js.map\n","/* tslint:disable component-selector */\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string|null;\n  code: string;\n  language: string|null;\n  linenums: any;\n  path: string;\n  region: string;\n  header: string|null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n\n    for (const tabContent of codeExamples) {\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: Element): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      header: tabContent.getAttribute('header')\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n// Boilerplate for applying mixins to MatTabHeader.\n/**\n * \\@docs-private\n */\nclass MatTabHeaderBase {\n}\n/** @type {?} */\nconst _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        this._selectedIndexChanged = this._selectedIndex != value;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n            this._keyManager.updateActiveItemIndex(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent;\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (platform.TRIDENT || platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement((/** @type {?} */ (selectedLabelWrapper)));\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform }\n];\nMatTabHeader.propDecorators = {\n    _labelWrappers: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }],\n    selectedIndex: [{ type: Input }],\n    selectFocusedIndex: [{ type: Output }],\n    indexFocused: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }],\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabNav.\n/**\n * \\@docs-private\n */\nclass MatTabNavBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     */\n    constructor(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        super(elementRef);\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    updateActiveLink(element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 8.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const dirChange = this._dir ? this._dir.change : of(null);\n            return merge(dirChange, this._viewportRuler.change(10))\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._alignInkBar()));\n        }));\n    }\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        if (this._activeLinkChanged) {\n            /** @type {?} */\n            const activeTab = this._tabLinks.find((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => tab.active));\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    _alignInkBar() {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color', 'disableRipple'],\n                template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n                styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n                host: { 'class': 'mat-tab-nav-bar' },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler }\n];\nMatTabNav.propDecorators = {\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabLinks: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    backgroundColor: [{ type: Input }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     */\n    constructor(_tabNavBar, _elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _focusMonitor.monitor(_elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this._elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabLinkRipple._removeTriggerEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor }\n];\nMatTabLink.propDecorators = {\n    active: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa23 };\n//# sourceMappingURL=tabs.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/bidi\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/cdk/portal\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/platform-browser/animations\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nvar MatTabsModuleNgFactory = i0.ɵcmf(i1.MatTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i7.PortalModule, i7.PortalModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i1.MatTabsModule, i1.MatTabsModule, [])]); });\nexport { MatTabsModuleNgFactory as MatTabsModuleNgFactory };\nvar styles_MatTabGroup = [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"];\nvar RenderType_MatTabGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabGroup, data: {} });\nexport { RenderType_MatTabGroup as RenderType_MatTabGroup };\nfunction View_MatTabGroup_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatTabGroup_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_3)), i0.ɵdid(1, 212992, null, 0, i7.CdkPortalOutlet, [i0.ComponentFactoryResolver, i0.ViewContainerRef], { portal: [0, \"portal\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.templateLabel; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_MatTabGroup_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.textLabel; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatTabGroup_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"cdkMonitorElementFocus\", \"\"], [\"class\", \"mat-tab-label mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTabLabelWrapper\", \"\"], [\"role\", \"tab\"]], [[8, \"id\", 0], [1, \"tabIndex\", 0], [1, \"aria-posinset\", 0], [1, \"aria-setsize\", 0], [1, \"aria-controls\", 0], [1, \"aria-selected\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-label-active\", null], [2, \"mat-ripple-unbounded\", null], [2, \"mat-tab-disabled\", null], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handleClick(_v.context.$implicit, i0.ɵnov(_v.parent, 3), _v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), i0.ɵdid(2, 147456, null, 0, i9.CdkMonitorFocus, [i0.ElementRef, i9.FocusMonitor], null, null), i0.ɵdid(3, 16384, [[3, 4]], 0, i1.MatTabLabelWrapper, [i0.ElementRef], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-label-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_2)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_4)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = (_v.context.$implicit.disabled || _co.disableRipple); _ck(_v, 1, 0, currVal_12); var currVal_13 = _v.context.$implicit.disabled; _ck(_v, 3, 0, currVal_13); var currVal_14 = _v.context.$implicit.templateLabel; _ck(_v, 6, 0, currVal_14); var currVal_15 = !_v.context.$implicit.templateLabel; _ck(_v, 8, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabLabelId(_v.context.index); var currVal_1 = _co._getTabIndex(_v.context.$implicit, _v.context.index); var currVal_2 = (_v.context.index + 1); var currVal_3 = _co._tabs.length; var currVal_4 = _co._getTabContentId(_v.context.index); var currVal_5 = (_co.selectedIndex == _v.context.index); var currVal_6 = (_v.context.$implicit.ariaLabel || null); var currVal_7 = ((!_v.context.$implicit.ariaLabel && _v.context.$implicit.ariaLabelledby) ? _v.context.$implicit.ariaLabelledby : null); var currVal_8 = (_co.selectedIndex == _v.context.index); var currVal_9 = i0.ɵnov(_v, 1).unbounded; var currVal_10 = i0.ɵnov(_v, 3).disabled; var currVal_11 = !!i0.ɵnov(_v, 3).disabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_MatTabGroup_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"], [\"role\", \"tabpanel\"]], [[8, \"id\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-body-active\", null]], [[null, \"_onCentered\"], [null, \"_onCentering\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"_onCentered\" === en)) {\n        var pd_0 = (_co._removeTabBodyWrapperHeight() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"_onCentering\" === en)) {\n        var pd_1 = (_co._setTabBodyWrapperHeight($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], { _content: [0, \"_content\"], origin: [1, \"origin\"], animationDuration: [2, \"animationDuration\"], position: [3, \"position\"] }, { _onCentering: \"_onCentering\", _onCentered: \"_onCentered\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.context.$implicit.content; var currVal_4 = _v.context.$implicit.origin; var currVal_5 = _co.animationDuration; var currVal_6 = _v.context.$implicit.position; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabContentId(_v.context.index); var currVal_1 = _co._getTabLabelId(_v.context.index); var currVal_2 = (_co.selectedIndex == _v.context.index); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatTabGroup_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _tabBodyWrapper: 0 }), i0.ɵqud(671088640, 2, { _tabHeader: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], [[null, \"indexFocused\"], [null, \"selectFocusedIndex\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"indexFocused\" === en)) {\n        var pd_0 = (_co._focusChanged($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectFocusedIndex\" === en)) {\n        var pd_1 = ((_co.selectedIndex = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(3, 7520256, [[2, 4], [\"tabHeader\", 4]], 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], { disableRipple: [0, \"disableRipple\"], selectedIndex: [1, \"selectedIndex\"] }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }), i0.ɵqud(603979776, 3, { _labelWrappers: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_MatTabGroup_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(7, 0, [[1, 0], [\"tabBodyWrapper\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_5)), i0.ɵdid(9, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.disableRipple; var currVal_3 = _co.selectedIndex; _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_4 = _co._tabs; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co._tabs; _ck(_v, 9, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 3)._getLayoutDirection() == \"rtl\"); _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MatTabGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-group\", [[\"class\", \"mat-tab-group\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, View_MatTabGroup_0, RenderType_MatTabGroup)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i1.MAT_TABS_CONFIG]], null, null), i0.ɵqud(603979776, 1, { _tabs: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 1).headerPosition === \"below\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabGroupNgFactory = i0.ɵccf(\"mat-tab-group\", i1.MatTabGroup, View_MatTabGroup_Host_0, { color: \"color\", disableRipple: \"disableRipple\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", backgroundColor: \"backgroundColor\" }, { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, []);\nexport { MatTabGroupNgFactory as MatTabGroupNgFactory };\nvar styles_MatTabBody = [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"];\nvar RenderType_MatTabBody = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabBody, data: { \"animation\": [{ type: 7, name: \"translateTab\", definitions: [{ type: 0, name: \"center, void, left-origin-center, right-origin-center\", styles: { type: 6, styles: { transform: \"none\" }, offset: null }, options: undefined }, { type: 0, name: \"left\", styles: { type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 0, name: \"right\", styles: { type: 6, styles: { transform: \"translate3d(100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => left, * => right, left => center, right => center\", animation: { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }, options: null }, { type: 1, expr: \"void => left-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }, { type: 1, expr: \"void => right-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatTabBody as RenderType_MatTabBody };\nfunction View_MatTabBody_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTabBody_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _portalHost: 0 }), (_l()(), i0.ɵeld(1, 0, [[\"content\", 1]], null, 4, \"div\", [[\"class\", \"mat-tab-body-content\"]], [[24, \"@translateTab\", 0]], [[null, \"@translateTab.start\"], [null, \"@translateTab.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@translateTab.start\" === en)) {\n        var pd_0 = (_co._onTranslateTabStarted($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@translateTab.done\" === en)) {\n        var pd_1 = (_co._translateTabComplete.next($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵpod(2, { animationDuration: 0 }), i0.ɵpod(3, { value: 0, params: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabBody_1)), i0.ɵdid(5, 212992, null, 0, i1.MatTabBodyPortal, [i0.ComponentFactoryResolver, i0.ViewContainerRef, i1.MatTabBody], null, null)], function (_ck, _v) { _ck(_v, 5, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co._position, _ck(_v, 2, 0, _co.animationDuration)); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MatTabBody_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"]], null, null, null, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabBodyNgFactory = i0.ɵccf(\"mat-tab-body\", i1.MatTabBody, View_MatTabBody_Host_0, { _content: \"content\", origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, []);\nexport { MatTabBodyNgFactory as MatTabBodyNgFactory };\nvar styles_MatTabHeader = [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"];\nvar RenderType_MatTabHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabHeader, data: {} });\nexport { RenderType_MatTabHeader as RenderType_MatTabHeader };\nexport function View_MatTabHeader_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), i0.ɵqud(402653184, 2, { _tabListContainer: 0 }), i0.ɵqud(402653184, 3, { _tabList: 0 }), i0.ɵqud(671088640, 4, { _nextPaginator: 0 }), i0.ɵqud(671088640, 5, { _previousPaginator: 0 }), (_l()(), i0.ɵeld(5, 0, [[5, 0], [\"previousPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"], [null, \"mousedown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handlePaginatorClick(\"before\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mousedown\" === en)) {\n        var pd_1 = (_co._handlePaginatorPress(\"before\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(6, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, [[2, 0], [\"tabListContainer\", 1]], null, 6, \"div\", [[\"class\", \"mat-tab-label-container\"]], null, [[null, \"keydown\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (_co._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(9, 0, [[3, 0], [\"tabList\", 1]], null, 5, \"div\", [[\"class\", \"mat-tab-list\"], [\"role\", \"tablist\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onContentChanges() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(10, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"div\", [[\"class\", \"mat-tab-labels\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(14, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null), (_l()(), i0.ɵeld(15, 0, [[4, 0], [\"nextPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"mousedown\"], [null, \"click\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mousedown\" === en)) {\n        var pd_0 = (_co._handlePaginatorPress(\"after\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co._handlePaginatorClick(\"after\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(16, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(17, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_co._disableScrollBefore || _co.disableRipple); _ck(_v, 6, 0, currVal_2); var currVal_5 = (_co._disableScrollAfter || _co.disableRipple); _ck(_v, 16, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._disableScrollBefore; var currVal_1 = i0.ɵnov(_v, 6).unbounded; _ck(_v, 5, 0, currVal_0, currVal_1); var currVal_3 = _co._disableScrollAfter; var currVal_4 = i0.ɵnov(_v, 16).unbounded; _ck(_v, 15, 0, currVal_3, currVal_4); }); }\nexport function View_MatTabHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], null, null, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(1, 7520256, null, 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], null, null), i0.ɵqud(603979776, 1, { _labelWrappers: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 1)._getLayoutDirection() == \"rtl\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabHeaderNgFactory = i0.ɵccf(\"mat-tab-header\", i1.MatTabHeader, View_MatTabHeader_Host_0, { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, [\"*\"]);\nexport { MatTabHeaderNgFactory as MatTabHeaderNgFactory };\nvar styles_MatTab = [];\nvar RenderType_MatTab = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTab, data: {} });\nexport { RenderType_MatTab as RenderType_MatTab };\nfunction View_MatTab_1(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTab_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _implicitContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2]], null, 0, null, View_MatTab_1))], null, null); }\nexport function View_MatTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 3, \"mat-tab\", [], null, null, null, View_MatTab_0, RenderType_MatTab)), i0.ɵdid(1, 770048, null, 2, i1.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 1, { templateLabel: 0 }), i0.ɵqud(335544320, 2, { _explicitContent: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabNgFactory = i0.ɵccf(\"mat-tab\", i1.MatTab, View_MatTab_Host_0, { disabled: \"disabled\", textLabel: \"label\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\" }, {}, [\"*\"]);\nexport { MatTabNgFactory as MatTabNgFactory };\nvar styles_MatTabNav = [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"];\nvar RenderType_MatTabNav = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabNav, data: {} });\nexport { RenderType_MatTabNav as RenderType_MatTabNav };\nexport function View_MatTabNav_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-links\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._alignInkBar() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(5, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null)], null, null); }\nexport function View_MatTabNav_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"mat-tab-nav-bar\"], [\"mat-tab-nav-bar\", \"\"]], null, null, null, View_MatTabNav_0, RenderType_MatTabNav)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabNav, [i0.ElementRef, [2, i4.Directionality], i0.NgZone, i0.ChangeDetectorRef, i11.ViewportRuler], null, null), i0.ɵqud(603979776, 1, { _tabLinks: 1 })], null, null); }\nvar MatTabNavNgFactory = i0.ɵccf(\"[mat-tab-nav-bar]\", i1.MatTabNav, View_MatTabNav_Host_0, { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, {}, [\"*\"]);\nexport { MatTabNavNgFactory as MatTabNavNgFactory };\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardContent {\n}\nMatCardContent.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-card-content',\n                host: { 'class': 'mat-card-content' }\n            },] },\n];\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.decorators = [\n    { type: Directive, args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            },] },\n];\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.decorators = [\n    { type: Directive, args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            },] },\n];\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                }\n            },] },\n];\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            },] },\n];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            },] },\n];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            },] },\n];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            },] },\n];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            },] },\n];\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            },] },\n];\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            },] },\n];\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n}\nMatCard.decorators = [\n    { type: Component, args: [{selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card' }\n            },] },\n];\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            },] },\n];\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-card-title-group',\n                template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n//# sourceMappingURL=card.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/platform-browser\";\nvar MatCardModuleNgFactory = i0.ɵcmf(i1.MatCardModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(1073742336, i3.MatCommonModule, i3.MatCommonModule, [[2, i3.MATERIAL_SANITY_CHECKS], [2, i4.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatCardModule, i1.MatCardModule, [])]); });\nexport { MatCardModuleNgFactory as MatCardModuleNgFactory };\nvar styles_MatCard = [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"];\nvar RenderType_MatCard = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCard, data: {} });\nexport { RenderType_MatCard as RenderType_MatCard };\nexport function View_MatCard_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), i0.ɵncd(null, 1)], null, null); }\nexport function View_MatCard_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, View_MatCard_0, RenderType_MatCard)), i0.ɵdid(1, 49152, null, 0, i1.MatCard, [], null, null)], null, null); }\nvar MatCardNgFactory = i0.ɵccf(\"mat-card\", i1.MatCard, View_MatCard_Host_0, {}, {}, [\"*\", \"mat-card-footer\"]);\nexport { MatCardNgFactory as MatCardNgFactory };\nvar styles_MatCardHeader = [];\nvar RenderType_MatCardHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardHeader, data: {} });\nexport { RenderType_MatCardHeader as RenderType_MatCardHeader };\nexport function View_MatCardHeader_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"mat-card-header-text\"]], null, null, null, null, null)), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-header\", [[\"class\", \"mat-card-header\"]], null, null, null, View_MatCardHeader_0, RenderType_MatCardHeader)), i0.ɵdid(1, 49152, null, 0, i1.MatCardHeader, [], null, null)], null, null); }\nvar MatCardHeaderNgFactory = i0.ɵccf(\"mat-card-header\", i1.MatCardHeader, View_MatCardHeader_Host_0, {}, {}, [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"]);\nexport { MatCardHeaderNgFactory as MatCardHeaderNgFactory };\nvar styles_MatCardTitleGroup = [];\nvar RenderType_MatCardTitleGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardTitleGroup, data: {} });\nexport { RenderType_MatCardTitleGroup as RenderType_MatCardTitleGroup };\nexport function View_MatCardTitleGroup_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardTitleGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-title-group\", [[\"class\", \"mat-card-title-group\"]], null, null, null, View_MatCardTitleGroup_0, RenderType_MatCardTitleGroup)), i0.ɵdid(1, 49152, null, 0, i1.MatCardTitleGroup, [], null, null)], null, null); }\nvar MatCardTitleGroupNgFactory = i0.ɵccf(\"mat-card-title-group\", i1.MatCardTitleGroup, View_MatCardTitleGroup_Host_0, {}, {}, [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"]);\nexport { MatCardTitleGroupNgFactory as MatCardTitleGroupNgFactory };\n","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../node_modules/@angular/material/tabs/typings/index.ngfactory\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code.component\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"./pretty-printer.service\";\nimport * as i7 from \"../../shared/copier.service\";\nimport * as i8 from \"../../shared/logger.service\";\nimport * as i9 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"./code-tabs.component\";\nvar styles_CodeTabsComponent = [];\nvar RenderType_CodeTabsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CodeTabsComponent, data: {} });\nexport { RenderType_CodeTabsComponent as RenderType_CodeTabsComponent };\nfunction View_CodeTabsComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.parent.context.$implicit.class, \"\"); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.header; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_CodeTabsComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 7, \"mat-tab\", [[\"style\", \"overflow-y: hidden;\"]], null, null, null, i1.View_MatTab_0, i1.RenderType_MatTab)), i0.ɵdid(1, 770048, [[3, 4]], 2, i2.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 4, { templateLabel: 0 }), i0.ɵqud(335544320, 5, { _explicitContent: 0 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CodeTabsComponent_2)), i0.ɵdid(5, 16384, [[4, 4]], 0, i2.MatTabLabel, [i0.TemplateRef, i0.ViewContainerRef], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 1, \"aio-code\", [], [[8, \"className\", 0]], null, null, i3.View_CodeComponent_0, i3.RenderType_CodeComponent)), i0.ɵdid(7, 573440, [[2, 4]], 0, i4.CodeComponent, [i5.MatSnackBar, i6.PrettyPrinter, i7.CopierService, i8.Logger], { language: [0, \"language\"], linenums: [1, \"linenums\"], path: [2, \"path\"], region: [3, \"region\"], header: [4, \"header\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { _ck(_v, 1, 0); var currVal_1 = _v.context.$implicit.language; var currVal_2 = _v.context.$implicit.linenums; var currVal_3 = _v.context.$implicit.path; var currVal_4 = _v.context.$implicit.region; var currVal_5 = _v.context.$implicit.header; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.class, \"\"); _ck(_v, 6, 0, currVal_0); }); }\nexport function View_CodeTabsComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { content: 0 }), i0.ɵqud(671088640, 2, { codeComponents: 1 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"content\", 1]], null, 1, \"div\", [[\"style\", \"display: none\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, i9.View_MatCard_0, i9.RenderType_MatCard)), i0.ɵdid(5, 49152, null, 0, i10.MatCard, [], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 4, \"mat-tab-group\", [[\"class\", \"code-tab-group mat-tab-group\"], [\"disableRipple\", \"\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, i1.View_MatTabGroup_0, i1.RenderType_MatTabGroup)), i0.ɵdid(7, 3325952, null, 1, i2.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i2.MAT_TABS_CONFIG]], { disableRipple: [0, \"disableRipple\"] }, null), i0.ɵqud(603979776, 3, { _tabs: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CodeTabsComponent_1)), i0.ɵdid(10, 278528, null, 0, i11.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"\"; _ck(_v, 7, 0, currVal_2); var currVal_3 = _co.tabs; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 7).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 7).headerPosition === \"below\"); _ck(_v, 6, 0, currVal_0, currVal_1); }); }\nexport function View_CodeTabsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"code-tabs\", [], null, null, null, View_CodeTabsComponent_0, RenderType_CodeTabsComponent)), i0.ɵdid(1, 4308992, null, 0, i12.CodeTabsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CodeTabsComponentNgFactory = i0.ɵccf(\"code-tabs\", i12.CodeTabsComponent, View_CodeTabsComponent_Host_0, { linenums: \"linenums\" }, {}, [\"*\"]);\nexport { CodeTabsComponentNgFactory as CodeTabsComponentNgFactory };\n","\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./code-tabs.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/snack-bar/typings/index.ngfactory\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code-tabs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"./pretty-printer.service\";\nimport * as i10 from \"../../shared/logger.service\";\nimport * as i11 from \"../../shared/copier.service\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/platform-browser\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/cdk/portal\";\nimport * as i16 from \"@angular/cdk/platform\";\nimport * as i17 from \"@angular/cdk/a11y\";\nimport * as i18 from \"@angular/material/tabs\";\nimport * as i19 from \"@angular/cdk/scrolling\";\nimport * as i20 from \"@angular/material/button\";\nimport * as i21 from \"@angular/material/snack-bar\";\nimport * as i22 from \"./code.module\";\nvar CodeTabsModuleNgFactory = i0.ɵcmf(i1.CodeTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatSnackBarContainerNgFactory, i2.SimpleSnackBarNgFactory, i3.CodeComponentNgFactory, i4.CodeTabsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality, [2, i5.Location]]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(4608, i9.PrettyPrinter, i9.PrettyPrinter, [i10.Logger]), i0.ɵmpd(4608, i11.CopierService, i11.CopierService, []), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i13.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i14.MatCardModule, i14.MatCardModule, []), i0.ɵmpd(1073742336, i15.PortalModule, i15.PortalModule, []), i0.ɵmpd(1073742336, i16.PlatformModule, i16.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i17.A11yModule, i17.A11yModule, []), i0.ɵmpd(1073742336, i18.MatTabsModule, i18.MatTabsModule, []), i0.ɵmpd(1073742336, i19.ScrollingModule, i19.ScrollingModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i20.MatButtonModule, i20.MatButtonModule, []), i0.ɵmpd(1073742336, i21.MatSnackBarModule, i21.MatSnackBarModule, []), i0.ɵmpd(1073742336, i22.CodeModule, i22.CodeModule, []), i0.ɵmpd(1073742336, i1.CodeTabsModule, i1.CodeTabsModule, [])]); });\nexport { CodeTabsModuleNgFactory as CodeTabsModuleNgFactory };\n"],"sourceRoot":""}