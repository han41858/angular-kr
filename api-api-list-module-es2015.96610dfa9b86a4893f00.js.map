{"version":3,"sources":["webpack:///src/app/custom-elements/api/api.service.ts","webpack:///src/app/custom-elements/api/api-list.component.html","webpack:///src/app/custom-elements/api/api-list.component.ts","webpack:///src/app/custom-elements/api/api-list.module.ts"],"names":["ApiService","http","logger","apiBase","apiListJsonDefault","firstTime","onDestroy","Subject","sectionsSubject","ReplaySubject","_sections","this","pipe","takeUntil","fetchSections","subscribe","sections","log","length","tap","forEach","section","deprecated","items","every","item","stability","next","src","url","get","err","error","SearchCriteria","query","status","type","ApiListComponent","apiService","locationService","showStatusMenu","showTypeMenu","criteriaSubject","searchCriteria","types","value","title","statuses","filteredSections","combineLatest","map","results","criteria","filterSection","initializeSearchCriteria","setSearchCriteria","toLowerCase","trim","toggleStatusMenu","toggleTypeMenu","sectionNameMatches","name","indexOf","filter","docType","securityRisk","search","q","queryEl","nativeElement","find","x","setSearch","undefined","Object","assign","setLocationSearch","setType","setStatus","setQuery","ApiListModule","customElementComponent"],"mappings":"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","file":"x","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { Logger } from 'app/shared/logger.service';\nimport { DOC_CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nexport interface ApiItem {\n  name: string;\n  title: string;\n  path: string;\n  docType: string;\n  stability: string;\n  securityRisk: boolean;\n}\n\nexport interface ApiSection {\n  path: string;\n  name: string;\n  title: string;\n  deprecated: boolean;\n  items: ApiItem[]|null;\n}\n\n@Injectable()\nexport class ApiService implements OnDestroy {\n\n  private apiBase = DOC_CONTENT_URL_PREFIX + 'api/';\n  private apiListJsonDefault = 'api-list.json';\n  private firstTime = true;\n  private onDestroy = new Subject();\n  private sectionsSubject = new ReplaySubject<ApiSection[]>(1);\n  private _sections = this.sectionsSubject.pipe(takeUntil(this.onDestroy));\n\n  /**\n   * Return a cached observable of API sections from a JSON file.\n   * API sections is an array of Angular top modules and metadata about their API documents (items).\n   */\n  get sections() {\n\n    if (this.firstTime) {\n      this.firstTime = false;\n      this.fetchSections(); // TODO: get URL for fetchSections by configuration?\n\n      // makes sectionsSubject hot; subscribe ensures stays alive (always refCount > 0);\n      this._sections.subscribe(sections => this.logger.log(`ApiService got API ${sections.length} section(s)`));\n    }\n\n    return this._sections.pipe(tap(sections => {\n      sections.forEach(section => {\n        section.deprecated = !!section.items &&\n            section.items.every(item => item.stability === 'deprecated');\n      });\n    }));\n  }\n\n  constructor(private http: HttpClient, private logger: Logger) { }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n  }\n\n /**\n  * Fetch API sections from a JSON file.\n  * API sections is an array of Angular top modules and metadata about their API documents (items).\n  * Updates `sections` observable\n  *\n  * @param [src] - Name of the api list JSON file\n  */\n  fetchSections(src?: string) {\n    // TODO: get URL by configuration?\n    const url = this.apiBase + (src || this.apiListJsonDefault);\n    this.http.get<ApiSection[]>(url)\n      .pipe(\n        takeUntil(this.onDestroy),\n        tap(() => this.logger.log(`Got API sections from ${url}`)),\n      )\n      .subscribe(\n        sections => this.sectionsSubject.next(sections),\n        (err: HttpErrorResponse) => {\n          // TODO: handle error\n          this.logger.error(err);\n          throw err; // rethrow for now.\n        }\n      );\n  }\n}\n","<div class=\"l-flex-wrap api-filter\">\r\n\r\n  <aio-select (change)=\"setType($event.option)\"\r\n              [options]=\"types\"\r\n              [selected]=\"type\"\r\n              [showSymbol]=\"true\"\r\n              label=\"Type:\">\r\n  </aio-select>\r\n\r\n  <aio-select (change)=\"setStatus($event.option)\"\r\n              [options]=\"statuses\"\r\n              [selected]=\"status\"\r\n              [disabled]=\"type.value === 'package'\"\r\n              label=\"Status:\">\r\n  </aio-select>\r\n\r\n  <div class=\"form-search\">\r\n    <input #filter placeholder=\"Filter\" (input)=\"setQuery($any($event.target).value)\" aria-label=\"Filter Search\">\r\n    <i class=\"material-icons\">search</i>\r\n  </div>\r\n</div>\r\n\r\n<article class=\"api-list-container l-content-small docs-content\">\r\n  <div *ngFor=\"let section of filteredSections | async\" >\r\n    <h2 *ngIf=\"section.items\"><a [href]=\"section.path\" [class.deprecated-api-item]=\"section.deprecated\">{{section.title}}</a></h2>\r\n    <ul class=\"api-list\" *ngIf=\"section.items && section.items.length\">\r\n      <ng-container *ngFor=\"let item of section.items\">\r\n        <li class=\"api-item\">\r\n          <a [href]=\"item.path\" [class.deprecated-api-item]=\"item.stability === 'deprecated'\">\r\n            <span class=\"symbol {{item.docType}}\"></span>\r\n            {{item.title}}\r\n          </a>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </div>\r\n</article>\r\n","/*\n* API List & Filter Component\n*\n* A page that displays a formatted list of the public Angular API entities.\n* Clicking on a list item triggers navigation to the corresponding API entity document.\n* Can add/remove API entity links based on filter settings.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\n\nimport { LocationService } from 'app/shared/location.service';\nimport { ApiItem, ApiSection, ApiService } from './api.service';\n\nimport { Option } from 'app/shared/select/select.component';\nimport { map } from 'rxjs/operators';\n\nclass SearchCriteria {\n  query ? = '';\n  status ? = 'all';\n  type ? = 'all';\n}\n\n@Component({\n  selector: 'aio-api-list',\n  templateUrl: './api-list.component.html',\n})\nexport class ApiListComponent implements OnInit {\n\n  filteredSections: Observable<ApiSection[]>;\n\n  showStatusMenu = false;\n  showTypeMenu = false;\n\n  private criteriaSubject = new ReplaySubject<SearchCriteria>(1);\n  private searchCriteria = new SearchCriteria();\n\n  status: Option;\n  type: Option;\n\n  // API types\n  types: Option[] = [\n    { value: 'all', title: 'All' },\n    { value: 'class', title: 'Class' },\n    { value: 'const', title: 'Const'},\n    { value: 'decorator', title: 'Decorator' },\n    { value: 'directive', title: 'Directive' },\n    { value: 'enum', title: 'Enum' },\n    { value: 'function', title: 'Function' },\n    { value: 'interface', title: 'Interface' },\n    { value: 'pipe', title: 'Pipe'},\n    { value: 'ngmodule', title: 'NgModule'},\n    { value: 'type-alias', title: 'Type alias' },\n    { value: 'package', title: 'Package'}\n  ];\n\n  statuses: Option[] = [\n    { value: 'all', title: 'All' },\n    { value: 'stable', title: 'Stable'},\n    { value: 'deprecated', title: 'Deprecated' },\n    { value: 'security-risk', title: 'Security Risk' }\n  ];\n\n  @ViewChild('filter', { static: true }) queryEl: ElementRef;\n\n  constructor(\n    private apiService: ApiService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.filteredSections =\n        combineLatest([\n          this.apiService.sections,\n          this.criteriaSubject,\n        ]).pipe(\n          map( results => ({ sections: results[0], criteria: results[1]})),\n          map( results => (\n               results.sections\n                  .map(section => ({ ...section, items: this.filterSection(section, results.criteria) }))\n          ))\n        );\n\n    this.initializeSearchCriteria();\n  }\n\n  // TODO: may need to debounce as the original did\n  // although there shouldn't be any perf consequences if we don't\n  setQuery(query: string) {\n    this.setSearchCriteria({query: (query || '').toLowerCase().trim() });\n  }\n\n  setStatus(status: Option) {\n    this.toggleStatusMenu();\n    this.status = status;\n    this.setSearchCriteria({status: status.value});\n  }\n\n  setType(type: Option) {\n    this.toggleTypeMenu();\n    this.type = type;\n    this.setSearchCriteria({type: type.value});\n  }\n\n  toggleStatusMenu() {\n    this.showStatusMenu = !this.showStatusMenu;\n  }\n\n  toggleTypeMenu() {\n    this.showTypeMenu = !this.showTypeMenu;\n  }\n\n  //////// Private //////////\n\n  private filterSection(section: ApiSection, { query, status, type }: SearchCriteria) {\n    const sectionNameMatches = !query || section.name.indexOf(query) !== -1;\n\n    const matchesQuery = (item: ApiItem) =>\n      sectionNameMatches || item.name.indexOf(query!) !== -1;\n    const matchesStatus = (item: ApiItem) =>\n      status === 'all' || status === item.stability || (status === 'security-risk' && item.securityRisk);\n    const matchesType = (item: ApiItem) =>\n      type === 'all' || type === item.docType;\n\n    const items = section.items!.filter(item =>\n      matchesType(item) && matchesStatus(item) && matchesQuery(item));\n\n    // If there are no items we still return an empty array if the section name matches and the type is 'package'\n    return items.length ? items : (sectionNameMatches && type === 'package') ? [] : null;\n  }\n\n  // Get initial search criteria from URL search params\n  private initializeSearchCriteria() {\n    const {query, status, type} = this.locationService.search();\n\n    const q = (query || '').toLowerCase();\n    // Hack: can't bind to query because input cursor always forced to end-of-line.\n    this.queryEl.nativeElement.value = q;\n\n    this.status = this.statuses.find(x => x.value === status) || this.statuses[0];\n    this.type = this.types.find(x => x.value === type) || this.types[0];\n\n    this.searchCriteria = {\n      query: q,\n      status: this.status.value,\n      type: this.type.value\n    };\n\n    this.criteriaSubject.next(this.searchCriteria);\n  }\n\n  private setLocationSearch() {\n    const {query, status, type} = this.searchCriteria;\n    const params = {\n      query:  query ? query : undefined,\n      status: status !== 'all' ? status : undefined,\n      type:   type   !== 'all' ? type   : undefined\n    };\n\n    this.locationService.setSearch('API Search', params);\n  }\n\n  private setSearchCriteria(criteria: SearchCriteria) {\n    this.criteriaSubject.next(Object.assign(this.searchCriteria, criteria));\n    this.setLocationSearch();\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApiListComponent } from './api-list.component';\nimport { ApiService } from './api.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ ApiListComponent ],\n  entryComponents: [ ApiListComponent ],\n  providers: [ ApiService ]\n})\nexport class ApiListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ApiListComponent;\n}\n"]}