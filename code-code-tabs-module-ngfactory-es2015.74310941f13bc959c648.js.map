{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm2015/observers.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts","webpack:///./src/app/custom-elements/code/code-tabs.module.ts","webpack:///./node_modules/@angular/material/esm2015/tabs.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./node_modules/@angular/material/card/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./src/app/custom-elements/code/code-tabs.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts.CodeTabsComponent.html","webpack:///./src/app/custom-elements/code/code-tabs.module.ngfactory.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","MutationObserverFactory","ContentObserver","CdkObserveContent","ObserversModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","[object Object]","callback","MutationObserver","ngInjectableDef","Object","factory","token","providedIn","_mutationObserverFactory","this","_observedElements","Map","forEach","_","element","_cleanupObserver","elementOrRef","observer","subscription","_observeElement","subscribe","unsubscribe","_unobserveElement","has","get","count","stream","create","mutations","next","observe","characterData","childList","subtree","set","disconnect","complete","delete","_contentObserver","_elementRef","_ngZone","event","_disabled","_currentSubscription","disabled","value","_unsubscribe","_subscribe","debounce","_debounce","runOutsideAngular","pipe","CodeTabsComponent","tabs","codeExamples","Array","from","content","nativeElement","querySelectorAll","tabContent","push","getTabInfo","codeComponents","toArray","codeComponent","i","code","class","getAttribute","innerHTML","language","linenums","path","region","header","code_tabs_module_CodeTabsModule","customElementComponent","_MAT_INK_BAR_POSITIONER","core","left","offsetLeft","width","offsetWidth","_inkBarPositioner","show","requestAnimationFrame","_setStyles","style","visibility","positions","inkBar","portal","MatTabBase","_MatTabMixinBase","esm2015_core","_viewContainerRef","super","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","changes","hasOwnProperty","_explicitContent","_implicitContent","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","ngOnInit","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","elementRef","focus","passiveEventListenerOptions","esm2015_platform","passive","MatTabHeaderBase","_MatTabHeaderMixinBase","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_selectedIndex","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","selectedIndex","coercion","_keyManager","updateActiveItemIndex","_tabLabelCount","_labelWrappers","length","updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","keycodes","keyCode","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","dirChange","of","resize","realign","a11y","withHorizontalOrientation","withWrap","updateActiveItem","merge","newFocusIndex","_setTabFocus","_previousPaginator","_handlePaginatorPress","_nextPaginator","textContent","_currentTextContent","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","transform","Math","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","getOffsetLeft","getOffsetWidth","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedLabelWrapper","_inkBar","alignToElement","timer","maxScrollDistance","distance","max","min","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupBase","_MatTabGroupMixinBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","_animationDuration","test","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","_tabs","_subscribeToTabLabels","_tabHeader","map","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","idx","RenderType_MatTabGroup","encapsulation","styles","data","View_MatTabGroup_3","_l","View_MatTabGroup_2","_ck","_v","parent","context","$implicit","templateLabel","View_MatTabGroup_4","View_MatTabGroup_1","en","$event","ad","component","_handleClick","fesm2015_animations","MatTabLabelWrapper","common","ngIf","disableRipple","_co","_getTabLabelId","_getTabIndex","_getTabContentId","ariaLabel","ariaLabelledby","unbounded","View_MatTabGroup_5","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","View_MatTabBody_0","RenderType_MatTabBody","tabs_MatTabBody","bidi","View_MatTabGroup_0","_focusChanged","View_MatTabHeader_0","RenderType_MatTabHeader","tabs_MatTabHeader","scrolling","ngForOf","animation","type","name","definitions","offset","options","undefined","minHeight","expr","timings","View_MatTabBody_1","_portalHost","_onTranslateTabStarted","params","tabs_MatTabBodyPortal","currVal_0","_handlePaginatorClick","_handleKeydown","_onContentChanges","observers","MatInkBar","RenderType_MatTab","View_MatTab_1","View_MatTab_0","RenderType_MatCard","View_MatCard_0","RenderType_CodeTabsComponent","View_CodeTabsComponent_2","View_CodeTabsComponent_1","tabs_MatTab","tabs_MatTabLabel","code_component_ngfactory","code_component","snack_bar","pretty_printer_service","copier_service","logger_service","View_CodeTabsComponent_0","MatCard","tabs_MatTabGroup","View_CodeTabsComponent_Host_0","CodeTabsComponentNgFactory","CodeTabsModuleNgFactory","index_ngfactory","overlay","platform_browser","MatCardModule","MatTabsModule","esm2015_button","code_module"],"mappings":"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","file":"code-code-tabs-module-ngfactory-es2015.74310941f13bc959c648.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent',\n            },] },\n];\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\nclass ObserversModule {\n}\nObserversModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.js.map\n","/* tslint:disable component-selector */\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string|null;\n  code: string;\n  language: string|null;\n  linenums: any;\n  path: string;\n  region: string;\n  header: string|null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n\n    for (const tabContent of codeExamples) {\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: Element): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      header: tabContent.getAttribute('header')\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n// Boilerplate for applying mixins to MatTabHeader.\n/**\n * \\@docs-private\n */\nclass MatTabHeaderBase {\n}\n/** @type {?} */\nconst _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        this._selectedIndexChanged = this._selectedIndex != value;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n            this._keyManager.updateActiveItemIndex(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent;\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (platform.TRIDENT || platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement((/** @type {?} */ (selectedLabelWrapper)));\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform }\n];\nMatTabHeader.propDecorators = {\n    _labelWrappers: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }],\n    selectedIndex: [{ type: Input }],\n    selectFocusedIndex: [{ type: Output }],\n    indexFocused: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }],\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabNav.\n/**\n * \\@docs-private\n */\nclass MatTabNavBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     */\n    constructor(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        super(elementRef);\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    updateActiveLink(element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 8.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const dirChange = this._dir ? this._dir.change : of(null);\n            return merge(dirChange, this._viewportRuler.change(10))\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._alignInkBar()));\n        }));\n    }\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        if (this._activeLinkChanged) {\n            /** @type {?} */\n            const activeTab = this._tabLinks.find((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => tab.active));\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    _alignInkBar() {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color', 'disableRipple'],\n                template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n                styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n                host: { 'class': 'mat-tab-nav-bar' },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler }\n];\nMatTabNav.propDecorators = {\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabLinks: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    backgroundColor: [{ type: Input }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     */\n    constructor(_tabNavBar, _elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _focusMonitor.monitor(_elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this._elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabLinkRipple._removeTriggerEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor }\n];\nMatTabLink.propDecorators = {\n    active: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa22 };\n//# sourceMappingURL=tabs.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/bidi\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/cdk/portal\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/platform-browser/animations\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nvar MatTabsModuleNgFactory = i0.ɵcmf(i1.MatTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i7.PortalModule, i7.PortalModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i1.MatTabsModule, i1.MatTabsModule, [])]); });\nexport { MatTabsModuleNgFactory as MatTabsModuleNgFactory };\nvar styles_MatTabGroup = [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"];\nvar RenderType_MatTabGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabGroup, data: {} });\nexport { RenderType_MatTabGroup as RenderType_MatTabGroup };\nfunction View_MatTabGroup_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatTabGroup_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_3)), i0.ɵdid(1, 212992, null, 0, i7.CdkPortalOutlet, [i0.ComponentFactoryResolver, i0.ViewContainerRef], { portal: [0, \"portal\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.templateLabel; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_MatTabGroup_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.textLabel; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatTabGroup_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"cdkMonitorElementFocus\", \"\"], [\"class\", \"mat-tab-label mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTabLabelWrapper\", \"\"], [\"role\", \"tab\"]], [[8, \"id\", 0], [1, \"tabIndex\", 0], [1, \"aria-posinset\", 0], [1, \"aria-setsize\", 0], [1, \"aria-controls\", 0], [1, \"aria-selected\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-label-active\", null], [2, \"mat-ripple-unbounded\", null], [2, \"mat-tab-disabled\", null], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handleClick(_v.context.$implicit, i0.ɵnov(_v.parent, 3), _v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), i0.ɵdid(2, 147456, null, 0, i9.CdkMonitorFocus, [i0.ElementRef, i9.FocusMonitor], null, null), i0.ɵdid(3, 16384, [[3, 4]], 0, i1.MatTabLabelWrapper, [i0.ElementRef], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-label-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_2)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_4)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = (_v.context.$implicit.disabled || _co.disableRipple); _ck(_v, 1, 0, currVal_12); var currVal_13 = _v.context.$implicit.disabled; _ck(_v, 3, 0, currVal_13); var currVal_14 = _v.context.$implicit.templateLabel; _ck(_v, 6, 0, currVal_14); var currVal_15 = !_v.context.$implicit.templateLabel; _ck(_v, 8, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabLabelId(_v.context.index); var currVal_1 = _co._getTabIndex(_v.context.$implicit, _v.context.index); var currVal_2 = (_v.context.index + 1); var currVal_3 = _co._tabs.length; var currVal_4 = _co._getTabContentId(_v.context.index); var currVal_5 = (_co.selectedIndex == _v.context.index); var currVal_6 = (_v.context.$implicit.ariaLabel || null); var currVal_7 = ((!_v.context.$implicit.ariaLabel && _v.context.$implicit.ariaLabelledby) ? _v.context.$implicit.ariaLabelledby : null); var currVal_8 = (_co.selectedIndex == _v.context.index); var currVal_9 = i0.ɵnov(_v, 1).unbounded; var currVal_10 = i0.ɵnov(_v, 3).disabled; var currVal_11 = !!i0.ɵnov(_v, 3).disabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_MatTabGroup_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"], [\"role\", \"tabpanel\"]], [[8, \"id\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-body-active\", null]], [[null, \"_onCentered\"], [null, \"_onCentering\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"_onCentered\" === en)) {\n        var pd_0 = (_co._removeTabBodyWrapperHeight() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"_onCentering\" === en)) {\n        var pd_1 = (_co._setTabBodyWrapperHeight($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], { _content: [0, \"_content\"], origin: [1, \"origin\"], animationDuration: [2, \"animationDuration\"], position: [3, \"position\"] }, { _onCentering: \"_onCentering\", _onCentered: \"_onCentered\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.context.$implicit.content; var currVal_4 = _v.context.$implicit.origin; var currVal_5 = _co.animationDuration; var currVal_6 = _v.context.$implicit.position; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabContentId(_v.context.index); var currVal_1 = _co._getTabLabelId(_v.context.index); var currVal_2 = (_co.selectedIndex == _v.context.index); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatTabGroup_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _tabBodyWrapper: 0 }), i0.ɵqud(671088640, 2, { _tabHeader: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], [[null, \"indexFocused\"], [null, \"selectFocusedIndex\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"indexFocused\" === en)) {\n        var pd_0 = (_co._focusChanged($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectFocusedIndex\" === en)) {\n        var pd_1 = ((_co.selectedIndex = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(3, 7520256, [[2, 4], [\"tabHeader\", 4]], 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], { disableRipple: [0, \"disableRipple\"], selectedIndex: [1, \"selectedIndex\"] }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }), i0.ɵqud(603979776, 3, { _labelWrappers: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_MatTabGroup_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(7, 0, [[1, 0], [\"tabBodyWrapper\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_5)), i0.ɵdid(9, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.disableRipple; var currVal_3 = _co.selectedIndex; _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_4 = _co._tabs; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co._tabs; _ck(_v, 9, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 3)._getLayoutDirection() == \"rtl\"); _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MatTabGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-group\", [[\"class\", \"mat-tab-group\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, View_MatTabGroup_0, RenderType_MatTabGroup)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i1.MAT_TABS_CONFIG]], null, null), i0.ɵqud(603979776, 1, { _tabs: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 1).headerPosition === \"below\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabGroupNgFactory = i0.ɵccf(\"mat-tab-group\", i1.MatTabGroup, View_MatTabGroup_Host_0, { color: \"color\", disableRipple: \"disableRipple\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", backgroundColor: \"backgroundColor\" }, { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, []);\nexport { MatTabGroupNgFactory as MatTabGroupNgFactory };\nvar styles_MatTabBody = [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"];\nvar RenderType_MatTabBody = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabBody, data: { \"animation\": [{ type: 7, name: \"translateTab\", definitions: [{ type: 0, name: \"center, void, left-origin-center, right-origin-center\", styles: { type: 6, styles: { transform: \"none\" }, offset: null }, options: undefined }, { type: 0, name: \"left\", styles: { type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 0, name: \"right\", styles: { type: 6, styles: { transform: \"translate3d(100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => left, * => right, left => center, right => center\", animation: { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }, options: null }, { type: 1, expr: \"void => left-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }, { type: 1, expr: \"void => right-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatTabBody as RenderType_MatTabBody };\nfunction View_MatTabBody_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTabBody_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _portalHost: 0 }), (_l()(), i0.ɵeld(1, 0, [[\"content\", 1]], null, 4, \"div\", [[\"class\", \"mat-tab-body-content\"]], [[24, \"@translateTab\", 0]], [[null, \"@translateTab.start\"], [null, \"@translateTab.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@translateTab.start\" === en)) {\n        var pd_0 = (_co._onTranslateTabStarted($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@translateTab.done\" === en)) {\n        var pd_1 = (_co._translateTabComplete.next($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵpod(2, { animationDuration: 0 }), i0.ɵpod(3, { value: 0, params: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabBody_1)), i0.ɵdid(5, 212992, null, 0, i1.MatTabBodyPortal, [i0.ComponentFactoryResolver, i0.ViewContainerRef, i1.MatTabBody], null, null)], function (_ck, _v) { _ck(_v, 5, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co._position, _ck(_v, 2, 0, _co.animationDuration)); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MatTabBody_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"]], null, null, null, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabBodyNgFactory = i0.ɵccf(\"mat-tab-body\", i1.MatTabBody, View_MatTabBody_Host_0, { _content: \"content\", origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, []);\nexport { MatTabBodyNgFactory as MatTabBodyNgFactory };\nvar styles_MatTabHeader = [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"];\nvar RenderType_MatTabHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabHeader, data: {} });\nexport { RenderType_MatTabHeader as RenderType_MatTabHeader };\nexport function View_MatTabHeader_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), i0.ɵqud(402653184, 2, { _tabListContainer: 0 }), i0.ɵqud(402653184, 3, { _tabList: 0 }), i0.ɵqud(671088640, 4, { _nextPaginator: 0 }), i0.ɵqud(671088640, 5, { _previousPaginator: 0 }), (_l()(), i0.ɵeld(5, 0, [[5, 0], [\"previousPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"], [null, \"mousedown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handlePaginatorClick(\"before\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mousedown\" === en)) {\n        var pd_1 = (_co._handlePaginatorPress(\"before\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(6, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, [[2, 0], [\"tabListContainer\", 1]], null, 6, \"div\", [[\"class\", \"mat-tab-label-container\"]], null, [[null, \"keydown\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (_co._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(9, 0, [[3, 0], [\"tabList\", 1]], null, 5, \"div\", [[\"class\", \"mat-tab-list\"], [\"role\", \"tablist\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onContentChanges() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(10, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"div\", [[\"class\", \"mat-tab-labels\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(14, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null), (_l()(), i0.ɵeld(15, 0, [[4, 0], [\"nextPaginator\", 1]], null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"mousedown\"], [null, \"click\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mousedown\" === en)) {\n        var pd_0 = (_co._handlePaginatorPress(\"after\") !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co._handlePaginatorClick(\"after\") !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (_co._stopInterval() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(16, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(17, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_co._disableScrollBefore || _co.disableRipple); _ck(_v, 6, 0, currVal_2); var currVal_5 = (_co._disableScrollAfter || _co.disableRipple); _ck(_v, 16, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._disableScrollBefore; var currVal_1 = i0.ɵnov(_v, 6).unbounded; _ck(_v, 5, 0, currVal_0, currVal_1); var currVal_3 = _co._disableScrollAfter; var currVal_4 = i0.ɵnov(_v, 16).unbounded; _ck(_v, 15, 0, currVal_3, currVal_4); }); }\nexport function View_MatTabHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], null, null, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(1, 7520256, null, 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone, i8.Platform], null, null), i0.ɵqud(603979776, 1, { _labelWrappers: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 1)._getLayoutDirection() == \"rtl\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabHeaderNgFactory = i0.ɵccf(\"mat-tab-header\", i1.MatTabHeader, View_MatTabHeader_Host_0, { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, [\"*\"]);\nexport { MatTabHeaderNgFactory as MatTabHeaderNgFactory };\nvar styles_MatTab = [];\nvar RenderType_MatTab = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTab, data: {} });\nexport { RenderType_MatTab as RenderType_MatTab };\nfunction View_MatTab_1(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTab_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _implicitContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2]], null, 0, null, View_MatTab_1))], null, null); }\nexport function View_MatTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 3, \"mat-tab\", [], null, null, null, View_MatTab_0, RenderType_MatTab)), i0.ɵdid(1, 770048, null, 2, i1.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 1, { templateLabel: 0 }), i0.ɵqud(335544320, 2, { _explicitContent: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabNgFactory = i0.ɵccf(\"mat-tab\", i1.MatTab, View_MatTab_Host_0, { disabled: \"disabled\", textLabel: \"label\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\" }, {}, [\"*\"]);\nexport { MatTabNgFactory as MatTabNgFactory };\nvar styles_MatTabNav = [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"];\nvar RenderType_MatTabNav = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabNav, data: {} });\nexport { RenderType_MatTabNav as RenderType_MatTabNav };\nexport function View_MatTabNav_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-links\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._alignInkBar() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(5, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null)], null, null); }\nexport function View_MatTabNav_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"mat-tab-nav-bar\"], [\"mat-tab-nav-bar\", \"\"]], null, null, null, View_MatTabNav_0, RenderType_MatTabNav)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabNav, [i0.ElementRef, [2, i4.Directionality], i0.NgZone, i0.ChangeDetectorRef, i11.ViewportRuler], null, null), i0.ɵqud(603979776, 1, { _tabLinks: 1 })], null, null); }\nvar MatTabNavNgFactory = i0.ɵccf(\"[mat-tab-nav-bar]\", i1.MatTabNav, View_MatTabNav_Host_0, { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, {}, [\"*\"]);\nexport { MatTabNavNgFactory as MatTabNavNgFactory };\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/platform-browser\";\nvar MatCardModuleNgFactory = i0.ɵcmf(i1.MatCardModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(1073742336, i3.MatCommonModule, i3.MatCommonModule, [[2, i3.MATERIAL_SANITY_CHECKS], [2, i4.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatCardModule, i1.MatCardModule, [])]); });\nexport { MatCardModuleNgFactory as MatCardModuleNgFactory };\nvar styles_MatCard = [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"];\nvar RenderType_MatCard = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCard, data: {} });\nexport { RenderType_MatCard as RenderType_MatCard };\nexport function View_MatCard_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), i0.ɵncd(null, 1)], null, null); }\nexport function View_MatCard_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, View_MatCard_0, RenderType_MatCard)), i0.ɵdid(1, 49152, null, 0, i1.MatCard, [], null, null)], null, null); }\nvar MatCardNgFactory = i0.ɵccf(\"mat-card\", i1.MatCard, View_MatCard_Host_0, {}, {}, [\"*\", \"mat-card-footer\"]);\nexport { MatCardNgFactory as MatCardNgFactory };\nvar styles_MatCardHeader = [];\nvar RenderType_MatCardHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardHeader, data: {} });\nexport { RenderType_MatCardHeader as RenderType_MatCardHeader };\nexport function View_MatCardHeader_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"mat-card-header-text\"]], null, null, null, null, null)), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-header\", [[\"class\", \"mat-card-header\"]], null, null, null, View_MatCardHeader_0, RenderType_MatCardHeader)), i0.ɵdid(1, 49152, null, 0, i1.MatCardHeader, [], null, null)], null, null); }\nvar MatCardHeaderNgFactory = i0.ɵccf(\"mat-card-header\", i1.MatCardHeader, View_MatCardHeader_Host_0, {}, {}, [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"]);\nexport { MatCardHeaderNgFactory as MatCardHeaderNgFactory };\nvar styles_MatCardTitleGroup = [];\nvar RenderType_MatCardTitleGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardTitleGroup, data: {} });\nexport { RenderType_MatCardTitleGroup as RenderType_MatCardTitleGroup };\nexport function View_MatCardTitleGroup_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardTitleGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-title-group\", [[\"class\", \"mat-card-title-group\"]], null, null, null, View_MatCardTitleGroup_0, RenderType_MatCardTitleGroup)), i0.ɵdid(1, 49152, null, 0, i1.MatCardTitleGroup, [], null, null)], null, null); }\nvar MatCardTitleGroupNgFactory = i0.ɵccf(\"mat-card-title-group\", i1.MatCardTitleGroup, View_MatCardTitleGroup_Host_0, {}, {}, [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"]);\nexport { MatCardTitleGroupNgFactory as MatCardTitleGroupNgFactory };\n","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../node_modules/@angular/material/tabs/typings/index.ngfactory\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code.component\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"./pretty-printer.service\";\nimport * as i7 from \"../../shared/copier.service\";\nimport * as i8 from \"../../shared/logger.service\";\nimport * as i9 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"./code-tabs.component\";\nvar styles_CodeTabsComponent = [];\nvar RenderType_CodeTabsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CodeTabsComponent, data: {} });\nexport { RenderType_CodeTabsComponent as RenderType_CodeTabsComponent };\nfunction View_CodeTabsComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.parent.context.$implicit.class, \"\"); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.header; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_CodeTabsComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 7, \"mat-tab\", [[\"style\", \"overflow-y: hidden;\"]], null, null, null, i1.View_MatTab_0, i1.RenderType_MatTab)), i0.ɵdid(1, 770048, [[3, 4]], 2, i2.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(603979776, 4, { templateLabel: 0 }), i0.ɵqud(335544320, 5, { _explicitContent: 0 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CodeTabsComponent_2)), i0.ɵdid(5, 16384, [[4, 4]], 0, i2.MatTabLabel, [i0.TemplateRef, i0.ViewContainerRef], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 1, \"aio-code\", [], [[8, \"className\", 0]], null, null, i3.View_CodeComponent_0, i3.RenderType_CodeComponent)), i0.ɵdid(7, 573440, [[2, 4]], 0, i4.CodeComponent, [i5.MatSnackBar, i6.PrettyPrinter, i7.CopierService, i8.Logger], { language: [0, \"language\"], linenums: [1, \"linenums\"], path: [2, \"path\"], region: [3, \"region\"], header: [4, \"header\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { _ck(_v, 1, 0); var currVal_1 = _v.context.$implicit.language; var currVal_2 = _v.context.$implicit.linenums; var currVal_3 = _v.context.$implicit.path; var currVal_4 = _v.context.$implicit.region; var currVal_5 = _v.context.$implicit.header; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.class, \"\"); _ck(_v, 6, 0, currVal_0); }); }\nexport function View_CodeTabsComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { content: 0 }), i0.ɵqud(671088640, 2, { codeComponents: 1 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"content\", 1]], null, 1, \"div\", [[\"style\", \"display: none\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, i9.View_MatCard_0, i9.RenderType_MatCard)), i0.ɵdid(5, 49152, null, 0, i10.MatCard, [], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 4, \"mat-tab-group\", [[\"class\", \"code-tab-group mat-tab-group\"], [\"disableRipple\", \"\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, i1.View_MatTabGroup_0, i1.RenderType_MatTabGroup)), i0.ɵdid(7, 3325952, null, 1, i2.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef, [2, i2.MAT_TABS_CONFIG]], { disableRipple: [0, \"disableRipple\"] }, null), i0.ɵqud(603979776, 3, { _tabs: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CodeTabsComponent_1)), i0.ɵdid(10, 278528, null, 0, i11.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"\"; _ck(_v, 7, 0, currVal_2); var currVal_3 = _co.tabs; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 7).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 7).headerPosition === \"below\"); _ck(_v, 6, 0, currVal_0, currVal_1); }); }\nexport function View_CodeTabsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"code-tabs\", [], null, null, null, View_CodeTabsComponent_0, RenderType_CodeTabsComponent)), i0.ɵdid(1, 4308992, null, 0, i12.CodeTabsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CodeTabsComponentNgFactory = i0.ɵccf(\"code-tabs\", i12.CodeTabsComponent, View_CodeTabsComponent_Host_0, { linenums: \"linenums\" }, {}, [\"*\"]);\nexport { CodeTabsComponentNgFactory as CodeTabsComponentNgFactory };\n","\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./code-tabs.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/snack-bar/typings/index.ngfactory\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code-tabs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"./pretty-printer.service\";\nimport * as i10 from \"../../shared/logger.service\";\nimport * as i11 from \"../../shared/copier.service\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/platform-browser\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/cdk/portal\";\nimport * as i16 from \"@angular/cdk/platform\";\nimport * as i17 from \"@angular/cdk/a11y\";\nimport * as i18 from \"@angular/material/tabs\";\nimport * as i19 from \"@angular/cdk/scrolling\";\nimport * as i20 from \"@angular/material/button\";\nimport * as i21 from \"@angular/material/snack-bar\";\nimport * as i22 from \"./code.module\";\nvar CodeTabsModuleNgFactory = i0.ɵcmf(i1.CodeTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatSnackBarContainerNgFactory, i2.SimpleSnackBarNgFactory, i3.CodeComponentNgFactory, i4.CodeTabsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality, [2, i5.Location]]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(4608, i9.PrettyPrinter, i9.PrettyPrinter, [i10.Logger]), i0.ɵmpd(4608, i11.CopierService, i11.CopierService, []), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i13.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i14.MatCardModule, i14.MatCardModule, []), i0.ɵmpd(1073742336, i15.PortalModule, i15.PortalModule, []), i0.ɵmpd(1073742336, i16.PlatformModule, i16.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i17.A11yModule, i17.A11yModule, []), i0.ɵmpd(1073742336, i18.MatTabsModule, i18.MatTabsModule, []), i0.ɵmpd(1073742336, i19.ScrollingModule, i19.ScrollingModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i20.MatButtonModule, i20.MatButtonModule, []), i0.ɵmpd(1073742336, i21.MatSnackBarModule, i21.MatSnackBarModule, []), i0.ɵmpd(1073742336, i22.CodeModule, i22.CodeModule, []), i0.ɵmpd(1073742336, i1.CodeTabsModule, i1.CodeTabsModule, [])]); });\nexport { CodeTabsModuleNgFactory as CodeTabsModuleNgFactory };\n"],"sourceRoot":""}